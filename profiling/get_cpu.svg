<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="789"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="789"> </text>
<g id="frames">
<g>
<title>all (815 samples, 100.00%)</title><rect x="10.0" y="755.0" width="1180.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="766.0">all</text>
</g>
<g>
<title>Klass::klass_holder() const (1 samples, 0.12%)</title><rect x="10.0" y="739.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.25%)</title><rect x="11.4" y="739.0" width="2.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="14.4" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.12%)</title><rect x="12.9" y="723.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.9" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (812 samples, 99.63%)</title><rect x="14.3" y="739.0" width="1175.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.3" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.12%)</title><rect x="14.3" y="723.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 0.49%)</title><rect x="15.8" y="723.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 0.49%)</title><rect x="15.8" y="707.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.8" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (46 samples, 5.64%)</title><rect x="21.6" y="723.0" width="66.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.6" y="734.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (46 samples, 5.64%)</title><rect x="21.6" y="707.0" width="66.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.6" y="718.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.12%)</title><rect x="27.4" y="691.0" width="1.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="30.4" y="702.0"></text>
</g>
<g>
<title>__clock_gettime (4 samples, 0.49%)</title><rect x="28.8" y="691.0" width="5.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="31.8" y="702.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.12%)</title><rect x="33.2" y="675.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="36.2" y="686.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.12%)</title><rect x="33.2" y="659.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="36.2" y="670.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.12%)</title><rect x="34.6" y="691.0" width="1.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="37.6" y="702.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.12%)</title><rect x="36.1" y="691.0" width="1.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="39.1" y="702.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.25%)</title><rect x="37.5" y="691.0" width="2.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="40.5" y="702.0"></text>
</g>
<g>
<title>epoll_wait (33 samples, 4.05%)</title><rect x="40.4" y="691.0" width="47.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="43.4" y="702.0">epol..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 3.68%)</title><rect x="44.7" y="675.0" width="43.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="47.7" y="686.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (30 samples, 3.68%)</title><rect x="44.7" y="659.0" width="43.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="47.7" y="670.0">do_s..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (24 samples, 2.94%)</title><rect x="50.5" y="643.0" width="34.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="53.5" y="654.0">__..</text>
</g>
<g>
<title>do_epoll_wait (24 samples, 2.94%)</title><rect x="50.5" y="627.0" width="34.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="53.5" y="638.0">do..</text>
</g>
<g>
<title>__fget_light (3 samples, 0.37%)</title><rect x="52.0" y="611.0" width="4.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="55.0" y="622.0"></text>
</g>
<g>
<title>ep_poll (20 samples, 2.45%)</title><rect x="56.3" y="611.0" width="29.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="59.3" y="622.0">ep..</text>
</g>
<g>
<title>_raw_spin_unlock_irq (4 samples, 0.49%)</title><rect x="66.5" y="595.0" width="5.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="69.5" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (7 samples, 0.86%)</title><rect x="72.3" y="595.0" width="10.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="75.3" y="606.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (2 samples, 0.25%)</title><rect x="72.3" y="579.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="75.3" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.49%)</title><rect x="75.2" y="579.0" width="5.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="78.2" y="590.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.25%)</title><rect x="78.0" y="563.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="81.0" y="574.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.25%)</title><rect x="78.0" y="547.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="81.0" y="558.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.25%)</title><rect x="78.0" y="531.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="81.0" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.12%)</title><rect x="79.5" y="515.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="82.5" y="526.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.12%)</title><rect x="80.9" y="579.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="83.9" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.25%)</title><rect x="82.4" y="595.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="85.4" y="606.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.25%)</title><rect x="82.4" y="579.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="85.4" y="590.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.25%)</title><rect x="82.4" y="563.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="85.4" y="574.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.12%)</title><rect x="85.3" y="643.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="88.3" y="654.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.12%)</title><rect x="85.3" y="627.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="88.3" y="638.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.12%)</title><rect x="85.3" y="611.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="88.3" y="622.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.12%)</title><rect x="86.7" y="643.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="89.7" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (761 samples, 93.37%)</title><rect x="88.2" y="723.0" width="1101.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="91.2" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (759 samples, 93.13%)</title><rect x="91.1" y="707.0" width="1098.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="94.1" y="718.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (656 samples, 80.49%)</title><rect x="92.5" y="691.0" width="949.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="95.5" y="702.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (631 samples, 77.42%)</title><rect x="95.4" y="675.0" width="913.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="98.4" y="686.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (630 samples, 77.30%)</title><rect x="96.9" y="659.0" width="912.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="99.9" y="670.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (607 samples, 74.48%)</title><rect x="96.9" y="643.0" width="878.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="99.9" y="654.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>gettimeofday (3 samples, 0.37%)</title><rect x="96.9" y="627.0" width="4.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="99.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (327 samples, 40.12%)</title><rect x="101.2" y="627.0" width="473.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.2" y="638.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (326 samples, 40.00%)</title><rect x="101.2" y="611.0" width="472.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="104.2" y="622.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 1.23%)</title><rect x="101.2" y="595.0" width="14.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.2" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (9 samples, 1.10%)</title><rect x="102.7" y="579.0" width="13.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="105.7" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (6 samples, 0.74%)</title><rect x="102.7" y="563.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="105.7" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.25%)</title><rect x="108.5" y="547.0" width="2.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="111.5" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.37%)</title><rect x="111.3" y="563.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="114.3" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.37%)</title><rect x="111.3" y="547.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="114.3" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (316 samples, 38.77%)</title><rect x="115.7" y="595.0" width="457.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="118.7" y="606.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (316 samples, 38.77%)</title><rect x="115.7" y="579.0" width="457.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="118.7" y="590.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (314 samples, 38.53%)</title><rect x="118.6" y="563.0" width="454.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.6" y="574.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (313 samples, 38.40%)</title><rect x="120.0" y="547.0" width="453.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.0" y="558.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>[unknown] (6 samples, 0.74%)</title><rect x="125.8" y="531.0" width="8.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="128.8" y="542.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.74%)</title><rect x="125.8" y="515.0" width="8.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="128.8" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.25%)</title><rect x="125.8" y="499.0" width="2.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="128.8" y="510.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="125.8" y="483.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="128.8" y="494.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.12%)</title><rect x="127.3" y="483.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="130.3" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.12%)</title><rect x="127.3" y="467.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="130.3" y="478.0"></text>
</g>
<g>
<title>__send (4 samples, 0.49%)</title><rect x="128.7" y="499.0" width="5.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="131.7" y="510.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.25%)</title><rect x="134.5" y="531.0" width="2.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="137.5" y="542.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.12%)</title><rect x="136.0" y="515.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="139.0" y="526.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.12%)</title><rect x="136.0" y="499.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="139.0" y="510.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.12%)</title><rect x="136.0" y="483.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="139.0" y="494.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.12%)</title><rect x="136.0" y="467.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="139.0" y="478.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.12%)</title><rect x="136.0" y="451.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="139.0" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.12%)</title><rect x="136.0" y="435.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="139.0" y="446.0"></text>
</g>
<g>
<title>__send (301 samples, 36.93%)</title><rect x="137.4" y="531.0" width="435.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="140.4" y="542.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (296 samples, 36.32%)</title><rect x="144.7" y="515.0" width="428.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="147.7" y="526.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (296 samples, 36.32%)</title><rect x="144.7" y="499.0" width="428.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="147.7" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (285 samples, 34.97%)</title><rect x="157.7" y="483.0" width="412.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="160.7" y="494.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (285 samples, 34.97%)</title><rect x="157.7" y="467.0" width="412.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="160.7" y="478.0">__sys_sendto</text>
</g>
<g>
<title>fput (1 samples, 0.12%)</title><rect x="159.1" y="451.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="162.1" y="462.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.37%)</title><rect x="160.6" y="451.0" width="4.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="163.6" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (279 samples, 34.23%)</title><rect x="164.9" y="451.0" width="404.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="167.9" y="462.0">sock_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (279 samples, 34.23%)</title><rect x="164.9" y="435.0" width="404.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="167.9" y="446.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.25%)</title><rect x="167.8" y="419.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="170.8" y="430.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.12%)</title><rect x="169.3" y="403.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="172.3" y="414.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.37%)</title><rect x="170.7" y="419.0" width="4.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="173.7" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.12%)</title><rect x="172.2" y="403.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="175.2" y="414.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.12%)</title><rect x="173.6" y="403.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="176.6" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (272 samples, 33.37%)</title><rect x="175.1" y="419.0" width="393.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="178.1" y="430.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__tcp_push_pending_frames (236 samples, 28.96%)</title><rect x="185.2" y="403.0" width="341.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="188.2" y="414.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (235 samples, 28.83%)</title><rect x="186.6" y="387.0" width="340.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="189.6" y="398.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (230 samples, 28.22%)</title><rect x="189.5" y="371.0" width="333.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="192.5" y="382.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (213 samples, 26.13%)</title><rect x="195.3" y="355.0" width="308.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="198.3" y="366.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.49%)</title><rect x="199.7" y="339.0" width="5.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="202.7" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.49%)</title><rect x="199.7" y="323.0" width="5.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="202.7" y="334.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.12%)</title><rect x="205.5" y="339.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="208.5" y="350.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.25%)</title><rect x="206.9" y="339.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="209.9" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.25%)</title><rect x="206.9" y="323.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="209.9" y="334.0"></text>
</g>
<g>
<title>ip_output (203 samples, 24.91%)</title><rect x="209.8" y="339.0" width="293.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="212.8" y="350.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.12%)</title><rect x="211.3" y="323.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="214.3" y="334.0"></text>
</g>
<g>
<title>ip_finish_output2 (192 samples, 23.56%)</title><rect x="212.7" y="323.0" width="278.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="215.7" y="334.0">ip_finish_output2</text>
</g>
<g>
<title>__dev_queue_xmit (19 samples, 2.33%)</title><rect x="218.5" y="307.0" width="27.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="221.5" y="318.0">_..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.12%)</title><rect x="221.4" y="291.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="224.4" y="302.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.12%)</title><rect x="221.4" y="275.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="224.4" y="286.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.12%)</title><rect x="222.8" y="291.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="225.8" y="302.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (10 samples, 1.23%)</title><rect x="224.3" y="291.0" width="14.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="227.3" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (10 samples, 1.23%)</title><rect x="224.3" y="275.0" width="14.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="227.3" y="286.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.25%)</title><rect x="227.2" y="259.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="230.2" y="270.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.49%)</title><rect x="230.1" y="259.0" width="5.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="233.1" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.49%)</title><rect x="230.1" y="243.0" width="5.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="233.1" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.12%)</title><rect x="233.0" y="227.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="236.0" y="238.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.12%)</title><rect x="234.4" y="227.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="237.4" y="238.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.12%)</title><rect x="234.4" y="211.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="237.4" y="222.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.25%)</title><rect x="235.9" y="259.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="238.9" y="270.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (1 samples, 0.12%)</title><rect x="238.8" y="291.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="241.8" y="302.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.12%)</title><rect x="240.2" y="291.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="243.2" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.37%)</title><rect x="241.7" y="291.0" width="4.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="244.7" y="302.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.25%)</title><rect x="243.1" y="275.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="246.1" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (168 samples, 20.61%)</title><rect x="246.0" y="307.0" width="243.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="249.0" y="318.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.0 (166 samples, 20.37%)</title><rect x="247.4" y="291.0" width="240.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="250.4" y="302.0">do_softirq.part.0</text>
</g>
<g>
<title>do_softirq_own_stack (164 samples, 20.12%)</title><rect x="250.3" y="275.0" width="237.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="253.3" y="286.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (164 samples, 20.12%)</title><rect x="250.3" y="259.0" width="237.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="253.3" y="270.0">__softirqentry_text_start</text>
</g>
<g>
<title>net_rx_action (160 samples, 19.63%)</title><rect x="256.1" y="243.0" width="231.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="259.1" y="254.0">net_rx_action</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.12%)</title><rect x="263.4" y="227.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="266.4" y="238.0"></text>
</g>
<g>
<title>process_backlog (154 samples, 18.90%)</title><rect x="264.8" y="227.0" width="223.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="267.8" y="238.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb_one_core (148 samples, 18.16%)</title><rect x="273.5" y="211.0" width="214.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="276.5" y="222.0">__netif_receive_skb_one_core</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.37%)</title><rect x="275.0" y="195.0" width="4.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="278.0" y="206.0"></text>
</g>
<g>
<title>ip_rcv (144 samples, 17.67%)</title><rect x="279.3" y="195.0" width="208.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="282.3" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (137 samples, 16.81%)</title><rect x="282.2" y="179.0" width="198.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="285.2" y="190.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (134 samples, 16.44%)</title><rect x="286.5" y="163.0" width="194.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="289.5" y="174.0">ip_local_deliver_finish</text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.12%)</title><rect x="288.0" y="147.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="291.0" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (132 samples, 16.20%)</title><rect x="289.4" y="147.0" width="191.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="292.4" y="158.0">ip_protocol_deliver_rcu</text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.12%)</title><rect x="290.9" y="131.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="293.9" y="142.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.12%)</title><rect x="292.3" y="131.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="295.3" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (129 samples, 15.83%)</title><rect x="293.8" y="131.0" width="186.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="296.8" y="142.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (7 samples, 0.86%)</title><rect x="301.0" y="115.0" width="10.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="304.0" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.49%)</title><rect x="311.2" y="115.0" width="5.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="314.2" y="126.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.37%)</title><rect x="311.2" y="99.0" width="4.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="314.2" y="110.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.12%)</title><rect x="314.0" y="83.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="317.0" y="94.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.12%)</title><rect x="315.5" y="99.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="318.5" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (112 samples, 13.74%)</title><rect x="316.9" y="115.0" width="162.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="319.9" y="126.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.12%)</title><rect x="316.9" y="99.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="319.9" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (111 samples, 13.62%)</title><rect x="318.4" y="99.0" width="160.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="321.4" y="110.0">tcp_rcv_established</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.12%)</title><rect x="321.3" y="83.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="324.3" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.12%)</title><rect x="322.7" y="83.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="325.7" y="94.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.12%)</title><rect x="322.7" y="67.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="325.7" y="78.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.12%)</title><rect x="322.7" y="51.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="325.7" y="62.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.12%)</title><rect x="322.7" y="35.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="325.7" y="46.0"></text>
</g>
<g>
<title>sock_def_readable (70 samples, 8.59%)</title><rect x="324.2" y="83.0" width="101.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="327.2" y="94.0">sock_def_rea..</text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.12%)</title><rect x="328.5" y="67.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="331.5" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (66 samples, 8.10%)</title><rect x="330.0" y="67.0" width="95.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="333.0" y="78.0">__wake_up_c..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (66 samples, 8.10%)</title><rect x="330.0" y="51.0" width="95.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="333.0" y="62.0">_raw_spin_u..</text>
</g>
<g>
<title>tcp_ack (32 samples, 3.93%)</title><rect x="425.5" y="83.0" width="46.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="428.5" y="94.0">tcp_..</text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.37%)</title><rect x="448.7" y="67.0" width="4.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="451.7" y="78.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.25%)</title><rect x="448.7" y="51.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="451.7" y="62.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.12%)</title><rect x="451.6" y="51.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="454.6" y="62.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (3 samples, 0.37%)</title><rect x="453.0" y="67.0" width="4.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="456.0" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.12%)</title><rect x="457.4" y="67.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="460.4" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.12%)</title><rect x="457.4" y="51.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="460.4" y="62.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.12%)</title><rect x="458.8" y="67.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="461.8" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.25%)</title><rect x="460.3" y="67.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="463.3" y="78.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.12%)</title><rect x="463.2" y="67.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="466.2" y="78.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.12%)</title><rect x="464.6" y="67.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="467.6" y="78.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.12%)</title><rect x="466.1" y="67.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="469.1" y="78.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.12%)</title><rect x="467.5" y="67.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="470.5" y="78.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.12%)</title><rect x="469.0" y="67.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="472.0" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.12%)</title><rect x="470.4" y="67.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="473.4" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.12%)</title><rect x="471.9" y="83.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="474.9" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.12%)</title><rect x="473.3" y="83.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="476.3" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.25%)</title><rect x="474.8" y="83.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="477.8" y="94.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.25%)</title><rect x="474.8" y="67.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="477.8" y="78.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.25%)</title><rect x="474.8" y="51.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="477.8" y="62.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.12%)</title><rect x="477.7" y="83.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="480.7" y="94.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb.isra.0 (1 samples, 0.12%)</title><rect x="479.1" y="115.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="482.1" y="126.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (5 samples, 0.61%)</title><rect x="480.6" y="179.0" width="7.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="483.6" y="190.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.12%)</title><rect x="487.8" y="291.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="490.8" y="302.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.12%)</title><rect x="489.2" y="307.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="492.2" y="318.0"></text>
</g>
<g>
<title>in_lock_functions (1 samples, 0.12%)</title><rect x="489.2" y="291.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="492.2" y="302.0"></text>
</g>
<g>
<title>ip_finish_output (9 samples, 1.10%)</title><rect x="490.7" y="323.0" width="13.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="493.7" y="334.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (9 samples, 1.10%)</title><rect x="490.7" y="307.0" width="13.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="493.7" y="318.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.37%)</title><rect x="503.7" y="355.0" width="4.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="506.7" y="366.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.12%)</title><rect x="506.6" y="339.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="509.6" y="350.0"></text>
</g>
<g>
<title>__tcp_select_window (3 samples, 0.37%)</title><rect x="508.1" y="355.0" width="4.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="511.1" y="366.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.12%)</title><rect x="512.4" y="355.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="515.4" y="366.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (3 samples, 0.37%)</title><rect x="513.9" y="355.0" width="4.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="516.9" y="366.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.12%)</title><rect x="518.2" y="355.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="521.2" y="366.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.12%)</title><rect x="519.6" y="355.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="522.6" y="366.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.12%)</title><rect x="521.1" y="355.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="524.1" y="366.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.25%)</title><rect x="522.5" y="371.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="525.5" y="382.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.12%)</title><rect x="524.0" y="355.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="527.0" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.12%)</title><rect x="525.4" y="371.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="528.4" y="382.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.12%)</title><rect x="525.4" y="355.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="528.4" y="366.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.12%)</title><rect x="526.9" y="403.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="529.9" y="414.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.12%)</title><rect x="526.9" y="387.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="529.9" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (14 samples, 1.72%)</title><rect x="528.3" y="403.0" width="20.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="531.3" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (14 samples, 1.72%)</title><rect x="528.3" y="387.0" width="20.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="531.3" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (6 samples, 0.74%)</title><rect x="534.1" y="371.0" width="8.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="537.1" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (6 samples, 0.74%)</title><rect x="534.1" y="355.0" width="8.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="537.1" y="366.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.12%)</title><rect x="541.4" y="339.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="544.4" y="350.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.49%)</title><rect x="542.8" y="371.0" width="5.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="545.8" y="382.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.12%)</title><rect x="548.6" y="403.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="551.6" y="414.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.12%)</title><rect x="550.0" y="403.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="553.0" y="414.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.12%)</title><rect x="551.5" y="403.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="554.5" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (8 samples, 0.98%)</title><rect x="552.9" y="403.0" width="11.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="555.9" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (6 samples, 0.74%)</title><rect x="555.8" y="387.0" width="8.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="558.8" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.25%)</title><rect x="561.6" y="371.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="564.6" y="382.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.37%)</title><rect x="564.5" y="403.0" width="4.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="567.5" y="414.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.12%)</title><rect x="568.9" y="451.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="571.9" y="462.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.12%)</title><rect x="568.9" y="435.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="571.9" y="446.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.12%)</title><rect x="568.9" y="419.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="571.9" y="430.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.12%)</title><rect x="570.3" y="483.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="573.3" y="494.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.12%)</title><rect x="571.8" y="483.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="574.8" y="494.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.12%)</title><rect x="571.8" y="467.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="574.8" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.12%)</title><rect x="573.2" y="611.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="576.2" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.12%)</title><rect x="573.2" y="595.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="576.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.12%)</title><rect x="573.2" y="579.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="576.2" y="590.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.12%)</title><rect x="573.2" y="563.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="576.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 1.23%)</title><rect x="574.7" y="627.0" width="14.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="577.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.37%)</title><rect x="574.7" y="611.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="577.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.37%)</title><rect x="574.7" y="595.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="577.7" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.37%)</title><rect x="574.7" y="579.0" width="4.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="577.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (7 samples, 0.86%)</title><rect x="579.0" y="611.0" width="10.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="582.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.25%)</title><rect x="584.8" y="595.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="587.8" y="606.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.12%)</title><rect x="587.7" y="595.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="590.7" y="606.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.12%)</title><rect x="589.1" y="627.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="592.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.entity (266 samples, 32.64%)</title><rect x="590.6" y="627.0" width="385.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="593.6" y="638.0">ru/mail/polis/service/temnovochka/ServiceImpl.entity</text>
</g>
<g>
<title>java/lang/String.isEmpty (1 samples, 0.12%)</title><rect x="590.6" y="611.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="593.6" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.12%)</title><rect x="590.6" y="595.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="593.6" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.25%)</title><rect x="592.0" y="611.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="595.0" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.25%)</title><rect x="592.0" y="595.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="595.0" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.25%)</title><rect x="592.0" y="579.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="595.0" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.25%)</title><rect x="592.0" y="563.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="595.0" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.25%)</title><rect x="592.0" y="547.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="595.0" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.25%)</title><rect x="592.0" y="531.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="595.0" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.25%)</title><rect x="592.0" y="515.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="595.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.responseProcessEntity (263 samples, 32.27%)</title><rect x="594.9" y="611.0" width="380.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.9" y="622.0">ru/mail/polis/service/temnovochka/ServiceImpl.respon..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.37%)</title><rect x="597.8" y="595.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="600.8" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.37%)</title><rect x="597.8" y="579.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="600.8" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.37%)</title><rect x="597.8" y="563.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="600.8" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.37%)</title><rect x="597.8" y="547.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="600.8" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="597.8" y="531.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="600.8" y="542.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.25%)</title><rect x="599.3" y="531.0" width="2.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="602.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteArrayUtils.getArrayFromByteBuffer (2 samples, 0.25%)</title><rect x="602.2" y="595.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.2" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.25%)</title><rect x="602.2" y="579.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="605.2" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.25%)</title><rect x="602.2" y="563.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="605.2" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.25%)</title><rect x="602.2" y="547.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="605.2" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.25%)</title><rect x="602.2" y="531.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="605.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.get (255 samples, 31.29%)</title><rect x="605.1" y="595.0" width="369.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="608.1" y="606.0">ru/mail/polis/dao/DAOImpl.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (254 samples, 31.17%)</title><rect x="605.1" y="579.0" width="367.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="608.1" y="590.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (253 samples, 31.04%)</title><rect x="606.5" y="563.0" width="366.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="609.5" y="574.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (242 samples, 29.69%)</title><rect x="608.0" y="547.0" width="350.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="611.0" y="558.0">Java_org_rocksdb_RocksDB_get__J_3BII</text>
</g>
<g>
<title>/tmp/librocksdbjni14179985416039426566.so (1 samples, 0.12%)</title><rect x="610.9" y="531.0" width="1.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="613.9" y="542.0"></text>
</g>
<g>
<title>__GI___libc_malloc (3 samples, 0.37%)</title><rect x="612.3" y="531.0" width="4.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="615.3" y="542.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.12%)</title><rect x="616.7" y="531.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="619.7" y="542.0"></text>
</g>
<g>
<title>_init (1 samples, 0.12%)</title><rect x="618.1" y="531.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="621.1" y="542.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.12%)</title><rect x="619.5" y="531.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="622.5" y="542.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.12%)</title><rect x="621.0" y="531.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="624.0" y="542.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.25%)</title><rect x="622.4" y="531.0" width="2.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="625.4" y="542.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (227 samples, 27.85%)</title><rect x="625.3" y="531.0" width="328.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="628.3" y="542.0">rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, r..</text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.49%)</title><rect x="626.8" y="515.0" width="5.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="629.8" y="526.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.25%)</title><rect x="628.2" y="499.0" width="2.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="631.2" y="510.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.12%)</title><rect x="631.1" y="499.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="634.1" y="510.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.25%)</title><rect x="632.6" y="515.0" width="2.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="635.6" y="526.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.12%)</title><rect x="632.6" y="499.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="635.6" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.12%)</title><rect x="634.0" y="499.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="637.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (200 samples, 24.54%)</title><rect x="635.5" y="515.0" width="289.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="638.5" y="526.0">rocksdb::DB::Get(rocksdb::ReadOptions c..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (2 samples, 0.25%)</title><rect x="636.9" y="499.0" width="2.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="639.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.12%)</title><rect x="639.8" y="499.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="642.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (192 samples, 23.56%)</title><rect x="641.3" y="499.0" width="278.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="644.3" y="510.0">rocksdb::DB::Get(rocksdb::ReadOptions..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (7 samples, 0.86%)</title><rect x="644.2" y="483.0" width="10.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="647.2" y="494.0"></text>
</g>
<g>
<title>_init (1 samples, 0.12%)</title><rect x="644.2" y="467.0" width="1.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="647.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (1 samples, 0.12%)</title><rect x="645.6" y="467.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="648.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (4 samples, 0.49%)</title><rect x="647.1" y="467.0" width="5.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="650.1" y="478.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.12%)</title><rect x="650.0" y="451.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="653.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (1 samples, 0.12%)</title><rect x="651.4" y="451.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="654.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Unref(rocksdb::LRUHandle*) (1 samples, 0.12%)</title><rect x="652.8" y="467.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="655.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (183 samples, 22.45%)</title><rect x="654.3" y="483.0" width="265.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="657.3" y="494.0">rocksdb::DBImpl::Get(rocksdb::ReadO..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.12%)</title><rect x="654.3" y="467.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="657.3" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.49%)</title><rect x="655.7" y="467.0" width="5.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="658.7" y="478.0"></text>
</g>
<g>
<title>_init (2 samples, 0.25%)</title><rect x="661.5" y="467.0" width="2.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="664.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.12%)</title><rect x="664.4" y="467.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="667.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.12%)</title><rect x="665.9" y="467.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="668.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (168 samples, 20.61%)</title><rect x="667.3" y="467.0" width="243.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="670.3" y="478.0">rocksdb::DBImpl::GetImpl(rocksdb..</text>
</g>
<g>
<title>/tmp/librocksdbjni14179985416039426566.so (4 samples, 0.49%)</title><rect x="673.1" y="451.0" width="5.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="676.1" y="462.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.25%)</title><rect x="678.9" y="451.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="681.9" y="462.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.12%)</title><rect x="681.8" y="451.0" width="1.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="684.8" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.37%)</title><rect x="683.3" y="451.0" width="4.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="686.3" y="462.0"></text>
</g>
<g>
<title>_init (3 samples, 0.37%)</title><rect x="687.6" y="451.0" width="4.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="690.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (4 samples, 0.49%)</title><rect x="691.9" y="451.0" width="5.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="694.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.12%)</title><rect x="693.4" y="435.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="696.4" y="446.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.25%)</title><rect x="694.8" y="435.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="697.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (4 samples, 0.49%)</title><rect x="697.7" y="451.0" width="5.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="700.7" y="462.0"></text>
</g>
<g>
<title>_init (2 samples, 0.25%)</title><rect x="697.7" y="435.0" width="2.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="700.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.25%)</title><rect x="700.6" y="435.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="703.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.12%)</title><rect x="700.6" y="419.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="703.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.12%)</title><rect x="702.1" y="419.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="705.1" y="430.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (3 samples, 0.37%)</title><rect x="703.5" y="451.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="706.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::MergeContext*, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*) (1 samples, 0.12%)</title><rect x="707.9" y="451.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="710.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (50 samples, 6.13%)</title><rect x="709.3" y="451.0" width="72.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="712.3" y="462.0">rocksdb:..</text>
</g>
<g>
<title>/tmp/librocksdbjni14179985416039426566.so (42 samples, 5.15%)</title><rect x="718.0" y="435.0" width="60.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="721.0" y="446.0">/tmp/l..</text>
</g>
<g>
<title>/tmp/librocksdbjni14179985416039426566.so (5 samples, 0.61%)</title><rect x="726.7" y="419.0" width="7.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="729.7" y="430.0"></text>
</g>
<g>
<title>_init (1 samples, 0.12%)</title><rect x="733.9" y="419.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="736.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (25 samples, 3.07%)</title><rect x="735.4" y="419.0" width="36.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="738.4" y="430.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni14179985416039426566.so (1 samples, 0.12%)</title><rect x="754.2" y="403.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="757.2" y="414.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.25%)</title><rect x="755.6" y="403.0" width="2.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="758.6" y="414.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (9 samples, 1.10%)</title><rect x="758.5" y="403.0" width="13.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="761.5" y="414.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.12%)</title><rect x="762.9" y="387.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="765.9" y="398.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (5 samples, 0.61%)</title><rect x="764.3" y="387.0" width="7.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="767.3" y="398.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.37%)</title><rect x="771.6" y="419.0" width="4.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="774.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (1 samples, 0.12%)</title><rect x="775.9" y="419.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="778.9" y="430.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (1 samples, 0.12%)</title><rect x="777.4" y="419.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="780.4" y="430.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (1 samples, 0.12%)</title><rect x="778.8" y="435.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="781.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.12%)</title><rect x="780.3" y="435.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="783.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::StopWatchNano::StopWatchNano(rocksdb::Env*, bool) (1 samples, 0.12%)</title><rect x="781.7" y="451.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="784.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int) (1 samples, 0.12%)</title><rect x="783.2" y="451.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="786.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (2 samples, 0.25%)</title><rect x="784.6" y="451.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="787.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*) (83 samples, 10.18%)</title><rect x="787.5" y="451.0" width="120.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="790.5" y="462.0">rocksdb::Versio..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (2 samples, 0.25%)</title><rect x="793.3" y="435.0" width="2.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="796.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;) (1 samples, 0.12%)</title><rect x="796.2" y="435.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="799.2" y="446.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::MergeContext*, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*) (2 samples, 0.25%)</title><rect x="797.6" y="435.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="800.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.12%)</title><rect x="799.1" y="419.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="802.1" y="430.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.12%)</title><rect x="800.5" y="435.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="803.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int) (73 samples, 8.96%)</title><rect x="802.0" y="435.0" width="105.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="805.0" y="446.0">rocksdb::Tabl..</text>
</g>
<g>
<title>_init (1 samples, 0.12%)</title><rect x="804.9" y="419.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="807.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (61 samples, 7.48%)</title><rect x="806.3" y="419.0" width="88.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="809.3" y="430.0">rocksdb::B..</text>
</g>
<g>
<title>/tmp/librocksdbjni14179985416039426566.so (1 samples, 0.12%)</title><rect x="810.7" y="403.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="813.7" y="414.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="812.1" y="403.0" width="1.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="815.1" y="414.0"></text>
</g>
<g>
<title>_init (2 samples, 0.25%)</title><rect x="813.6" y="403.0" width="2.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="816.6" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch(rocksdb::ReadOptions const&amp;, rocksdb::FilterBlockReader*, rocksdb::Slice const&amp;, bool, rocksdb::SliceTransform const*) const (3 samples, 0.37%)</title><rect x="816.5" y="403.0" width="4.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="819.5" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (1 samples, 0.12%)</title><rect x="820.8" y="403.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="823.8" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::BlockBasedTable::IndexReader&gt;*, rocksdb::GetContext*) (2 samples, 0.25%)</title><rect x="822.2" y="403.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="825.2" y="414.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::IndexBlockIter*, bool, bool) (1 samples, 0.12%)</title><rect x="822.2" y="387.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="825.2" y="398.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter* rocksdb::Block::NewIterator&lt;rocksdb::IndexBlockIter&gt;(rocksdb::Comparator const*, rocksdb::Comparator const*, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.12%)</title><rect x="822.2" y="371.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="825.2" y="382.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter* rocksdb::Block::NewIterator&lt;rocksdb::IndexBlockIter&gt;(rocksdb::Comparator const*, rocksdb::Comparator const*, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.12%)</title><rect x="823.7" y="387.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="826.7" y="398.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::BlockHandle&gt;::~BlockIter() (2 samples, 0.25%)</title><rect x="825.1" y="403.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="828.1" y="414.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (1 samples, 0.12%)</title><rect x="828.0" y="403.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="831.0" y="414.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.12%)</title><rect x="829.5" y="403.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="832.5" y="414.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::Block::NewIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::Comparator const*, rocksdb::Comparator const*, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.12%)</title><rect x="830.9" y="403.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="833.9" y="414.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, bool, bool, bool, rocksdb::GetContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*) (19 samples, 2.33%)</title><rect x="832.4" y="403.0" width="27.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="835.4" y="414.0">r..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetDataBlockFromCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, unsigned long, bool, rocksdb::GetContext*) (1 samples, 0.12%)</title><rect x="833.8" y="387.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="836.8" y="398.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, bool, rocksdb::GetContext*) (16 samples, 1.96%)</title><rect x="835.3" y="387.0" width="23.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="838.3" y="398.0">r..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetDataBlockFromCache(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&amp;, rocksdb::BlockBasedTable::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, unsigned long, bool, rocksdb::GetContext*) (14 samples, 1.72%)</title><rect x="838.2" y="371.0" width="20.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="841.2" y="382.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14179985416039426566.so (12 samples, 1.47%)</title><rect x="838.2" y="355.0" width="17.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="841.2" y="366.0"></text>
</g>
<g>
<title>MurmurHash64A(void const*, int, unsigned int) (1 samples, 0.12%)</title><rect x="839.6" y="339.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="842.6" y="350.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetShard(int) const (1 samples, 0.12%)</title><rect x="841.1" y="339.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="844.1" y="350.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (5 samples, 0.61%)</title><rect x="842.5" y="339.0" width="7.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="845.5" y="350.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.12%)</title><rect x="844.0" y="323.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="847.0" y="334.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.12%)</title><rect x="844.0" y="307.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="847.0" y="318.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.12%)</title><rect x="844.0" y="291.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="847.0" y="302.0"></text>
</g>
<g>
<title>__se_sys_futex (1 samples, 0.12%)</title><rect x="844.0" y="275.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="847.0" y="286.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.12%)</title><rect x="844.0" y="259.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="847.0" y="270.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.12%)</title><rect x="844.0" y="243.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="847.0" y="254.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.12%)</title><rect x="845.4" y="323.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="848.4" y="334.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.25%)</title><rect x="846.9" y="323.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="849.9" y="334.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.25%)</title><rect x="846.9" y="307.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="849.9" y="318.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (4 samples, 0.49%)</title><rect x="849.8" y="339.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="852.8" y="350.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (2 samples, 0.25%)</title><rect x="855.5" y="355.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="858.5" y="366.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.12%)</title><rect x="858.4" y="387.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="861.4" y="398.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (7 samples, 0.86%)</title><rect x="859.9" y="403.0" width="10.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="862.9" y="414.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14179985416039426566.so (1 samples, 0.12%)</title><rect x="862.8" y="387.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="865.8" y="398.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.12%)</title><rect x="864.2" y="387.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="867.2" y="398.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 0.37%)</title><rect x="865.7" y="387.0" width="4.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="868.7" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14179985416039426566.so (1 samples, 0.12%)</title><rect x="867.1" y="371.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="870.1" y="382.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.12%)</title><rect x="868.6" y="371.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="871.6" y="382.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (11 samples, 1.35%)</title><rect x="870.0" y="403.0" width="16.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="873.0" y="414.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="881.6" y="387.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="884.6" y="398.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.25%)</title><rect x="883.1" y="387.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="886.1" y="398.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14179985416039426566.so (1 samples, 0.12%)</title><rect x="884.5" y="371.0" width="1.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="887.5" y="382.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::value() const (5 samples, 0.61%)</title><rect x="886.0" y="403.0" width="7.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="889.0" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) (1 samples, 0.12%)</title><rect x="887.4" y="387.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="890.4" y="398.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (3 samples, 0.37%)</title><rect x="888.8" y="387.0" width="4.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="891.8" y="398.0"></text>
</g>
<g>
<title>rocksdb::UncompressionDict::GetEmptyDict() (1 samples, 0.12%)</title><rect x="893.2" y="403.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="896.2" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetFilter(rocksdb::SliceTransform const*, rocksdb::FilePrefetchBuffer*, bool, rocksdb::GetContext*) const (2 samples, 0.25%)</title><rect x="894.6" y="419.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="897.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::BlockHandle&gt;::status() const (1 samples, 0.12%)</title><rect x="897.5" y="419.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="900.5" y="430.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.12%)</title><rect x="899.0" y="419.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="902.0" y="430.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="900.4" y="419.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="903.4" y="430.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::IndexBlockIter() (4 samples, 0.49%)</title><rect x="901.9" y="419.0" width="5.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="904.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::Version::IsFilterSkipped(int, bool) (2 samples, 0.25%)</title><rect x="907.7" y="451.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="910.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.12%)</title><rect x="910.6" y="467.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="913.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long) (1 samples, 0.12%)</title><rect x="912.0" y="467.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="915.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.25%)</title><rect x="913.5" y="467.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="916.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.12%)</title><rect x="916.4" y="467.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="919.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*) (1 samples, 0.12%)</title><rect x="917.8" y="467.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="920.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (2 samples, 0.25%)</title><rect x="919.3" y="499.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="922.3" y="510.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (2 samples, 0.25%)</title><rect x="922.1" y="499.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="925.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.12%)</title><rect x="925.0" y="515.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="928.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (19 samples, 2.33%)</title><rect x="926.5" y="515.0" width="27.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="929.5" y="526.0">r..</text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.12%)</title><rect x="927.9" y="499.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="930.9" y="510.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="929.4" y="499.0" width="1.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="932.4" y="510.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.25%)</title><rect x="930.8" y="499.0" width="2.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="933.8" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.25%)</title><rect x="930.8" y="483.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="933.8" y="494.0"></text>
</g>
<g>
<title>jni_NewByteArray (14 samples, 1.72%)</title><rect x="933.7" y="499.0" width="20.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="936.7" y="510.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.12%)</title><rect x="936.6" y="483.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="939.6" y="494.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.25%)</title><rect x="938.1" y="483.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="941.1" y="494.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.12%)</title><rect x="941.0" y="483.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="944.0" y="494.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.98%)</title><rect x="942.4" y="483.0" width="11.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="945.4" y="494.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.61%)</title><rect x="945.3" y="467.0" width="7.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="948.3" y="478.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.61%)</title><rect x="945.3" y="451.0" width="7.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="948.3" y="462.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.25%)</title><rect x="945.3" y="435.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="948.3" y="446.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.12%)</title><rect x="948.2" y="435.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="951.2" y="446.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (2 samples, 0.25%)</title><rect x="949.7" y="435.0" width="2.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="952.7" y="446.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.12%)</title><rect x="952.6" y="467.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="955.6" y="478.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.12%)</title><rect x="954.0" y="531.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="957.0" y="542.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (2 samples, 0.25%)</title><rect x="955.4" y="531.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="958.4" y="542.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.37%)</title><rect x="958.3" y="547.0" width="4.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="961.3" y="558.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="958.3" y="531.0" width="1.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="961.3" y="542.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.12%)</title><rect x="959.8" y="531.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="962.8" y="542.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.12%)</title><rect x="961.2" y="531.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="964.2" y="542.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.25%)</title><rect x="962.7" y="547.0" width="2.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="965.7" y="558.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.12%)</title><rect x="965.6" y="547.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="968.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (2 samples, 0.25%)</title><rect x="967.0" y="547.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="970.0" y="558.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.12%)</title><rect x="969.9" y="547.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="972.9" y="558.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.12%)</title><rect x="971.4" y="547.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="974.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteArrayUtils.packingKey (1 samples, 0.12%)</title><rect x="972.8" y="579.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="975.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteArrayUtils.getArrayFromByteBuffer (1 samples, 0.12%)</title><rect x="972.8" y="563.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="975.8" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.12%)</title><rect x="972.8" y="547.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="975.8" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.12%)</title><rect x="972.8" y="531.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="975.8" y="542.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.12%)</title><rect x="972.8" y="515.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="975.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.upsert (1 samples, 0.12%)</title><rect x="974.3" y="595.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="977.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteArrayUtils.getArrayFromByteBuffer (1 samples, 0.12%)</title><rect x="974.3" y="579.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="977.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.12%)</title><rect x="974.3" y="563.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="977.3" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.12%)</title><rect x="974.3" y="547.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="977.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (16 samples, 1.96%)</title><rect x="975.7" y="643.0" width="23.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="978.7" y="654.0">o..</text>
</g>
<g>
<title>java/util/HashMap.get (15 samples, 1.84%)</title><rect x="977.2" y="627.0" width="21.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="980.2" y="638.0">j..</text>
</g>
<g>
<title>java/util/HashMap.getNode (11 samples, 1.35%)</title><rect x="977.2" y="611.0" width="15.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="980.2" y="622.0"></text>
</g>
<g>
<title>java/lang/String.equals (10 samples, 1.23%)</title><rect x="977.2" y="595.0" width="14.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="980.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.coder (8 samples, 0.98%)</title><rect x="980.1" y="579.0" width="11.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="983.1" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.37%)</title><rect x="987.3" y="563.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="990.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteArrayUtils.packingKey (1 samples, 0.12%)</title><rect x="991.6" y="595.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="994.6" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.49%)</title><rect x="993.1" y="611.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="996.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.37%)</title><rect x="994.5" y="595.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="997.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.25%)</title><rect x="994.5" y="579.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="997.5" y="590.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1 samples, 0.12%)</title><rect x="997.4" y="579.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1000.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.49%)</title><rect x="998.9" y="643.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1001.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.49%)</title><rect x="998.9" y="627.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1001.9" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.25%)</title><rect x="1001.8" y="611.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1004.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.12%)</title><rect x="1004.7" y="643.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1007.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.handleDefault (2 samples, 0.25%)</title><rect x="1006.1" y="643.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1009.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.25%)</title><rect x="1006.1" y="627.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1009.1" y="638.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (1 samples, 0.12%)</title><rect x="1007.6" y="611.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1010.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (11 samples, 1.35%)</title><rect x="1009.0" y="675.0" width="15.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1012.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.12%)</title><rect x="1011.9" y="659.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1014.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="1011.9" y="643.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1014.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="1011.9" y="627.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1014.9" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.12%)</title><rect x="1011.9" y="611.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1014.9" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.74%)</title><rect x="1013.4" y="659.0" width="8.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1016.4" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.74%)</title><rect x="1013.4" y="643.0" width="8.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1016.4" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.25%)</title><rect x="1022.0" y="659.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1025.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.37%)</title><rect x="1024.9" y="675.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1027.9" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.25%)</title><rect x="1024.9" y="659.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1027.9" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.12%)</title><rect x="1024.9" y="643.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1027.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.12%)</title><rect x="1024.9" y="627.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1027.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.12%)</title><rect x="1024.9" y="611.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1027.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.12%)</title><rect x="1026.4" y="643.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1029.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (1 samples, 0.12%)</title><rect x="1027.8" y="659.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1030.8" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.12%)</title><rect x="1029.3" y="675.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1032.3" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.12%)</title><rect x="1030.7" y="675.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1033.7" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.86%)</title><rect x="1032.2" y="675.0" width="10.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1035.2" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.86%)</title><rect x="1032.2" y="659.0" width="10.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1035.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.49%)</title><rect x="1036.5" y="643.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1039.5" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.37%)</title><rect x="1036.5" y="627.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1039.5" y="638.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.12%)</title><rect x="1039.4" y="611.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1042.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (1 samples, 0.12%)</title><rect x="1040.9" y="627.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1043.9" y="638.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.25%)</title><rect x="1042.3" y="691.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1045.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (100 samples, 12.27%)</title><rect x="1045.2" y="691.0" width="144.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1048.2" y="702.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (94 samples, 11.53%)</title><rect x="1045.2" y="675.0" width="136.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1048.2" y="686.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.12%)</title><rect x="1053.9" y="659.0" width="1.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1056.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 2.21%)</title><rect x="1055.3" y="659.0" width="26.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1058.3" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (18 samples, 2.21%)</title><rect x="1055.3" y="643.0" width="26.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1058.3" y="654.0">[..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (16 samples, 1.96%)</title><rect x="1055.3" y="627.0" width="23.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1058.3" y="638.0">J..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.25%)</title><rect x="1056.8" y="611.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1059.8" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.12%)</title><rect x="1059.7" y="611.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1062.7" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.12%)</title><rect x="1061.1" y="611.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1064.1" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.25%)</title><rect x="1062.6" y="611.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1065.6" y="622.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (5 samples, 0.61%)</title><rect x="1065.5" y="611.0" width="7.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1068.5" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.49%)</title><rect x="1072.7" y="611.0" width="5.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1075.7" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.12%)</title><rect x="1077.1" y="595.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1080.1" y="606.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.12%)</title><rect x="1078.5" y="627.0" width="1.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1081.5" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.12%)</title><rect x="1080.0" y="627.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1083.0" y="638.0"></text>
</g>
<g>
<title>recv (69 samples, 8.47%)</title><rect x="1081.4" y="659.0" width="99.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1084.4" y="670.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (62 samples, 7.61%)</title><rect x="1091.5" y="643.0" width="89.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1094.5" y="654.0">entry_SYSC..</text>
</g>
<g>
<title>do_syscall_64 (62 samples, 7.61%)</title><rect x="1091.5" y="627.0" width="89.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1094.5" y="638.0">do_syscall..</text>
</g>
<g>
<title>__x64_sys_recvfrom (48 samples, 5.89%)</title><rect x="1101.7" y="611.0" width="69.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1104.7" y="622.0">__x64_s..</text>
</g>
<g>
<title>__sys_recvfrom (47 samples, 5.77%)</title><rect x="1103.1" y="595.0" width="68.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1106.1" y="606.0">__sys_r..</text>
</g>
<g>
<title>import_single_range (1 samples, 0.12%)</title><rect x="1107.5" y="579.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1110.5" y="590.0"></text>
</g>
<g>
<title>inet6_recvmsg (34 samples, 4.17%)</title><rect x="1108.9" y="579.0" width="49.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1111.9" y="590.0">inet6..</text>
</g>
<g>
<title>tcp_recvmsg (34 samples, 4.17%)</title><rect x="1108.9" y="563.0" width="49.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1111.9" y="574.0">tcp_r..</text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.98%)</title><rect x="1117.6" y="547.0" width="11.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1120.6" y="558.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.74%)</title><rect x="1117.6" y="531.0" width="8.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1120.6" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (5 samples, 0.61%)</title><rect x="1119.1" y="515.0" width="7.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1122.1" y="526.0"></text>
</g>
<g>
<title>dst_release (4 samples, 0.49%)</title><rect x="1119.1" y="499.0" width="5.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1122.1" y="510.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.12%)</title><rect x="1124.8" y="499.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1127.8" y="510.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.25%)</title><rect x="1126.3" y="531.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1129.3" y="542.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.12%)</title><rect x="1129.2" y="547.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1132.2" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.25%)</title><rect x="1130.6" y="547.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1133.6" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.12%)</title><rect x="1132.1" y="531.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1135.1" y="542.0"></text>
</g>
<g>
<title>ns_to_timespec64 (1 samples, 0.12%)</title><rect x="1133.5" y="547.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1136.5" y="558.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.12%)</title><rect x="1135.0" y="547.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1138.0" y="558.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.12%)</title><rect x="1135.0" y="531.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1138.0" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (12 samples, 1.47%)</title><rect x="1136.4" y="547.0" width="17.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1139.4" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (12 samples, 1.47%)</title><rect x="1136.4" y="531.0" width="17.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1139.4" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (6 samples, 0.74%)</title><rect x="1142.2" y="515.0" width="8.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1145.2" y="526.0"></text>
</g>
<g>
<title>copyout (6 samples, 0.74%)</title><rect x="1142.2" y="499.0" width="8.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1145.2" y="510.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (6 samples, 0.74%)</title><rect x="1142.2" y="483.0" width="8.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1145.2" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.25%)</title><rect x="1150.9" y="515.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1153.9" y="526.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.25%)</title><rect x="1150.9" y="499.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1153.9" y="510.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.12%)</title><rect x="1152.4" y="483.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1155.4" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.25%)</title><rect x="1153.8" y="547.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1156.8" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.12%)</title><rect x="1155.3" y="531.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1158.3" y="542.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.12%)</title><rect x="1155.3" y="515.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1158.3" y="526.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (1 samples, 0.12%)</title><rect x="1156.7" y="547.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1159.7" y="558.0"></text>
</g>
<g>
<title>sock_recvmsg (2 samples, 0.25%)</title><rect x="1158.1" y="579.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1161.1" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.25%)</title><rect x="1158.1" y="563.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1161.1" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.86%)</title><rect x="1161.0" y="579.0" width="10.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1164.0" y="590.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.86%)</title><rect x="1161.0" y="563.0" width="10.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1164.0" y="574.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.37%)</title><rect x="1166.8" y="547.0" width="4.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1169.8" y="558.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.25%)</title><rect x="1171.2" y="611.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1174.2" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.25%)</title><rect x="1171.2" y="595.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1174.2" y="606.0"></text>
</g>
<g>
<title>syscall_trace_enter (5 samples, 0.61%)</title><rect x="1174.1" y="611.0" width="7.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1177.1" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.12%)</title><rect x="1179.9" y="595.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1182.9" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (6 samples, 0.74%)</title><rect x="1181.3" y="675.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1184.3" y="686.0"></text>
</g>
</g>
</svg>

<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1158" onload="init(evt)" viewBox="0 0 1200 1158" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1141"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1141"> </text>
<g id="frames">
<g>
<title>all (3,498 samples, 100.00%)</title><rect x="10.0" y="1107.0" width="1180.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="1118.0">all</text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.03%)</title><rect x="10.0" y="1091.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="1102.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.03%)</title><rect x="10.3" y="1091.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.3" y="1102.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="10.7" y="1091.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.7" y="1102.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.09%)</title><rect x="11.0" y="1091.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="14.0" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.03%)</title><rect x="11.0" y="1075.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.0" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="11.0" y="1059.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="14.0" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="11.0" y="1043.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="14.0" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="11.0" y="1027.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.0" y="1038.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.03%)</title><rect x="11.0" y="1011.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="14.0" y="1022.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.06%)</title><rect x="11.3" y="1075.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="14.3" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.06%)</title><rect x="11.3" y="1059.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="14.3" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.06%)</title><rect x="11.3" y="1043.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="14.3" y="1054.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.03%)</title><rect x="11.3" y="1027.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="14.3" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="11.7" y="1027.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.7" y="1038.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.03%)</title><rect x="11.7" y="1011.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="14.7" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.03%)</title><rect x="11.7" y="995.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.7" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (7 samples, 0.20%)</title><rect x="12.0" y="1091.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="15.0" y="1102.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.20%)</title><rect x="12.0" y="1075.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="15.0" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.20%)</title><rect x="12.0" y="1059.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="15.0" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.20%)</title><rect x="12.0" y="1043.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="15.0" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.09%)</title><rect x="12.0" y="1027.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="15.0" y="1038.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (3 samples, 0.09%)</title><rect x="12.0" y="1011.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="15.0" y="1022.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (3 samples, 0.09%)</title><rect x="12.0" y="995.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="15.0" y="1006.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (3 samples, 0.09%)</title><rect x="12.0" y="979.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="15.0" y="990.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (3 samples, 0.09%)</title><rect x="12.0" y="963.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.0" y="974.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (3 samples, 0.09%)</title><rect x="12.0" y="947.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="15.0" y="958.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (2 samples, 0.06%)</title><rect x="12.0" y="931.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="15.0" y="942.0"></text>
</g>
<g>
<title>G1Policy::predict_yg_surv_rate(int, SurvRateGroup*) const (1 samples, 0.03%)</title><rect x="12.4" y="915.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="15.4" y="926.0"></text>
</g>
<g>
<title>OtherRegionsTable::occupied() const (1 samples, 0.03%)</title><rect x="12.7" y="931.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="15.7" y="942.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (3 samples, 0.09%)</title><rect x="13.0" y="1027.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="16.0" y="1038.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.03%)</title><rect x="14.0" y="1027.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="17.0" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (13 samples, 0.37%)</title><rect x="14.4" y="1091.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="17.4" y="1102.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.06%)</title><rect x="15.4" y="1075.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="18.4" y="1086.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.23%)</title><rect x="16.1" y="1075.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="19.1" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (8 samples, 0.23%)</title><rect x="16.1" y="1059.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="19.1" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.20%)</title><rect x="16.1" y="1043.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="19.1" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.03%)</title><rect x="16.1" y="1027.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="19.1" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.11%)</title><rect x="16.4" y="1027.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="19.4" y="1038.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.03%)</title><rect x="16.7" y="1011.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="19.7" y="1022.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="17.1" y="1011.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="20.1" y="1022.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="17.4" y="995.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="20.4" y="1006.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.03%)</title><rect x="17.4" y="979.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="20.4" y="990.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.03%)</title><rect x="17.4" y="963.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="20.4" y="974.0"></text>
</g>
<g>
<title>HeapRegion::set_eden() (1 samples, 0.03%)</title><rect x="17.4" y="947.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="20.4" y="958.0"></text>
</g>
<g>
<title>HeapRegionType::get_trace_type() (1 samples, 0.03%)</title><rect x="17.4" y="931.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="20.4" y="942.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="17.8" y="1027.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="20.8" y="1038.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.03%)</title><rect x="18.1" y="1027.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="21.1" y="1038.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="18.4" y="1043.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="21.4" y="1054.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (52 samples, 1.49%)</title><rect x="18.8" y="1091.0" width="17.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="21.8" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="19.1" y="1075.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="22.1" y="1086.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (50 samples, 1.43%)</title><rect x="19.4" y="1075.0" width="16.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="22.4" y="1086.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.03%)</title><rect x="19.8" y="1059.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="22.8" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (27 samples, 0.77%)</title><rect x="20.1" y="1059.0" width="9.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="23.1" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (24 samples, 0.69%)</title><rect x="20.8" y="1043.0" width="8.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="23.8" y="1054.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="28.9" y="1043.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="31.9" y="1054.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (21 samples, 0.60%)</title><rect x="29.2" y="1059.0" width="7.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="32.2" y="1070.0"></text>
</g>
<g>
<title>JavaThreadBlockedOnMonitorEnterState::JavaThreadBlockedOnMonitorEnterState(JavaThread*, ObjectMonitor*) (1 samples, 0.03%)</title><rect x="29.9" y="1043.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="32.9" y="1054.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (16 samples, 0.46%)</title><rect x="30.2" y="1043.0" width="5.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="33.2" y="1054.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (13 samples, 0.37%)</title><rect x="30.9" y="1027.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="33.9" y="1038.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.03%)</title><rect x="35.3" y="1027.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="38.3" y="1038.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.03%)</title><rect x="35.6" y="1043.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="38.6" y="1054.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.03%)</title><rect x="36.0" y="1043.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="39.0" y="1054.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="36.3" y="1091.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="39.3" y="1102.0"></text>
</g>
<g>
<title>[not_walkable] (5 samples, 0.14%)</title><rect x="36.6" y="1091.0" width="1.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="39.6" y="1102.0"></text>
</g>
<g>
<title>[not_walkable_Java] (78 samples, 2.23%)</title><rect x="38.3" y="1091.0" width="26.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="41.3" y="1102.0">[..</text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (2 samples, 0.06%)</title><rect x="38.3" y="1075.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="41.3" y="1086.0"></text>
</g>
<g>
<title>G1BarrierSet::invalidate(MemRegion) (1 samples, 0.03%)</title><rect x="38.7" y="1059.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="41.7" y="1070.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.03%)</title><rect x="39.0" y="1075.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="42.0" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.06%)</title><rect x="39.3" y="1075.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="42.3" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.03%)</title><rect x="39.7" y="1059.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="42.7" y="1070.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="39.7" y="1043.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="42.7" y="1054.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.03%)</title><rect x="39.7" y="1027.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="42.7" y="1038.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.03%)</title><rect x="39.7" y="1011.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="42.7" y="1022.0"></text>
</g>
<g>
<title>__clock_gettime (73 samples, 2.09%)</title><rect x="40.0" y="1075.0" width="24.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="43.0" y="1086.0">_..</text>
</g>
<g>
<title>[vdso] (2 samples, 0.06%)</title><rect x="40.0" y="1059.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="43.0" y="1070.0"></text>
</g>
<g>
<title>clock_gettime (71 samples, 2.03%)</title><rect x="40.7" y="1059.0" width="23.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="43.7" y="1070.0">c..</text>
</g>
<g>
<title>[vdso] (65 samples, 1.86%)</title><rect x="42.7" y="1043.0" width="21.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="45.7" y="1054.0">[..</text>
</g>
<g>
<title>[unknown] (12 samples, 0.34%)</title><rect x="64.6" y="1091.0" width="4.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="67.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="64.6" y="1075.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="67.6" y="1086.0"></text>
</g>
<g>
<title>PerfEvents::destroyForThread(int) (1 samples, 0.03%)</title><rect x="64.6" y="1059.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="67.6" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (6 samples, 0.17%)</title><rect x="65.0" y="1075.0" width="2.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="68.0" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.14%)</title><rect x="65.3" y="1059.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="68.3" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.14%)</title><rect x="65.3" y="1043.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="68.3" y="1054.0"></text>
</g>
<g>
<title>__se_sys_futex (5 samples, 0.14%)</title><rect x="65.3" y="1027.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="68.3" y="1038.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.11%)</title><rect x="65.3" y="1011.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="68.3" y="1022.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.11%)</title><rect x="65.3" y="995.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="68.3" y="1006.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.11%)</title><rect x="65.3" y="979.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="68.3" y="990.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.03%)</title><rect x="66.3" y="963.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="69.3" y="974.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.03%)</title><rect x="66.7" y="1011.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="69.7" y="1022.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.03%)</title><rect x="66.7" y="995.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="69.7" y="1006.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="66.7" y="979.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="69.7" y="990.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="67.0" y="1075.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="70.0" y="1086.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.03%)</title><rect x="67.3" y="1075.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="70.3" y="1086.0"></text>
</g>
<g>
<title>open64 (1 samples, 0.03%)</title><rect x="67.7" y="1075.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="70.7" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="67.7" y="1059.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="70.7" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="67.7" y="1043.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="70.7" y="1054.0"></text>
</g>
<g>
<title>do_sys_open (1 samples, 0.03%)</title><rect x="67.7" y="1027.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="70.7" y="1038.0"></text>
</g>
<g>
<title>getname_flags (1 samples, 0.03%)</title><rect x="67.7" y="1011.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="70.7" y="1022.0"></text>
</g>
<g>
<title>strncpy_from_user (1 samples, 0.03%)</title><rect x="67.7" y="995.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="70.7" y="1006.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="67.7" y="979.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="70.7" y="990.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="67.7" y="963.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="70.7" y="974.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.06%)</title><rect x="68.0" y="1075.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="71.0" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="68.0" y="1059.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="71.0" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.06%)</title><rect x="68.0" y="1043.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="71.0" y="1054.0"></text>
</g>
<g>
<title>__se_sys_futex (2 samples, 0.06%)</title><rect x="68.0" y="1027.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="71.0" y="1038.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.06%)</title><rect x="68.0" y="1011.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="71.0" y="1022.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.06%)</title><rect x="68.0" y="995.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="71.0" y="1006.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.03%)</title><rect x="68.0" y="979.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="71.0" y="990.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.03%)</title><rect x="68.0" y="963.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="71.0" y="974.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.03%)</title><rect x="68.4" y="979.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="71.4" y="990.0"></text>
</g>
<g>
<title>[unknown_Java] (49 samples, 1.40%)</title><rect x="68.7" y="1091.0" width="16.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="71.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="74.1" y="1075.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="77.1" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="74.1" y="1059.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="77.1" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="74.4" y="1059.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="77.4" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.03%)</title><rect x="74.8" y="1059.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="77.8" y="1070.0"></text>
</g>
<g>
<title>__clock_gettime (8 samples, 0.23%)</title><rect x="75.1" y="1075.0" width="2.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="78.1" y="1086.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.06%)</title><rect x="76.8" y="1059.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="79.8" y="1070.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.06%)</title><rect x="76.8" y="1043.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="79.8" y="1054.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="77.5" y="1059.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="80.5" y="1070.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="77.5" y="1043.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="80.5" y="1054.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="77.5" y="1027.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="80.5" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_signal (17 samples, 0.49%)</title><rect x="77.8" y="1075.0" width="5.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="80.8" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.46%)</title><rect x="78.1" y="1059.0" width="5.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="81.1" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.46%)</title><rect x="78.1" y="1043.0" width="5.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="81.1" y="1054.0"></text>
</g>
<g>
<title>__se_sys_futex (16 samples, 0.46%)</title><rect x="78.1" y="1027.0" width="5.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="81.1" y="1038.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.46%)</title><rect x="78.1" y="1011.0" width="5.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="81.1" y="1022.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.46%)</title><rect x="78.1" y="995.0" width="5.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="81.1" y="1006.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="78.8" y="979.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="81.8" y="990.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.37%)</title><rect x="79.2" y="979.0" width="4.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="82.2" y="990.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.37%)</title><rect x="79.2" y="963.0" width="4.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="82.2" y="974.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.37%)</title><rect x="79.2" y="947.0" width="4.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="82.2" y="958.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.11%)</title><rect x="83.5" y="1075.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="86.5" y="1086.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="84.9" y="1075.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="87.9" y="1086.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.03%)</title><rect x="85.2" y="1091.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="88.2" y="1102.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.03%)</title><rect x="85.6" y="1091.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="88.6" y="1102.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="85.9" y="1091.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="88.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,161 samples, 61.78%)</title><rect x="86.2" y="1091.0" width="729.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="89.2" y="1102.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,161 samples, 61.78%)</title><rect x="86.2" y="1075.0" width="729.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="89.2" y="1086.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,161 samples, 61.78%)</title><rect x="86.2" y="1059.0" width="729.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="89.2" y="1070.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>itable stub (9 samples, 0.26%)</title><rect x="89.3" y="1043.0" width="3.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="92.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (453 samples, 12.95%)</title><rect x="92.3" y="1043.0" width="152.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="95.3" y="1054.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (448 samples, 12.81%)</title><rect x="94.0" y="1027.0" width="151.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.0" y="1038.0">java/util/concurren..</text>
</g>
<g>
<title>itable stub (2 samples, 0.06%)</title><rect x="95.7" y="1011.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="98.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (439 samples, 12.55%)</title><rect x="96.4" y="1011.0" width="148.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.4" y="1022.0">java/util/concurren..</text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="97.7" y="995.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="100.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="98.0" y="995.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="101.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/448964136.apply (433 samples, 12.38%)</title><rect x="98.4" y="995.0" width="146.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="101.4" y="1006.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (428 samples, 12.24%)</title><rect x="100.1" y="979.0" width="144.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="103.1" y="990.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (428 samples, 12.24%)</title><rect x="100.1" y="963.0" width="144.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="103.1" y="974.0">jdk/internal/net/h..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.03%)</title><rect x="100.7" y="947.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="103.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="100.7" y="931.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.06%)</title><rect x="101.1" y="947.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.06%)</title><rect x="101.1" y="931.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (339 samples, 9.69%)</title><rect x="101.8" y="947.0" width="114.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.8" y="958.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (339 samples, 9.69%)</title><rect x="101.8" y="931.0" width="114.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.8" y="942.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (339 samples, 9.69%)</title><rect x="101.8" y="915.0" width="114.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="104.8" y="926.0">jdk/internal/n..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (145 samples, 4.15%)</title><rect x="101.8" y="899.0" width="48.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="104.8" y="910.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (145 samples, 4.15%)</title><rect x="101.8" y="883.0" width="48.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.8" y="894.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (145 samples, 4.15%)</title><rect x="101.8" y="867.0" width="48.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="104.8" y="878.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$220/1874338279.apply (143 samples, 4.09%)</title><rect x="102.4" y="851.0" width="48.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="105.4" y="862.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (143 samples, 4.09%)</title><rect x="102.4" y="835.0" width="48.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="105.4" y="846.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (143 samples, 4.09%)</title><rect x="102.4" y="819.0" width="48.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.4" y="830.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$175/597602705.apply (4 samples, 0.11%)</title><rect x="102.4" y="803.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="105.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (4 samples, 0.11%)</title><rect x="102.4" y="787.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="105.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (4 samples, 0.11%)</title><rect x="102.4" y="771.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="105.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (4 samples, 0.11%)</title><rect x="102.4" y="755.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="105.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (2 samples, 0.06%)</title><rect x="102.4" y="739.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="105.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (2 samples, 0.06%)</title><rect x="102.4" y="723.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (1 samples, 0.03%)</title><rect x="102.8" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (2 samples, 0.06%)</title><rect x="103.1" y="739.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="106.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (2 samples, 0.06%)</title><rect x="103.1" y="723.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="106.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onSubscribe (2 samples, 0.06%)</title><rect x="103.1" y="707.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="106.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.setSubscription (2 samples, 0.06%)</title><rect x="103.1" y="691.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="106.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.06%)</title><rect x="103.1" y="675.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="106.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.06%)</title><rect x="103.1" y="659.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="106.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$177/495121700.apply (137 samples, 3.92%)</title><rect x="103.8" y="803.0" width="46.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="106.8" y="814.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (137 samples, 3.92%)</title><rect x="103.8" y="787.0" width="46.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.8" y="798.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.03%)</title><rect x="103.8" y="771.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="106.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="103.8" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="106.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (136 samples, 3.89%)</title><rect x="104.1" y="771.0" width="45.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="107.1" y="782.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (121 samples, 3.46%)</title><rect x="104.1" y="755.0" width="40.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="107.1" y="766.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (117 samples, 3.34%)</title><rect x="105.5" y="739.0" width="39.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="108.5" y="750.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.03%)</title><rect x="105.5" y="723.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="108.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (3 samples, 0.09%)</title><rect x="105.8" y="723.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$251/524292439.apply (2 samples, 0.06%)</title><rect x="105.8" y="707.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="108.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$254/1022208416.apply (1 samples, 0.03%)</title><rect x="106.5" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="109.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$251/524292439.apply (113 samples, 3.23%)</title><rect x="106.8" y="723.0" width="38.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="109.8" y="734.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (113 samples, 3.23%)</title><rect x="106.8" y="707.0" width="38.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="109.8" y="718.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.06%)</title><rect x="107.5" y="691.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="110.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.06%)</title><rect x="107.5" y="675.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="110.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (7 samples, 0.20%)</title><rect x="108.2" y="691.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="111.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (7 samples, 0.20%)</title><rect x="108.2" y="675.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="111.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.20%)</title><rect x="108.2" y="659.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (1 samples, 0.03%)</title><rect x="108.5" y="643.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="111.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.14%)</title><rect x="108.8" y="643.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.8" y="654.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="108.8" y="627.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="111.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4 samples, 0.11%)</title><rect x="109.2" y="627.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="112.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (4 samples, 0.11%)</title><rect x="109.2" y="611.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="112.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4 samples, 0.11%)</title><rect x="109.2" y="595.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="112.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (4 samples, 0.11%)</title><rect x="109.2" y="579.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (1 samples, 0.03%)</title><rect x="109.9" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="112.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.03%)</title><rect x="109.9" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="112.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.03%)</title><rect x="109.9" y="531.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="112.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.03%)</title><rect x="110.2" y="563.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.03%)</title><rect x="110.2" y="547.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="113.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1 samples, 0.03%)</title><rect x="110.2" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="113.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1 samples, 0.03%)</title><rect x="110.2" y="515.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1 samples, 0.03%)</title><rect x="110.2" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.2" y="510.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (1 samples, 0.03%)</title><rect x="110.2" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="113.2" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.03%)</title><rect x="110.2" y="467.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="113.2" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.03%)</title><rect x="110.2" y="451.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="113.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.03%)</title><rect x="110.2" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="113.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (1 samples, 0.03%)</title><rect x="110.2" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.2" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (1 samples, 0.03%)</title><rect x="110.2" y="403.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="113.2" y="414.0"></text>
</g>
<g>
<title>__GI___writev (1 samples, 0.03%)</title><rect x="110.2" y="387.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="113.2" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="110.2" y="371.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="113.2" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="110.2" y="355.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="113.2" y="366.0"></text>
</g>
<g>
<title>do_writev (1 samples, 0.03%)</title><rect x="110.2" y="339.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="113.2" y="350.0"></text>
</g>
<g>
<title>vfs_writev (1 samples, 0.03%)</title><rect x="110.2" y="323.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="113.2" y="334.0"></text>
</g>
<g>
<title>do_iter_write (1 samples, 0.03%)</title><rect x="110.2" y="307.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="113.2" y="318.0"></text>
</g>
<g>
<title>do_iter_readv_writev (1 samples, 0.03%)</title><rect x="110.2" y="291.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="113.2" y="302.0"></text>
</g>
<g>
<title>sock_write_iter (1 samples, 0.03%)</title><rect x="110.2" y="275.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="113.2" y="286.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.03%)</title><rect x="110.2" y="259.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="113.2" y="270.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.03%)</title><rect x="110.2" y="243.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="113.2" y="254.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.03%)</title><rect x="110.2" y="227.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="113.2" y="238.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.03%)</title><rect x="110.2" y="211.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="113.2" y="222.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.03%)</title><rect x="110.2" y="195.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="113.2" y="206.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.03%)</title><rect x="110.2" y="179.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="113.2" y="190.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.03%)</title><rect x="110.2" y="163.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="113.2" y="174.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.03%)</title><rect x="110.2" y="147.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="113.2" y="158.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.03%)</title><rect x="110.2" y="131.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="113.2" y="142.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.03%)</title><rect x="110.2" y="115.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="113.2" y="126.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.03%)</title><rect x="110.2" y="99.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="113.2" y="110.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.03%)</title><rect x="110.2" y="83.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="113.2" y="94.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.03%)</title><rect x="110.2" y="67.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="113.2" y="78.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.03%)</title><rect x="110.2" y="51.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="113.2" y="62.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.03%)</title><rect x="110.2" y="35.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="113.2" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (21 samples, 0.60%)</title><rect x="110.5" y="691.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="113.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (21 samples, 0.60%)</title><rect x="110.5" y="675.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="113.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (2 samples, 0.06%)</title><rect x="110.5" y="659.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="113.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2 samples, 0.06%)</title><rect x="110.5" y="643.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="113.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (2 samples, 0.06%)</title><rect x="110.5" y="627.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (2 samples, 0.06%)</title><rect x="110.5" y="611.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="113.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.reset (2 samples, 0.06%)</title><rect x="110.5" y="595.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="113.5" y="606.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.03%)</title><rect x="110.9" y="579.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="113.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (19 samples, 0.54%)</title><rect x="111.2" y="659.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="114.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (19 samples, 0.54%)</title><rect x="111.2" y="643.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="114.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (4 samples, 0.11%)</title><rect x="111.9" y="627.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4 samples, 0.11%)</title><rect x="111.9" y="611.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4 samples, 0.11%)</title><rect x="111.9" y="595.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="114.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4 samples, 0.11%)</title><rect x="111.9" y="579.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="114.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (4 samples, 0.11%)</title><rect x="111.9" y="563.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="114.9" y="574.0"></text>
</g>
<g>
<title>__write (4 samples, 0.11%)</title><rect x="111.9" y="547.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="114.9" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.11%)</title><rect x="111.9" y="531.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="114.9" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.11%)</title><rect x="111.9" y="515.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="114.9" y="526.0"></text>
</g>
<g>
<title>ksys_write (4 samples, 0.11%)</title><rect x="111.9" y="499.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="114.9" y="510.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="111.9" y="483.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="114.9" y="494.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="111.9" y="467.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="114.9" y="478.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="111.9" y="451.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="114.9" y="462.0"></text>
</g>
<g>
<title>vfs_write (3 samples, 0.09%)</title><rect x="112.2" y="483.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="115.2" y="494.0"></text>
</g>
<g>
<title>new_sync_write (3 samples, 0.09%)</title><rect x="112.2" y="467.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="115.2" y="478.0"></text>
</g>
<g>
<title>pipe_write (3 samples, 0.09%)</title><rect x="112.2" y="451.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="115.2" y="462.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.06%)</title><rect x="112.2" y="435.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="115.2" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.06%)</title><rect x="112.2" y="419.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="115.2" y="430.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="112.9" y="435.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="115.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (1 samples, 0.03%)</title><rect x="113.2" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="116.2" y="638.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="113.2" y="611.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="116.2" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="113.2" y="595.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="116.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/FlowTube.asTubeSubscriber (12 samples, 0.34%)</title><rect x="113.6" y="627.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="116.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (81 samples, 2.32%)</title><rect x="117.6" y="691.0" width="27.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="120.6" y="702.0">j..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.06%)</title><rect x="117.9" y="675.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="120.9" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.06%)</title><rect x="117.9" y="659.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="120.9" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.06%)</title><rect x="117.9" y="643.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="120.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.06%)</title><rect x="117.9" y="627.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="120.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="118.3" y="611.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="121.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.03%)</title><rect x="118.6" y="675.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.6" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="118.6" y="659.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="121.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.06%)</title><rect x="119.0" y="675.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="122.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.06%)</title><rect x="119.0" y="659.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="122.0" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="119.3" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="122.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (61 samples, 1.74%)</title><rect x="119.6" y="675.0" width="20.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="122.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (6 samples, 0.17%)</title><rect x="119.6" y="659.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="122.6" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (6 samples, 0.17%)</title><rect x="119.6" y="643.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="122.6" y="654.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (6 samples, 0.17%)</title><rect x="119.6" y="627.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="122.6" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (6 samples, 0.17%)</title><rect x="119.6" y="611.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="122.6" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (6 samples, 0.17%)</title><rect x="119.6" y="595.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="122.6" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (6 samples, 0.17%)</title><rect x="119.6" y="579.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="122.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.17%)</title><rect x="119.6" y="563.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="122.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.14%)</title><rect x="120.0" y="547.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="123.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (5 samples, 0.14%)</title><rect x="120.0" y="531.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="123.0" y="542.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="121.0" y="515.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="124.0" y="526.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="121.0" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.0" y="510.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="121.0" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.0" y="494.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.03%)</title><rect x="121.0" y="467.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="124.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.getChar (1 samples, 0.03%)</title><rect x="121.3" y="515.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.3" y="526.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.03%)</title><rect x="121.3" y="499.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="124.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (23 samples, 0.66%)</title><rect x="121.7" y="659.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.7" y="670.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.03%)</title><rect x="122.7" y="643.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="125.7" y="654.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="122.7" y="627.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="125.7" y="638.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="122.7" y="611.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.7" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="122.7" y="595.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="125.7" y="606.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (4 samples, 0.11%)</title><rect x="123.0" y="643.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.0" y="654.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (4 samples, 0.11%)</title><rect x="123.0" y="627.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="126.0" y="638.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.&lt;init&gt; (1 samples, 0.03%)</title><rect x="123.0" y="611.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="126.0" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (3 samples, 0.09%)</title><rect x="123.3" y="611.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.3" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (3 samples, 0.09%)</title><rect x="123.3" y="595.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="126.3" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (3 samples, 0.09%)</title><rect x="123.3" y="579.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="126.3" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.06%)</title><rect x="123.7" y="563.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="126.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.canEncode (1 samples, 0.03%)</title><rect x="124.0" y="547.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="127.0" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (2 samples, 0.06%)</title><rect x="124.4" y="643.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="127.4" y="654.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (2 samples, 0.06%)</title><rect x="124.4" y="627.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="127.4" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.03%)</title><rect x="124.4" y="611.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="127.4" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1 samples, 0.03%)</title><rect x="124.7" y="611.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="127.7" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.03%)</title><rect x="124.7" y="595.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="127.7" y="606.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (5 samples, 0.14%)</title><rect x="125.0" y="643.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="128.0" y="654.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.&lt;init&gt; (1 samples, 0.03%)</title><rect x="125.4" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="128.4" y="638.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.&lt;init&gt; (1 samples, 0.03%)</title><rect x="125.4" y="611.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="128.4" y="622.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.&lt;init&gt; (1 samples, 0.03%)</title><rect x="125.4" y="595.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="128.4" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (3 samples, 0.09%)</title><rect x="125.7" y="627.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="128.7" y="638.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$275/1848526609.test (1 samples, 0.03%)</title><rect x="125.7" y="611.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="128.7" y="622.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="126.0" y="611.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="129.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (1 samples, 0.03%)</title><rect x="126.4" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.4" y="622.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (4 samples, 0.11%)</title><rect x="126.7" y="643.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="129.7" y="654.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (1 samples, 0.03%)</title><rect x="127.7" y="627.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="130.7" y="638.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$275/1848526609.test (3 samples, 0.09%)</title><rect x="128.1" y="643.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="131.1" y="654.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (3 samples, 0.09%)</title><rect x="128.1" y="627.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$81/1881901842.test (3 samples, 0.09%)</title><rect x="128.1" y="611.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="131.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (3 samples, 0.09%)</title><rect x="128.1" y="595.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="131.1" y="606.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$70/671046933.test (3 samples, 0.09%)</title><rect x="128.1" y="579.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="131.1" y="590.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (3 samples, 0.09%)</title><rect x="128.1" y="563.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="131.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/1523457748.test (3 samples, 0.09%)</title><rect x="128.1" y="547.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (3 samples, 0.09%)</title><rect x="128.1" y="531.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.1" y="542.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.09%)</title><rect x="128.1" y="515.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="131.1" y="526.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.09%)</title><rect x="128.1" y="499.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.1" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.09%)</title><rect x="128.1" y="483.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="131.1" y="494.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="128.7" y="467.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="131.7" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="129.1" y="643.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="132.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (32 samples, 0.91%)</title><rect x="129.4" y="659.0" width="10.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="132.4" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (32 samples, 0.91%)</title><rect x="129.4" y="643.0" width="10.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.4" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (32 samples, 0.91%)</title><rect x="129.4" y="627.0" width="10.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="132.4" y="638.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="129.8" y="611.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="132.8" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (30 samples, 0.86%)</title><rect x="130.1" y="611.0" width="10.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="133.1" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1852562922.accept (29 samples, 0.83%)</title><rect x="130.1" y="595.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.1" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (29 samples, 0.83%)</title><rect x="130.1" y="579.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="133.1" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (6 samples, 0.17%)</title><rect x="131.8" y="563.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="134.8" y="574.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="132.8" y="547.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="135.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$66/509891820.test (2 samples, 0.06%)</title><rect x="133.1" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="136.1" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (9 samples, 0.26%)</title><rect x="133.8" y="563.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.8" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/555770717.accept (4 samples, 0.11%)</title><rect x="135.5" y="547.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="138.5" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.11%)</title><rect x="135.5" y="531.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="138.5" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.23%)</title><rect x="136.8" y="563.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="139.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.09%)</title><rect x="137.2" y="547.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.09%)</title><rect x="137.2" y="531.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="140.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.09%)</title><rect x="137.2" y="515.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.2" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (4 samples, 0.11%)</title><rect x="138.2" y="547.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="141.2" y="558.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="139.5" y="563.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="142.5" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.03%)</title><rect x="139.9" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="142.9" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1852562922.accept (1 samples, 0.03%)</title><rect x="139.9" y="579.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="142.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (1 samples, 0.03%)</title><rect x="140.2" y="675.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.2" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1 samples, 0.03%)</title><rect x="140.2" y="659.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="143.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (3 samples, 0.09%)</title><rect x="140.5" y="675.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="143.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (3 samples, 0.09%)</title><rect x="140.5" y="659.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="143.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="140.5" y="643.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.03%)</title><rect x="140.5" y="627.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="143.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1617550160.invoke (1 samples, 0.03%)</title><rect x="140.5" y="611.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="143.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="140.5" y="595.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="143.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.03%)</title><rect x="140.5" y="579.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="143.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.03%)</title><rect x="140.5" y="563.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="143.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (2 samples, 0.06%)</title><rect x="140.9" y="643.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="143.9" y="654.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="141.2" y="627.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="144.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (10 samples, 0.29%)</title><rect x="141.6" y="675.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="144.6" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.06%)</title><rect x="141.9" y="659.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="144.9" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="142.6" y="659.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.6" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="142.6" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.6" y="654.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="142.6" y="627.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="145.6" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.17%)</title><rect x="142.9" y="659.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="143.6" y="643.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.6" y="654.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="143.6" y="627.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.6" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="143.6" y="611.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.6" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.03%)</title><rect x="143.9" y="643.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="143.9" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="143.9" y="611.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="146.9" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="143.9" y="595.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="146.9" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (1 samples, 0.03%)</title><rect x="143.9" y="579.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="146.9" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.06%)</title><rect x="144.3" y="643.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="147.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.setRetryOnError (1 samples, 0.03%)</title><rect x="144.9" y="755.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="147.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (13 samples, 0.37%)</title><rect x="145.3" y="755.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="148.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (13 samples, 0.37%)</title><rect x="145.3" y="739.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="148.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (5 samples, 0.14%)</title><rect x="145.9" y="723.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (5 samples, 0.14%)</title><rect x="145.9" y="707.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="148.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.17%)</title><rect x="147.6" y="723.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="150.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.17%)</title><rect x="147.6" y="707.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="150.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.17%)</title><rect x="147.6" y="691.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.17%)</title><rect x="147.6" y="675.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="150.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5 samples, 0.14%)</title><rect x="147.6" y="659.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="150.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$216/1713688296.run (4 samples, 0.11%)</title><rect x="148.0" y="643.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="151.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (4 samples, 0.11%)</title><rect x="148.0" y="627.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="151.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (3 samples, 0.09%)</title><rect x="148.0" y="611.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onReadError (3 samples, 0.09%)</title><rect x="148.0" y="595.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="151.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.wrapWithExtraDetail (3 samples, 0.09%)</title><rect x="148.0" y="579.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="151.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader$$Lambda$296/921387510.get (3 samples, 0.09%)</title><rect x="148.0" y="563.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="151.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.currentStateMessage (3 samples, 0.09%)</title><rect x="148.0" y="547.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="151.0" y="558.0"></text>
</g>
<g>
<title>java/lang/String.format (3 samples, 0.09%)</title><rect x="148.0" y="531.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.0" y="542.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (3 samples, 0.09%)</title><rect x="148.0" y="515.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.03%)</title><rect x="149.0" y="611.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="152.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.03%)</title><rect x="149.0" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="152.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.03%)</title><rect x="149.0" y="579.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="152.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (1 samples, 0.03%)</title><rect x="149.0" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="152.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (1 samples, 0.03%)</title><rect x="149.0" y="547.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="152.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (1 samples, 0.03%)</title><rect x="149.0" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.03%)</title><rect x="149.0" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="152.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="149.0" y="499.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="152.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="149.0" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="152.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="149.0" y="467.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="152.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="149.3" y="659.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.03%)</title><rect x="149.3" y="643.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="152.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.03%)</title><rect x="149.3" y="627.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="152.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$216/1713688296.run (1 samples, 0.03%)</title><rect x="149.3" y="611.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="152.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.03%)</title><rect x="149.3" y="595.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (1 samples, 0.03%)</title><rect x="149.3" y="579.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="152.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onReadError (1 samples, 0.03%)</title><rect x="149.3" y="563.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.wrapWithExtraDetail (1 samples, 0.03%)</title><rect x="149.3" y="547.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="152.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader$$Lambda$296/921387510.get (1 samples, 0.03%)</title><rect x="149.3" y="531.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="152.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.currentStateMessage (1 samples, 0.03%)</title><rect x="149.3" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="152.3" y="526.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.03%)</title><rect x="149.3" y="499.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="152.3" y="510.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.03%)</title><rect x="149.3" y="483.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="152.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1 samples, 0.03%)</title><rect x="149.3" y="467.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="152.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connected (1 samples, 0.03%)</title><rect x="149.7" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="152.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.failedFuture (2 samples, 0.06%)</title><rect x="150.0" y="803.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="153.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeExceptionally (2 samples, 0.06%)</title><rect x="150.0" y="787.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="153.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.06%)</title><rect x="150.0" y="771.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="153.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (194 samples, 5.55%)</title><rect x="150.7" y="899.0" width="65.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="153.7" y="910.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.09%)</title><rect x="150.7" y="883.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="153.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.09%)</title><rect x="150.7" y="867.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="153.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="151.0" y="851.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="154.0" y="862.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="151.0" y="835.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="154.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$219/1531358841.apply (1 samples, 0.03%)</title><rect x="151.3" y="851.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (1 samples, 0.03%)</title><rect x="151.3" y="835.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="154.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.03%)</title><rect x="151.3" y="819.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.03%)</title><rect x="151.3" y="803.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="154.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="151.3" y="787.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.11%)</title><rect x="151.7" y="883.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="154.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.11%)</title><rect x="151.7" y="867.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="154.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.06%)</title><rect x="152.4" y="851.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="152.4" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.03%)</title><rect x="152.4" y="819.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="155.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.03%)</title><rect x="152.4" y="803.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.4" y="814.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (1 samples, 0.03%)</title><rect x="152.4" y="787.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="155.4" y="798.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (1 samples, 0.03%)</title><rect x="152.4" y="771.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="155.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (1 samples, 0.03%)</title><rect x="152.4" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="155.4" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="152.7" y="835.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="155.7" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="152.7" y="819.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="155.7" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="152.7" y="803.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="155.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (187 samples, 5.35%)</title><rect x="153.0" y="883.0" width="63.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.0" y="894.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (171 samples, 4.89%)</title><rect x="153.0" y="867.0" width="57.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.0" y="878.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="153.0" y="851.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="156.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (170 samples, 4.86%)</title><rect x="153.4" y="851.0" width="57.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="156.4" y="862.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (165 samples, 4.72%)</title><rect x="153.4" y="835.0" width="55.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="156.4" y="846.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$181/1649734543.apply (165 samples, 4.72%)</title><rect x="153.4" y="819.0" width="55.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.4" y="830.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (165 samples, 4.72%)</title><rect x="153.4" y="803.0" width="55.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="156.4" y="814.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (165 samples, 4.72%)</title><rect x="153.4" y="787.0" width="55.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="156.4" y="798.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (73 samples, 2.09%)</title><rect x="153.4" y="771.0" width="24.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="156.4" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (73 samples, 2.09%)</title><rect x="153.4" y="755.0" width="24.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.4" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (73 samples, 2.09%)</title><rect x="153.4" y="739.0" width="24.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.4" y="750.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$217/1047541244.apply (73 samples, 2.09%)</title><rect x="153.4" y="723.0" width="24.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="156.4" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (73 samples, 2.09%)</title><rect x="153.4" y="707.0" width="24.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="156.4" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (73 samples, 2.09%)</title><rect x="153.4" y="691.0" width="24.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.4" y="702.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (73 samples, 2.09%)</title><rect x="153.4" y="675.0" width="24.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.4" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (61 samples, 1.74%)</title><rect x="153.4" y="659.0" width="20.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.4" y="670.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (4 samples, 0.11%)</title><rect x="153.4" y="643.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="156.4" y="654.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (4 samples, 0.11%)</title><rect x="153.4" y="627.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.4" y="638.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode0 (2 samples, 0.06%)</title><rect x="154.0" y="611.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.0" y="622.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeBlock (2 samples, 0.06%)</title><rect x="154.0" y="595.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="157.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (52 samples, 1.49%)</title><rect x="154.7" y="643.0" width="17.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="157.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (51 samples, 1.46%)</title><rect x="154.7" y="627.0" width="17.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="157.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (51 samples, 1.46%)</title><rect x="154.7" y="611.0" width="17.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="157.7" y="622.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (50 samples, 1.43%)</title><rect x="155.1" y="595.0" width="16.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="158.1" y="606.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (36 samples, 1.03%)</title><rect x="156.1" y="579.0" width="12.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="159.1" y="590.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="158.1" y="563.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="161.1" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.06%)</title><rect x="158.4" y="563.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="161.4" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (2 samples, 0.06%)</title><rect x="158.4" y="547.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="161.4" y="558.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (8 samples, 0.23%)</title><rect x="159.1" y="563.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="162.1" y="574.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.03%)</title><rect x="159.8" y="547.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="162.8" y="558.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.03%)</title><rect x="160.1" y="547.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="163.1" y="558.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (4 samples, 0.11%)</title><rect x="160.5" y="547.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="163.5" y="558.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.03%)</title><rect x="161.1" y="531.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="164.1" y="542.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.03%)</title><rect x="161.5" y="531.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="164.5" y="542.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.03%)</title><rect x="161.8" y="563.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="164.8" y="574.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.03%)</title><rect x="162.1" y="563.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="165.1" y="574.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (6 samples, 0.17%)</title><rect x="162.5" y="563.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="165.5" y="574.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (6 samples, 0.17%)</title><rect x="162.5" y="547.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="165.5" y="558.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (5 samples, 0.14%)</title><rect x="162.8" y="531.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="165.8" y="542.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="164.2" y="515.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="167.2" y="526.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (11 samples, 0.31%)</title><rect x="164.5" y="563.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="167.5" y="574.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.09%)</title><rect x="165.2" y="547.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="168.2" y="558.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.03%)</title><rect x="165.8" y="531.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="168.8" y="542.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.06%)</title><rect x="166.2" y="547.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="169.2" y="558.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.11%)</title><rect x="166.9" y="547.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="169.9" y="558.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.06%)</title><rect x="167.5" y="531.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="170.5" y="542.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.06%)</title><rect x="167.5" y="515.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="170.5" y="526.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.03%)</title><rect x="168.2" y="579.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="171.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/302977067.run (9 samples, 0.26%)</title><rect x="168.5" y="579.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="171.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (7 samples, 0.20%)</title><rect x="169.2" y="563.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="172.2" y="574.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (7 samples, 0.20%)</title><rect x="169.2" y="547.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="172.2" y="558.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (1 samples, 0.03%)</title><rect x="169.2" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="172.2" y="542.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.03%)</title><rect x="169.2" y="515.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="172.2" y="526.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.03%)</title><rect x="169.2" y="499.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="172.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.03%)</title><rect x="169.2" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.2" y="494.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="169.2" y="467.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="169.2" y="451.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="172.2" y="462.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (6 samples, 0.17%)</title><rect x="169.6" y="531.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="172.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (6 samples, 0.17%)</title><rect x="169.6" y="515.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.6" y="526.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.06%)</title><rect x="170.9" y="499.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.9" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.06%)</title><rect x="170.9" y="483.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="173.9" y="494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="171.2" y="467.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="174.2" y="478.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="171.2" y="451.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="174.2" y="462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="171.2" y="435.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="174.2" y="446.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="171.6" y="579.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="174.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (1 samples, 0.03%)</title><rect x="171.9" y="627.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (1 samples, 0.03%)</title><rect x="171.9" y="611.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="174.9" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (1 samples, 0.03%)</title><rect x="171.9" y="595.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="174.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (5 samples, 0.14%)</title><rect x="172.3" y="643.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="175.3" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.09%)</title><rect x="172.3" y="627.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="175.3" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.09%)</title><rect x="172.3" y="611.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="175.3" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.09%)</title><rect x="172.3" y="595.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="175.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.09%)</title><rect x="172.3" y="579.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="175.3" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.09%)</title><rect x="172.3" y="563.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="175.3" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="172.3" y="547.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.3" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.06%)</title><rect x="172.6" y="547.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="175.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.length (2 samples, 0.06%)</title><rect x="173.3" y="627.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="176.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (12 samples, 0.34%)</title><rect x="173.9" y="659.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="176.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.23%)</title><rect x="175.3" y="643.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="178.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.14%)</title><rect x="175.6" y="627.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="178.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.14%)</title><rect x="175.6" y="611.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (5 samples, 0.14%)</title><rect x="175.6" y="595.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="178.6" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.06%)</title><rect x="177.3" y="627.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="180.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (92 samples, 2.63%)</title><rect x="178.0" y="771.0" width="31.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="181.0" y="782.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.03%)</title><rect x="178.3" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="181.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (90 samples, 2.57%)</title><rect x="178.7" y="755.0" width="30.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="181.7" y="766.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (1 samples, 0.03%)</title><rect x="178.7" y="739.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="181.7" y="750.0"></text>
</g>
<g>
<title>_new_instance_Java (1 samples, 0.03%)</title><rect x="178.7" y="723.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="181.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (27 samples, 0.77%)</title><rect x="179.0" y="739.0" width="9.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="182.0" y="750.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (1 samples, 0.03%)</title><rect x="179.0" y="723.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="182.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (26 samples, 0.74%)</title><rect x="179.3" y="723.0" width="8.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="182.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (25 samples, 0.71%)</title><rect x="179.7" y="707.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="182.7" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.get (12 samples, 0.34%)</title><rect x="180.7" y="691.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="183.7" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.06%)</title><rect x="180.7" y="675.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="183.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (1 samples, 0.03%)</title><rect x="181.0" y="659.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="184.0" y="670.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.03%)</title><rect x="181.0" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="184.0" y="654.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (1 samples, 0.03%)</title><rect x="181.0" y="627.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="184.0" y="638.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (1 samples, 0.03%)</title><rect x="181.0" y="611.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="184.0" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (10 samples, 0.29%)</title><rect x="181.4" y="675.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="184.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (10 samples, 0.29%)</title><rect x="181.4" y="659.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="184.4" y="670.0"></text>
</g>
<g>
<title>java/util/Objects.hash (10 samples, 0.29%)</title><rect x="181.4" y="643.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="184.4" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (10 samples, 0.29%)</title><rect x="181.4" y="627.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="184.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (10 samples, 0.29%)</title><rect x="184.7" y="691.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="187.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (62 samples, 1.77%)</title><rect x="188.1" y="739.0" width="20.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="191.1" y="750.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (56 samples, 1.60%)</title><rect x="190.1" y="723.0" width="18.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="193.1" y="734.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.03%)</title><rect x="190.1" y="707.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="193.1" y="718.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (30 samples, 0.86%)</title><rect x="190.5" y="707.0" width="10.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="193.5" y="718.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.03%)</title><rect x="191.8" y="691.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="194.8" y="702.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (1 samples, 0.03%)</title><rect x="192.2" y="691.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="195.2" y="702.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.03%)</title><rect x="192.5" y="691.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="195.5" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.06%)</title><rect x="192.8" y="691.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="195.8" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (2 samples, 0.06%)</title><rect x="192.8" y="675.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="195.8" y="686.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.03%)</title><rect x="193.5" y="691.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="196.5" y="702.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.11%)</title><rect x="193.8" y="691.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="196.8" y="702.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.03%)</title><rect x="194.2" y="675.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="197.2" y="686.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.03%)</title><rect x="194.5" y="675.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="197.5" y="686.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.03%)</title><rect x="194.5" y="659.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="197.5" y="670.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.03%)</title><rect x="194.9" y="675.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="197.9" y="686.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.03%)</title><rect x="195.2" y="691.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="198.2" y="702.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.03%)</title><rect x="195.5" y="691.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="198.5" y="702.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.06%)</title><rect x="195.9" y="691.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="198.9" y="702.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="196.5" y="691.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="199.5" y="702.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.03%)</title><rect x="196.9" y="691.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="199.9" y="702.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.03%)</title><rect x="197.2" y="691.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="200.2" y="702.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.06%)</title><rect x="197.6" y="691.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="200.6" y="702.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="197.6" y="675.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="200.6" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="197.6" y="659.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="200.6" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="197.6" y="643.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="200.6" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="197.6" y="627.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="200.6" y="638.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.03%)</title><rect x="197.9" y="675.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="200.9" y="686.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="197.9" y="659.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="200.9" y="670.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (7 samples, 0.20%)</title><rect x="198.2" y="691.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="201.2" y="702.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.09%)</title><rect x="199.6" y="675.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="202.6" y="686.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (4 samples, 0.11%)</title><rect x="200.6" y="707.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="203.6" y="718.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.03%)</title><rect x="201.9" y="707.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="204.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$186/873240915.run (17 samples, 0.49%)</title><rect x="202.3" y="707.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="205.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (15 samples, 0.43%)</title><rect x="203.0" y="691.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="206.0" y="702.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.06%)</title><rect x="203.3" y="675.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="206.3" y="686.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (12 samples, 0.34%)</title><rect x="204.0" y="675.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="207.0" y="686.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (12 samples, 0.34%)</title><rect x="204.0" y="659.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="207.0" y="670.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (12 samples, 0.34%)</title><rect x="204.0" y="643.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="207.0" y="654.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (12 samples, 0.34%)</title><rect x="204.0" y="627.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="207.0" y="638.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (11 samples, 0.31%)</title><rect x="204.3" y="611.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="207.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (5 samples, 0.14%)</title><rect x="204.6" y="595.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="207.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.spread (4 samples, 0.11%)</title><rect x="205.0" y="579.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="208.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (5 samples, 0.14%)</title><rect x="206.3" y="595.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="209.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (4 samples, 0.11%)</title><rect x="206.3" y="579.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="209.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (4 samples, 0.11%)</title><rect x="206.3" y="563.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="209.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (2 samples, 0.06%)</title><rect x="207.0" y="547.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="210.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (2 samples, 0.06%)</title><rect x="207.0" y="531.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.0" y="542.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.03%)</title><rect x="207.7" y="579.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="210.7" y="590.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="208.0" y="707.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="211.0" y="718.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (2 samples, 0.06%)</title><rect x="208.4" y="707.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="211.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="209.0" y="835.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="212.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.11%)</title><rect x="209.4" y="835.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="212.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.11%)</title><rect x="209.4" y="819.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="212.4" y="830.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.06%)</title><rect x="209.4" y="803.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="212.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$181/1649734543.apply (2 samples, 0.06%)</title><rect x="210.0" y="803.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="213.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.06%)</title><rect x="210.7" y="867.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="213.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.06%)</title><rect x="210.7" y="851.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="213.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="211.1" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="214.1" y="846.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="211.1" y="819.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="214.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (14 samples, 0.40%)</title><rect x="211.4" y="867.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="214.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.03%)</title><rect x="213.1" y="851.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="216.1" y="862.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="213.1" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="216.1" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="213.1" y="819.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="216.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (4 samples, 0.11%)</title><rect x="213.4" y="851.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="216.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.11%)</title><rect x="213.4" y="835.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="216.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.11%)</title><rect x="213.4" y="819.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="216.4" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.11%)</title><rect x="213.4" y="803.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="216.4" y="814.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="214.4" y="787.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="217.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (1 samples, 0.03%)</title><rect x="214.8" y="851.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="217.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.09%)</title><rect x="215.1" y="851.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="218.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (3 samples, 0.09%)</title><rect x="215.1" y="835.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="218.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.&lt;init&gt; (2 samples, 0.06%)</title><rect x="215.1" y="819.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="218.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.03%)</title><rect x="215.8" y="819.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="218.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (37 samples, 1.06%)</title><rect x="216.1" y="947.0" width="12.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="219.1" y="958.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (16 samples, 0.46%)</title><rect x="217.1" y="931.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="220.1" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (12 samples, 0.34%)</title><rect x="218.5" y="915.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="221.5" y="926.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.09%)</title><rect x="219.5" y="899.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="222.5" y="910.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.09%)</title><rect x="219.5" y="883.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.5" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.09%)</title><rect x="219.5" y="867.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="222.5" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (4 samples, 0.11%)</title><rect x="220.5" y="899.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="223.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (2 samples, 0.06%)</title><rect x="221.8" y="899.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="224.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (18 samples, 0.51%)</title><rect x="222.5" y="931.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="225.5" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (18 samples, 0.51%)</title><rect x="222.5" y="915.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="225.5" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (17 samples, 0.49%)</title><rect x="222.9" y="899.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="225.9" y="910.0"></text>
</g>
<g>
<title>__write (17 samples, 0.49%)</title><rect x="222.9" y="883.0" width="5.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="225.9" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.49%)</title><rect x="222.9" y="867.0" width="5.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="225.9" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.49%)</title><rect x="222.9" y="851.0" width="5.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="225.9" y="862.0"></text>
</g>
<g>
<title>ksys_write (16 samples, 0.46%)</title><rect x="222.9" y="835.0" width="5.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="225.9" y="846.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="222.9" y="819.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="225.9" y="830.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="222.9" y="803.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="225.9" y="814.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="222.9" y="787.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="225.9" y="798.0"></text>
</g>
<g>
<title>vfs_write (15 samples, 0.43%)</title><rect x="223.2" y="819.0" width="5.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="226.2" y="830.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="223.2" y="803.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="226.2" y="814.0"></text>
</g>
<g>
<title>new_sync_write (14 samples, 0.40%)</title><rect x="223.5" y="803.0" width="4.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="226.5" y="814.0"></text>
</g>
<g>
<title>pipe_write (13 samples, 0.37%)</title><rect x="223.9" y="787.0" width="4.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="226.9" y="798.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.03%)</title><rect x="223.9" y="771.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="226.9" y="782.0"></text>
</g>
<g>
<title>__wake_up_common_lock (11 samples, 0.31%)</title><rect x="224.2" y="771.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="227.2" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.31%)</title><rect x="224.2" y="755.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="227.2" y="766.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.03%)</title><rect x="227.9" y="771.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="230.9" y="782.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.03%)</title><rect x="227.9" y="755.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="230.9" y="766.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.03%)</title><rect x="228.3" y="835.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="231.3" y="846.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="228.3" y="819.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="231.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (3 samples, 0.09%)</title><rect x="228.6" y="947.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="231.6" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="229.3" y="931.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="232.3" y="942.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.03%)</title><rect x="229.3" y="915.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="232.3" y="926.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.03%)</title><rect x="229.3" y="899.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="232.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (18 samples, 0.51%)</title><rect x="229.6" y="947.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="232.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (10 samples, 0.29%)</title><rect x="231.3" y="931.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="234.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (10 samples, 0.29%)</title><rect x="231.3" y="915.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="234.3" y="926.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (10 samples, 0.29%)</title><rect x="231.3" y="899.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="234.3" y="910.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (4 samples, 0.11%)</title><rect x="231.6" y="883.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="234.6" y="894.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (5 samples, 0.14%)</title><rect x="233.0" y="883.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="236.0" y="894.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (5 samples, 0.14%)</title><rect x="233.0" y="867.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="236.0" y="878.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.09%)</title><rect x="233.0" y="851.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="236.0" y="862.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.03%)</title><rect x="234.0" y="851.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="237.0" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (1 samples, 0.03%)</title><rect x="234.3" y="851.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="237.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.request (3 samples, 0.09%)</title><rect x="234.7" y="931.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="237.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (26 samples, 0.74%)</title><rect x="235.7" y="947.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="238.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (25 samples, 0.71%)</title><rect x="236.0" y="931.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="239.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (25 samples, 0.71%)</title><rect x="236.0" y="915.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="239.0" y="926.0"></text>
</g>
<g>
<title>java/time/Instant.now (21 samples, 0.60%)</title><rect x="236.0" y="899.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="239.0" y="910.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (21 samples, 0.60%)</title><rect x="236.0" y="883.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="239.0" y="894.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (7 samples, 0.20%)</title><rect x="237.7" y="867.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="240.7" y="878.0"></text>
</g>
<g>
<title>java/time/Instant.create (7 samples, 0.20%)</title><rect x="237.7" y="851.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="240.7" y="862.0"></text>
</g>
<g>
<title>java/time/Instant.&lt;init&gt; (7 samples, 0.20%)</title><rect x="237.7" y="835.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="240.7" y="846.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.09%)</title><rect x="239.1" y="819.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="242.1" y="830.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (3 samples, 0.09%)</title><rect x="239.1" y="803.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="242.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (9 samples, 0.26%)</title><rect x="240.1" y="867.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="243.1" y="878.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (7 samples, 0.20%)</title><rect x="240.4" y="851.0" width="2.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="243.4" y="862.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (4 samples, 0.11%)</title><rect x="241.4" y="835.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="244.4" y="846.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.11%)</title><rect x="241.4" y="819.0" width="1.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="244.4" y="830.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.11%)</title><rect x="241.4" y="803.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="244.4" y="814.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.03%)</title><rect x="242.8" y="851.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="245.8" y="862.0"></text>
</g>
<g>
<title>java/time/Instant.plus (4 samples, 0.11%)</title><rect x="243.1" y="899.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="246.1" y="910.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (4 samples, 0.11%)</title><rect x="243.1" y="883.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="246.1" y="894.0"></text>
</g>
<g>
<title>java/time/Instant.plus (4 samples, 0.11%)</title><rect x="243.1" y="867.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="246.1" y="878.0"></text>
</g>
<g>
<title>java/time/Instant.plus (4 samples, 0.11%)</title><rect x="243.1" y="851.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="246.1" y="862.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (1 samples, 0.03%)</title><rect x="243.1" y="835.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="246.1" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.03%)</title><rect x="243.1" y="819.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="246.1" y="830.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.03%)</title><rect x="243.1" y="803.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="246.1" y="814.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.03%)</title><rect x="243.1" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="246.1" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (3 samples, 0.09%)</title><rect x="243.4" y="835.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="246.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$165/1055257162.get (2 samples, 0.06%)</title><rect x="244.4" y="1011.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="247.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (261 samples, 7.46%)</title><rect x="245.1" y="1043.0" width="88.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="248.1" y="1054.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (254 samples, 7.26%)</title><rect x="247.5" y="1027.0" width="85.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="250.5" y="1038.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (252 samples, 7.20%)</title><rect x="248.2" y="1011.0" width="85.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.2" y="1022.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (14 samples, 0.40%)</title><rect x="249.2" y="995.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="252.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.37%)</title><rect x="249.5" y="979.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="252.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (235 samples, 6.72%)</title><rect x="253.9" y="995.0" width="79.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="256.9" y="1006.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (227 samples, 6.49%)</title><rect x="255.6" y="979.0" width="76.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="258.6" y="990.0">java/uti..</text>
</g>
<g>
<title>__clock_gettime (8 samples, 0.23%)</title><rect x="272.8" y="963.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="275.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (164 samples, 4.69%)</title><rect x="275.5" y="963.0" width="55.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="278.5" y="974.0">jdk/i..</text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.11%)</title><rect x="277.2" y="947.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="280.2" y="958.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.06%)</title><rect x="278.5" y="947.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="281.5" y="958.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.03%)</title><rect x="279.2" y="947.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="282.2" y="958.0"></text>
</g>
<g>
<title>Unsafe_Park (54 samples, 1.54%)</title><rect x="279.5" y="947.0" width="18.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="282.5" y="958.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (10 samples, 0.29%)</title><rect x="280.9" y="931.0" width="3.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="283.9" y="942.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (15 samples, 0.43%)</title><rect x="284.3" y="931.0" width="5.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="287.3" y="942.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.09%)</title><rect x="287.3" y="915.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="290.3" y="926.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="288.3" y="915.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="291.3" y="926.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 0.06%)</title><rect x="288.6" y="915.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="291.6" y="926.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="289.3" y="931.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="292.3" y="942.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (3 samples, 0.09%)</title><rect x="289.7" y="931.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="292.7" y="942.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="290.3" y="915.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="293.3" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="290.3" y="899.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="293.3" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="290.3" y="883.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="293.3" y="894.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="290.3" y="867.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="293.3" y="878.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="290.3" y="851.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="293.3" y="862.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (5 samples, 0.14%)</title><rect x="290.7" y="931.0" width="1.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="293.7" y="942.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (4 samples, 0.11%)</title><rect x="292.3" y="931.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="295.3" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.11%)</title><rect x="292.3" y="915.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="295.3" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.11%)</title><rect x="292.3" y="899.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="295.3" y="910.0"></text>
</g>
<g>
<title>__se_sys_futex (2 samples, 0.06%)</title><rect x="292.3" y="883.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="295.3" y="894.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.06%)</title><rect x="292.3" y="867.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="295.3" y="878.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.06%)</title><rect x="292.3" y="851.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="295.3" y="862.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.06%)</title><rect x="293.0" y="883.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="296.0" y="894.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="293.4" y="867.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="296.4" y="878.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.06%)</title><rect x="293.7" y="931.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="296.7" y="942.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="294.4" y="931.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="297.4" y="942.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (3 samples, 0.09%)</title><rect x="294.7" y="931.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="297.7" y="942.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (4 samples, 0.11%)</title><rect x="295.7" y="931.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="298.7" y="942.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="297.1" y="931.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="300.1" y="942.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.03%)</title><rect x="297.4" y="931.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="300.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (94 samples, 2.69%)</title><rect x="297.7" y="947.0" width="31.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="300.7" y="958.0">[u..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (4 samples, 0.11%)</title><rect x="297.7" y="931.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="300.7" y="942.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.03%)</title><rect x="299.1" y="931.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="302.1" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (85 samples, 2.43%)</title><rect x="299.4" y="931.0" width="28.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="302.4" y="942.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (80 samples, 2.29%)</title><rect x="301.1" y="915.0" width="27.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="304.1" y="926.0">e..</text>
</g>
<g>
<title>do_syscall_64 (80 samples, 2.29%)</title><rect x="301.1" y="899.0" width="27.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="304.1" y="910.0">d..</text>
</g>
<g>
<title>__se_sys_futex (58 samples, 1.66%)</title><rect x="306.2" y="883.0" width="19.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="309.2" y="894.0"></text>
</g>
<g>
<title>do_futex (53 samples, 1.52%)</title><rect x="306.2" y="867.0" width="17.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="309.2" y="878.0"></text>
</g>
<g>
<title>futex_wait (52 samples, 1.49%)</title><rect x="306.5" y="851.0" width="17.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="309.5" y="862.0"></text>
</g>
<g>
<title>futex_wait_queue_me (41 samples, 1.17%)</title><rect x="307.9" y="835.0" width="13.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="310.9" y="846.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (32 samples, 0.91%)</title><rect x="308.9" y="819.0" width="10.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="311.9" y="830.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (31 samples, 0.89%)</title><rect x="308.9" y="803.0" width="10.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="311.9" y="814.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="319.0" y="787.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="322.0" y="798.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="319.0" y="771.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="322.0" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="319.0" y="755.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="322.0" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="319.0" y="739.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="322.0" y="750.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="319.0" y="723.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="322.0" y="734.0"></text>
</g>
<g>
<title>expire_timers (1 samples, 0.03%)</title><rect x="319.0" y="707.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="322.0" y="718.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.03%)</title><rect x="319.0" y="691.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="322.0" y="702.0"></text>
</g>
<g>
<title>tcp_delack_timer (1 samples, 0.03%)</title><rect x="319.0" y="675.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="322.0" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="319.0" y="659.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="322.0" y="670.0"></text>
</g>
<g>
<title>lock_hrtimer_base.isra.0 (1 samples, 0.03%)</title><rect x="319.3" y="803.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="322.3" y="814.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="319.3" y="787.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="322.3" y="798.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.17%)</title><rect x="319.7" y="819.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="322.7" y="830.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.17%)</title><rect x="319.7" y="803.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="322.7" y="814.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="321.4" y="787.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="324.4" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.03%)</title><rect x="321.4" y="771.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="324.4" y="782.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="321.4" y="755.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="324.4" y="766.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="321.4" y="739.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="324.4" y="750.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="321.4" y="723.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="324.4" y="734.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="321.4" y="707.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="324.4" y="718.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.03%)</title><rect x="321.4" y="691.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="324.4" y="702.0"></text>
</g>
<g>
<title>futex_wait_setup (6 samples, 0.17%)</title><rect x="321.7" y="835.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="324.7" y="846.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="322.4" y="819.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="325.4" y="830.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.06%)</title><rect x="322.7" y="819.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="325.7" y="830.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (2 samples, 0.06%)</title><rect x="322.7" y="803.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="325.7" y="814.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="323.4" y="819.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="326.4" y="830.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.03%)</title><rect x="323.7" y="835.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="326.7" y="846.0"></text>
</g>
<g>
<title>get_timespec64 (5 samples, 0.14%)</title><rect x="324.1" y="867.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="327.1" y="878.0"></text>
</g>
<g>
<title>_copy_from_user (5 samples, 0.14%)</title><rect x="324.1" y="851.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="327.1" y="862.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.09%)</title><rect x="324.7" y="835.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="327.7" y="846.0"></text>
</g>
<g>
<title>restore_regs_and_return_to_kernel (1 samples, 0.03%)</title><rect x="325.7" y="883.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="328.7" y="894.0"></text>
</g>
<g>
<title>preempt_schedule_irq (1 samples, 0.03%)</title><rect x="325.7" y="867.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="328.7" y="878.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.03%)</title><rect x="326.1" y="883.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="329.1" y="894.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="326.1" y="867.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="329.1" y="878.0"></text>
</g>
<g>
<title>syscall_trace_enter (5 samples, 0.14%)</title><rect x="326.4" y="883.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="329.4" y="894.0"></text>
</g>
<g>
<title>__audit_syscall_entry (3 samples, 0.09%)</title><rect x="327.1" y="867.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="330.1" y="878.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.09%)</title><rect x="328.1" y="931.0" width="1.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="331.1" y="942.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="329.1" y="931.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="332.1" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="329.1" y="915.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="332.1" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="329.1" y="899.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="332.1" y="910.0"></text>
</g>
<g>
<title>__se_sys_futex (1 samples, 0.03%)</title><rect x="329.1" y="883.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="332.1" y="894.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="329.1" y="867.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="332.1" y="878.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="329.1" y="851.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="332.1" y="862.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.03%)</title><rect x="329.1" y="835.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="332.1" y="846.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.03%)</title><rect x="329.1" y="819.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="332.1" y="830.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.03%)</title><rect x="329.5" y="947.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="332.5" y="958.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="329.5" y="931.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="332.5" y="942.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="329.5" y="915.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="332.5" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="329.8" y="947.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="332.8" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="329.8" y="931.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="332.8" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="329.8" y="915.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="332.8" y="926.0"></text>
</g>
<g>
<title>__se_sys_futex (1 samples, 0.03%)</title><rect x="329.8" y="899.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="332.8" y="910.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="329.8" y="883.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="332.8" y="894.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="329.8" y="867.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="332.8" y="878.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="329.8" y="851.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="332.8" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="329.8" y="835.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="332.8" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="329.8" y="819.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="332.8" y="830.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.06%)</title><rect x="330.1" y="947.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="333.1" y="958.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (4 samples, 0.11%)</title><rect x="330.8" y="963.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="333.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="332.2" y="979.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="335.2" y="990.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.06%)</title><rect x="332.5" y="979.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="335.5" y="990.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="332.8" y="963.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="335.8" y="974.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="332.8" y="947.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="335.8" y="958.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="332.8" y="931.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="335.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (3 samples, 0.09%)</title><rect x="333.2" y="1043.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="336.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$279/16755181.run (302 samples, 8.63%)</title><rect x="334.2" y="1043.0" width="101.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="337.2" y="1054.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (300 samples, 8.58%)</title><rect x="334.9" y="1027.0" width="101.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="337.9" y="1038.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (298 samples, 8.52%)</title><rect x="335.5" y="1011.0" width="100.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="338.5" y="1022.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (293 samples, 8.38%)</title><rect x="337.2" y="995.0" width="98.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="340.2" y="1006.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (293 samples, 8.38%)</title><rect x="337.2" y="979.0" width="98.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="340.2" y="990.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (293 samples, 8.38%)</title><rect x="337.2" y="963.0" width="98.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="340.2" y="974.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (292 samples, 8.35%)</title><rect x="337.6" y="947.0" width="98.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="340.6" y="958.0">jdk/internal..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.03%)</title><rect x="337.6" y="931.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="340.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (1 samples, 0.03%)</title><rect x="337.6" y="915.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="340.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.03%)</title><rect x="337.6" y="899.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="340.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (291 samples, 8.32%)</title><rect x="337.9" y="931.0" width="98.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="340.9" y="942.0">jdk/internal..</text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="337.9" y="915.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="340.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (290 samples, 8.29%)</title><rect x="338.2" y="915.0" width="97.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="341.2" y="926.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (2 samples, 0.06%)</title><rect x="338.2" y="899.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="341.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="338.6" y="883.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="341.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (288 samples, 8.23%)</title><rect x="338.9" y="899.0" width="97.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="341.9" y="910.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (288 samples, 8.23%)</title><rect x="338.9" y="883.0" width="97.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="341.9" y="894.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (49 samples, 1.40%)</title><rect x="339.9" y="867.0" width="16.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="342.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (40 samples, 1.14%)</title><rect x="340.9" y="851.0" width="13.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="343.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (33 samples, 0.94%)</title><rect x="343.3" y="835.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="346.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (31 samples, 0.89%)</title><rect x="343.3" y="819.0" width="10.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="346.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (30 samples, 0.86%)</title><rect x="343.6" y="803.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="346.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (7 samples, 0.20%)</title><rect x="345.3" y="787.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="348.3" y="798.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.06%)</title><rect x="345.3" y="771.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="348.3" y="782.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$38/1552978964.apply (1 samples, 0.03%)</title><rect x="346.0" y="771.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="349.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$286/954207085.apply (4 samples, 0.11%)</title><rect x="346.3" y="771.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="349.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (3 samples, 0.09%)</title><rect x="346.7" y="755.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="349.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (3 samples, 0.09%)</title><rect x="346.7" y="739.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="349.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (3 samples, 0.09%)</title><rect x="346.7" y="723.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="349.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (3 samples, 0.09%)</title><rect x="346.7" y="707.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="349.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.03%)</title><rect x="347.3" y="691.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="350.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (1 samples, 0.03%)</title><rect x="347.3" y="675.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="350.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$217/1047541244.apply (1 samples, 0.03%)</title><rect x="347.3" y="659.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="350.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (1 samples, 0.03%)</title><rect x="347.3" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="350.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (1 samples, 0.03%)</title><rect x="347.3" y="627.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="350.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (1 samples, 0.03%)</title><rect x="347.3" y="611.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="350.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.03%)</title><rect x="347.3" y="595.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="350.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (15 samples, 0.43%)</title><rect x="347.7" y="787.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="350.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (14 samples, 0.40%)</title><rect x="348.0" y="771.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="351.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$257/1321163687.apply (13 samples, 0.37%)</title><rect x="348.3" y="755.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="351.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (13 samples, 0.37%)</title><rect x="348.3" y="739.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="351.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (13 samples, 0.37%)</title><rect x="348.3" y="723.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="351.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$175/597602705.apply (10 samples, 0.29%)</title><rect x="349.0" y="707.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="352.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (10 samples, 0.29%)</title><rect x="349.0" y="691.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="352.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.03%)</title><rect x="349.0" y="675.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="352.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="349.0" y="659.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="352.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (9 samples, 0.26%)</title><rect x="349.4" y="675.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="352.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.09%)</title><rect x="349.4" y="659.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="352.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.09%)</title><rect x="349.4" y="643.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="352.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (3 samples, 0.09%)</title><rect x="349.4" y="627.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="352.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (3 samples, 0.09%)</title><rect x="349.4" y="611.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="352.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (3 samples, 0.09%)</title><rect x="349.4" y="595.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="352.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (3 samples, 0.09%)</title><rect x="349.4" y="579.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="352.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$Node.&lt;init&gt; (3 samples, 0.09%)</title><rect x="349.4" y="563.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="352.4" y="574.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.09%)</title><rect x="349.4" y="547.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="352.4" y="558.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (3 samples, 0.09%)</title><rect x="349.4" y="531.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="352.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (6 samples, 0.17%)</title><rect x="350.4" y="659.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="353.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (2 samples, 0.06%)</title><rect x="350.4" y="643.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="353.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (2 samples, 0.06%)</title><rect x="350.4" y="627.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="353.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (4 samples, 0.11%)</title><rect x="351.0" y="643.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="354.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (4 samples, 0.11%)</title><rect x="351.0" y="627.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="354.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onSubscribe (4 samples, 0.11%)</title><rect x="351.0" y="611.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="354.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.setSubscription (4 samples, 0.11%)</title><rect x="351.0" y="595.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="354.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.11%)</title><rect x="351.0" y="579.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="354.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.11%)</title><rect x="351.0" y="563.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="354.0" y="574.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="351.7" y="547.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="354.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="352.1" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="355.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.failedFuture (1 samples, 0.03%)</title><rect x="352.4" y="707.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="355.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeExceptionally (1 samples, 0.03%)</title><rect x="352.4" y="691.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="355.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="352.4" y="675.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="355.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="352.4" y="659.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="355.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="352.4" y="643.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="355.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.03%)</title><rect x="352.7" y="787.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="355.7" y="798.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.06%)</title><rect x="353.1" y="787.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="356.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.06%)</title><rect x="353.7" y="819.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="356.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (2 samples, 0.06%)</title><rect x="353.7" y="803.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="356.7" y="814.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="353.7" y="787.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="356.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1 samples, 0.03%)</title><rect x="354.1" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="357.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (5 samples, 0.14%)</title><rect x="354.4" y="851.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="357.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (4 samples, 0.11%)</title><rect x="354.8" y="835.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="357.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (1 samples, 0.03%)</title><rect x="354.8" y="819.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="357.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (2 samples, 0.06%)</title><rect x="355.1" y="819.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="358.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (1 samples, 0.03%)</title><rect x="355.4" y="803.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="358.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.updateTail (1 samples, 0.03%)</title><rect x="355.8" y="819.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="358.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.03%)</title><rect x="356.1" y="851.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="359.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (236 samples, 6.75%)</title><rect x="356.4" y="867.0" width="79.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="359.4" y="878.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (236 samples, 6.75%)</title><rect x="356.4" y="851.0" width="79.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="359.4" y="862.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (236 samples, 6.75%)</title><rect x="356.4" y="835.0" width="79.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="359.4" y="846.0">jdk/inter..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="356.8" y="819.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="359.8" y="830.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="356.8" y="803.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="359.8" y="814.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="356.8" y="787.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="359.8" y="798.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="356.8" y="771.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="359.8" y="782.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="356.8" y="755.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="359.8" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="356.8" y="739.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="359.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (234 samples, 6.69%)</title><rect x="357.1" y="819.0" width="79.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="360.1" y="830.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$288/1983956397.run (4 samples, 0.11%)</title><rect x="357.8" y="803.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="360.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (4 samples, 0.11%)</title><rect x="357.8" y="787.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="360.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (2 samples, 0.06%)</title><rect x="358.5" y="771.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="361.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1 samples, 0.03%)</title><rect x="358.8" y="755.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="361.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (1 samples, 0.03%)</title><rect x="358.8" y="739.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="361.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (1 samples, 0.03%)</title><rect x="358.8" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="361.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.weakCompareAndSetVolatile (1 samples, 0.03%)</title><rect x="358.8" y="707.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="361.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (228 samples, 6.52%)</title><rect x="359.1" y="803.0" width="77.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="362.1" y="814.0">jdk/inte..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (222 samples, 6.35%)</title><rect x="359.5" y="787.0" width="74.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="362.5" y="798.0">java/nio..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (222 samples, 6.35%)</title><rect x="359.5" y="771.0" width="74.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="362.5" y="782.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (222 samples, 6.35%)</title><rect x="359.5" y="755.0" width="74.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="362.5" y="766.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (214 samples, 6.12%)</title><rect x="362.2" y="739.0" width="72.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="365.2" y="750.0">sun/nio/..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (4 samples, 0.11%)</title><rect x="362.2" y="723.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="365.2" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (4 samples, 0.11%)</title><rect x="362.2" y="707.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="365.2" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (4 samples, 0.11%)</title><rect x="362.2" y="691.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="365.2" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (4 samples, 0.11%)</title><rect x="362.2" y="675.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="365.2" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextPutIndex (4 samples, 0.11%)</title><rect x="362.2" y="659.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="365.2" y="670.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (3 samples, 0.09%)</title><rect x="362.5" y="643.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="365.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (208 samples, 5.95%)</title><rect x="363.5" y="723.0" width="70.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="366.5" y="734.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (200 samples, 5.72%)</title><rect x="366.2" y="707.0" width="67.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="369.2" y="718.0">sun/nio..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (1 samples, 0.03%)</title><rect x="366.9" y="691.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="369.9" y="702.0"></text>
</g>
<g>
<title>__GI___writev (196 samples, 5.60%)</title><rect x="367.2" y="691.0" width="66.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="370.2" y="702.0">__GI___..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.09%)</title><rect x="368.6" y="675.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="371.6" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (189 samples, 5.40%)</title><rect x="369.6" y="675.0" width="63.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="372.6" y="686.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (189 samples, 5.40%)</title><rect x="369.6" y="659.0" width="63.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="372.6" y="670.0">do_sysc..</text>
</g>
<g>
<title>do_writev (188 samples, 5.37%)</title><rect x="369.9" y="643.0" width="63.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="372.9" y="654.0">do_writev</text>
</g>
<g>
<title>__fdget_pos (5 samples, 0.14%)</title><rect x="369.9" y="627.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="372.9" y="638.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.14%)</title><rect x="369.9" y="611.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="372.9" y="622.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.11%)</title><rect x="370.3" y="595.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="373.3" y="606.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="371.3" y="579.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="374.3" y="590.0"></text>
</g>
<g>
<title>vfs_writev (183 samples, 5.23%)</title><rect x="371.6" y="627.0" width="61.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="374.6" y="638.0">vfs_wr..</text>
</g>
<g>
<title>do_iter_write (178 samples, 5.09%)</title><rect x="372.0" y="611.0" width="60.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="375.0" y="622.0">do_ite..</text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.06%)</title><rect x="372.0" y="595.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="375.0" y="606.0"></text>
</g>
<g>
<title>do_iter_readv_writev (176 samples, 5.03%)</title><rect x="372.6" y="595.0" width="59.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="375.6" y="606.0">do_ite..</text>
</g>
<g>
<title>sock_write_iter (170 samples, 4.86%)</title><rect x="374.7" y="579.0" width="57.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="377.7" y="590.0">sock_w..</text>
</g>
<g>
<title>sock_sendmsg (170 samples, 4.86%)</title><rect x="374.7" y="563.0" width="57.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="377.7" y="574.0">sock_s..</text>
</g>
<g>
<title>inet6_sendmsg (2 samples, 0.06%)</title><rect x="374.7" y="547.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="377.7" y="558.0"></text>
</g>
<g>
<title>inet_send_prepare (2 samples, 0.06%)</title><rect x="374.7" y="531.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="377.7" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg (168 samples, 4.80%)</title><rect x="375.3" y="547.0" width="56.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="378.3" y="558.0">tcp_se..</text>
</g>
<g>
<title>release_sock (2 samples, 0.06%)</title><rect x="375.3" y="531.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="378.3" y="542.0"></text>
</g>
<g>
<title>__release_sock (1 samples, 0.03%)</title><rect x="375.3" y="515.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="378.3" y="526.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="375.3" y="499.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="378.3" y="510.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="375.3" y="483.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="378.3" y="494.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.03%)</title><rect x="375.3" y="467.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="378.3" y="478.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="375.3" y="451.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="378.3" y="462.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="375.3" y="435.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="378.3" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="375.3" y="419.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="378.3" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="375.7" y="515.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="378.7" y="526.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (166 samples, 4.75%)</title><rect x="376.0" y="531.0" width="56.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="379.0" y="542.0">tcp_s..</text>
</g>
<g>
<title>__tcp_push_pending_frames (144 samples, 4.12%)</title><rect x="377.7" y="515.0" width="48.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="380.7" y="526.0">__tc..</text>
</g>
<g>
<title>tcp_write_xmit (142 samples, 4.06%)</title><rect x="378.4" y="499.0" width="47.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="381.4" y="510.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (136 samples, 3.89%)</title><rect x="378.7" y="483.0" width="45.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="381.7" y="494.0">__tc..</text>
</g>
<g>
<title>__ip_queue_xmit (122 samples, 3.49%)</title><rect x="380.1" y="467.0" width="41.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="383.1" y="478.0">__i..</text>
</g>
<g>
<title>ip_copy_addrs (2 samples, 0.06%)</title><rect x="380.1" y="451.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="383.1" y="462.0"></text>
</g>
<g>
<title>ip_local_out (25 samples, 0.71%)</title><rect x="380.7" y="451.0" width="8.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="383.7" y="462.0"></text>
</g>
<g>
<title>__ip_local_out (25 samples, 0.71%)</title><rect x="380.7" y="435.0" width="8.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="383.7" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (24 samples, 0.69%)</title><rect x="381.1" y="419.0" width="8.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="384.1" y="430.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (1 samples, 0.03%)</title><rect x="382.1" y="403.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="385.1" y="414.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (5 samples, 0.14%)</title><rect x="382.4" y="403.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="385.4" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (2 samples, 0.06%)</title><rect x="384.1" y="403.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="387.1" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (12 samples, 0.34%)</title><rect x="384.8" y="403.0" width="4.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="387.8" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (3 samples, 0.09%)</title><rect x="385.1" y="387.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="388.1" y="398.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="385.8" y="371.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="388.8" y="382.0"></text>
</g>
<g>
<title>hash_conntrack_raw.isra.0	[nf_conntrack] (2 samples, 0.06%)</title><rect x="386.1" y="387.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="389.1" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (6 samples, 0.17%)</title><rect x="386.8" y="387.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="389.8" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="387.5" y="371.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="390.5" y="382.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="387.5" y="355.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="390.5" y="366.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct	[nf_conntrack] (1 samples, 0.03%)</title><rect x="387.8" y="371.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="390.8" y="382.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (2 samples, 0.06%)</title><rect x="388.2" y="371.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="391.2" y="382.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (1 samples, 0.03%)</title><rect x="388.8" y="403.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="391.8" y="414.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (1 samples, 0.03%)</title><rect x="388.8" y="387.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="391.8" y="398.0"></text>
</g>
<g>
<title>ip_output (95 samples, 2.72%)</title><rect x="389.2" y="451.0" width="32.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="392.2" y="462.0">ip..</text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="389.5" y="435.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="392.5" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (88 samples, 2.52%)</title><rect x="389.8" y="435.0" width="29.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="392.8" y="446.0">ip..</text>
</g>
<g>
<title>__dev_queue_xmit (15 samples, 0.43%)</title><rect x="390.2" y="419.0" width="5.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="393.2" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (12 samples, 0.34%)</title><rect x="390.9" y="403.0" width="4.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="393.9" y="414.0"></text>
</g>
<g>
<title>loopback_xmit (10 samples, 0.29%)</title><rect x="391.5" y="387.0" width="3.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="394.5" y="398.0"></text>
</g>
<g>
<title>netif_rx (8 samples, 0.23%)</title><rect x="391.5" y="371.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="394.5" y="382.0"></text>
</g>
<g>
<title>netif_rx_internal (8 samples, 0.23%)</title><rect x="391.5" y="355.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="394.5" y="366.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.14%)</title><rect x="391.9" y="339.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="394.9" y="350.0"></text>
</g>
<g>
<title>ktime_get_with_offset (2 samples, 0.06%)</title><rect x="393.6" y="339.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="396.6" y="350.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.03%)</title><rect x="394.2" y="371.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="397.2" y="382.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.03%)</title><rect x="394.6" y="371.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="397.6" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.03%)</title><rect x="394.9" y="403.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="397.9" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (72 samples, 2.06%)</title><rect x="395.2" y="419.0" width="24.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="398.2" y="430.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (70 samples, 2.00%)</title><rect x="395.6" y="403.0" width="23.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="398.6" y="414.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (68 samples, 1.94%)</title><rect x="396.2" y="387.0" width="23.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="399.2" y="398.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (68 samples, 1.94%)</title><rect x="396.2" y="371.0" width="23.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="399.2" y="382.0">_..</text>
</g>
<g>
<title>net_rx_action (64 samples, 1.83%)</title><rect x="397.6" y="355.0" width="21.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="400.6" y="366.0">n..</text>
</g>
<g>
<title>process_backlog (62 samples, 1.77%)</title><rect x="398.3" y="339.0" width="20.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="401.3" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (59 samples, 1.69%)</title><rect x="399.3" y="323.0" width="19.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="402.3" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.06%)</title><rect x="399.3" y="307.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="402.3" y="318.0"></text>
</g>
<g>
<title>ip_rcv (57 samples, 1.63%)</title><rect x="400.0" y="307.0" width="19.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="403.0" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver (54 samples, 1.54%)</title><rect x="400.3" y="291.0" width="18.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="403.3" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (52 samples, 1.49%)</title><rect x="400.3" y="275.0" width="17.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="403.3" y="286.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (52 samples, 1.49%)</title><rect x="400.3" y="259.0" width="17.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="403.3" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (52 samples, 1.49%)</title><rect x="400.3" y="243.0" width="17.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="403.3" y="254.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.11%)</title><rect x="401.0" y="227.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="404.0" y="238.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.06%)</title><rect x="402.3" y="227.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="405.3" y="238.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="402.7" y="211.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="405.7" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (43 samples, 1.23%)</title><rect x="403.0" y="227.0" width="14.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="406.0" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (43 samples, 1.23%)</title><rect x="403.0" y="211.0" width="14.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="406.0" y="222.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.14%)</title><rect x="403.3" y="195.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="406.3" y="206.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.14%)</title><rect x="403.3" y="179.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="406.3" y="190.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.11%)</title><rect x="403.3" y="163.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="406.3" y="174.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.03%)</title><rect x="404.7" y="163.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="407.7" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (34 samples, 0.97%)</title><rect x="405.0" y="195.0" width="11.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="408.0" y="206.0"></text>
</g>
<g>
<title>__wake_up_common_lock (33 samples, 0.94%)</title><rect x="405.4" y="179.0" width="11.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="408.4" y="190.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (33 samples, 0.94%)</title><rect x="405.4" y="163.0" width="11.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="408.4" y="174.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.06%)</title><rect x="416.5" y="195.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="419.5" y="206.0"></text>
</g>
<g>
<title>tcp_grow_window.isra.0 (1 samples, 0.03%)</title><rect x="417.2" y="195.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="420.2" y="206.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb.isra.0 (1 samples, 0.03%)</title><rect x="417.5" y="227.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="420.5" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.06%)</title><rect x="417.8" y="275.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="420.8" y="286.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (1 samples, 0.03%)</title><rect x="418.2" y="259.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="421.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.03%)</title><rect x="418.5" y="291.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="421.5" y="302.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.03%)</title><rect x="418.5" y="275.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="421.5" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="418.9" y="291.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="421.9" y="302.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="419.2" y="403.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="422.2" y="414.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.06%)</title><rect x="419.5" y="435.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="422.5" y="446.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.06%)</title><rect x="419.5" y="419.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="422.5" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.09%)</title><rect x="420.2" y="435.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="423.2" y="446.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (2 samples, 0.06%)</title><rect x="420.5" y="419.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="423.5" y="430.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.03%)</title><rect x="421.2" y="467.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="424.2" y="478.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.06%)</title><rect x="421.5" y="467.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="424.5" y="478.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="422.2" y="467.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="425.2" y="478.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.03%)</title><rect x="422.6" y="467.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="425.6" y="478.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.06%)</title><rect x="422.9" y="467.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="425.9" y="478.0"></text>
</g>
<g>
<title>tcp_options_write (2 samples, 0.06%)</title><rect x="423.6" y="467.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="426.6" y="478.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.03%)</title><rect x="424.2" y="467.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="427.2" y="478.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.11%)</title><rect x="424.6" y="483.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="427.6" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="425.3" y="467.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="428.3" y="478.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="425.3" y="451.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="428.3" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="425.3" y="435.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="428.3" y="446.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="425.6" y="467.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="428.6" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="425.9" y="483.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="428.9" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="425.9" y="467.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="428.9" y="478.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="425.9" y="451.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="428.9" y="462.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.06%)</title><rect x="426.3" y="515.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="429.3" y="526.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.06%)</title><rect x="426.3" y="499.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="429.3" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.06%)</title><rect x="426.3" y="483.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="429.3" y="494.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.23%)</title><rect x="426.9" y="515.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="429.9" y="526.0"></text>
</g>
<g>
<title>__alloc_skb (8 samples, 0.23%)</title><rect x="426.9" y="499.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="429.9" y="510.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.03%)</title><rect x="427.6" y="483.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="430.6" y="494.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.03%)</title><rect x="427.6" y="467.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="430.6" y="478.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.06%)</title><rect x="428.0" y="483.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="431.0" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.09%)</title><rect x="428.6" y="483.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="431.6" y="494.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.03%)</title><rect x="429.6" y="515.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="432.6" y="526.0"></text>
</g>
<g>
<title>sock_zerocopy_put (2 samples, 0.06%)</title><rect x="430.0" y="515.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="433.0" y="526.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.03%)</title><rect x="430.7" y="515.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="433.7" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.06%)</title><rect x="431.0" y="515.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="434.0" y="526.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="431.7" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="434.7" y="526.0"></text>
</g>
<g>
<title>import_iovec (4 samples, 0.11%)</title><rect x="432.0" y="611.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="435.0" y="622.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (2 samples, 0.06%)</title><rect x="432.7" y="595.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="435.7" y="606.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.06%)</title><rect x="432.7" y="579.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="435.7" y="590.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.03%)</title><rect x="433.0" y="563.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="436.0" y="574.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="433.4" y="691.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="436.4" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.06%)</title><rect x="433.7" y="723.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="436.7" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.06%)</title><rect x="433.7" y="707.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="436.7" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.06%)</title><rect x="433.7" y="691.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="436.7" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (4 samples, 0.11%)</title><rect x="434.4" y="787.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="437.4" y="798.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.hasNext (1 samples, 0.03%)</title><rect x="435.4" y="771.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="438.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (1 samples, 0.03%)</title><rect x="435.7" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="438.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (487 samples, 13.92%)</title><rect x="436.1" y="1043.0" width="164.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="439.1" y="1054.0">jdk/internal/net/http..</text>
</g>
<g>
<title>itable stub (2 samples, 0.06%)</title><rect x="436.7" y="1027.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="439.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (483 samples, 13.81%)</title><rect x="437.4" y="1027.0" width="162.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="440.4" y="1038.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.06%)</title><rect x="438.1" y="1011.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="441.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (240 samples, 6.86%)</title><rect x="438.8" y="1011.0" width="80.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="441.8" y="1022.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$216/1713688296.run (238 samples, 6.80%)</title><rect x="439.4" y="995.0" width="80.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="442.4" y="1006.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (236 samples, 6.75%)</title><rect x="440.1" y="979.0" width="79.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="443.1" y="990.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (6 samples, 0.17%)</title><rect x="440.1" y="963.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="443.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeExceptionally (1 samples, 0.03%)</title><rect x="440.1" y="947.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="443.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onReadError (5 samples, 0.14%)</title><rect x="440.4" y="947.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="443.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onReadError (1 samples, 0.03%)</title><rect x="440.4" y="931.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="443.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.close (1 samples, 0.03%)</title><rect x="440.4" y="915.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="443.4" y="926.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (1 samples, 0.03%)</title><rect x="440.4" y="899.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="443.4" y="910.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.implCloseChannel (1 samples, 0.03%)</title><rect x="440.4" y="883.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="443.4" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implCloseSelectableChannel (1 samples, 0.03%)</title><rect x="440.4" y="867.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="443.4" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.shutdown (1 samples, 0.03%)</title><rect x="440.4" y="851.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="443.4" y="862.0"></text>
</g>
<g>
<title>__GI___shutdown (1 samples, 0.03%)</title><rect x="440.4" y="835.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="443.4" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="440.4" y="819.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="443.4" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="440.4" y="803.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="443.4" y="814.0"></text>
</g>
<g>
<title>__x64_sys_shutdown (1 samples, 0.03%)</title><rect x="440.4" y="787.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="443.4" y="798.0"></text>
</g>
<g>
<title>__sys_shutdown (1 samples, 0.03%)</title><rect x="440.4" y="771.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="443.4" y="782.0"></text>
</g>
<g>
<title>inet_shutdown (1 samples, 0.03%)</title><rect x="440.4" y="755.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="443.4" y="766.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.03%)</title><rect x="440.4" y="739.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="443.4" y="750.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.03%)</title><rect x="440.4" y="723.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="443.4" y="734.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.03%)</title><rect x="440.4" y="707.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="443.4" y="718.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.03%)</title><rect x="440.4" y="691.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="443.4" y="702.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.03%)</title><rect x="440.4" y="675.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="443.4" y="686.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.03%)</title><rect x="440.4" y="659.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="443.4" y="670.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="440.4" y="643.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="443.4" y="654.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.03%)</title><rect x="440.4" y="627.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="443.4" y="638.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="440.4" y="611.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="443.4" y="622.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="440.4" y="595.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="443.4" y="606.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="440.4" y="579.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="443.4" y="590.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.03%)</title><rect x="440.4" y="563.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="443.4" y="574.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.03%)</title><rect x="440.4" y="547.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="443.4" y="558.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="440.4" y="531.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="443.4" y="542.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="440.4" y="515.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="443.4" y="526.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="440.4" y="499.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="443.4" y="510.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.03%)</title><rect x="440.4" y="483.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="443.4" y="494.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="440.4" y="467.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="443.4" y="478.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="440.4" y="451.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="443.4" y="462.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (1 samples, 0.03%)</title><rect x="440.4" y="435.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="443.4" y="446.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.03%)</title><rect x="440.4" y="419.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="443.4" y="430.0"></text>
</g>
<g>
<title>tcp_fin (1 samples, 0.03%)</title><rect x="440.4" y="403.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="443.4" y="414.0"></text>
</g>
<g>
<title>tcp_time_wait (1 samples, 0.03%)</title><rect x="440.4" y="387.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="443.4" y="398.0"></text>
</g>
<g>
<title>__inet_twsk_schedule (1 samples, 0.03%)</title><rect x="440.4" y="371.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="443.4" y="382.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="440.4" y="355.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="443.4" y="366.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.03%)</title><rect x="440.4" y="339.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="443.4" y="350.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="440.4" y="323.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="443.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.wrapWithExtraDetail (4 samples, 0.11%)</title><rect x="440.8" y="931.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="443.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader$$Lambda$296/921387510.get (4 samples, 0.11%)</title><rect x="440.8" y="915.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="443.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.currentStateMessage (4 samples, 0.11%)</title><rect x="440.8" y="899.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="443.8" y="910.0"></text>
</g>
<g>
<title>java/lang/String.format (4 samples, 0.11%)</title><rect x="440.8" y="883.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="443.8" y="894.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (4 samples, 0.11%)</title><rect x="440.8" y="867.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="443.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (36 samples, 1.03%)</title><rect x="442.1" y="963.0" width="12.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="445.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (35 samples, 1.00%)</title><rect x="442.1" y="947.0" width="11.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="445.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (33 samples, 0.94%)</title><rect x="442.8" y="931.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="445.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (33 samples, 0.94%)</title><rect x="442.8" y="915.0" width="11.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="445.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (32 samples, 0.91%)</title><rect x="443.1" y="899.0" width="10.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (29 samples, 0.83%)</title><rect x="444.2" y="883.0" width="9.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="447.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (28 samples, 0.80%)</title><rect x="444.2" y="867.0" width="9.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="447.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (22 samples, 0.63%)</title><rect x="446.2" y="851.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="449.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (22 samples, 0.63%)</title><rect x="446.2" y="835.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="449.2" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.06%)</title><rect x="446.5" y="819.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="449.5" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.06%)</title><rect x="446.5" y="803.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="449.5" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="446.8" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="449.8" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="446.8" y="771.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="449.8" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="446.8" y="755.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="449.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (19 samples, 0.54%)</title><rect x="447.2" y="819.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="450.2" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (16 samples, 0.46%)</title><rect x="448.2" y="803.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.2" y="814.0"></text>
</g>
<g>
<title>__write (16 samples, 0.46%)</title><rect x="448.2" y="787.0" width="5.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="451.2" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.46%)</title><rect x="448.2" y="771.0" width="5.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="451.2" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.46%)</title><rect x="448.2" y="755.0" width="5.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="451.2" y="766.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.03%)</title><rect x="448.5" y="739.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="451.5" y="750.0"></text>
</g>
<g>
<title>ksys_write (13 samples, 0.37%)</title><rect x="448.9" y="739.0" width="4.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="451.9" y="750.0"></text>
</g>
<g>
<title>vfs_write (13 samples, 0.37%)</title><rect x="448.9" y="723.0" width="4.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="451.9" y="734.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.03%)</title><rect x="449.2" y="707.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="452.2" y="718.0"></text>
</g>
<g>
<title>new_sync_write (11 samples, 0.31%)</title><rect x="449.5" y="707.0" width="3.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="452.5" y="718.0"></text>
</g>
<g>
<title>pipe_write (9 samples, 0.26%)</title><rect x="450.2" y="691.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="453.2" y="702.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.20%)</title><rect x="450.2" y="675.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="453.2" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.20%)</title><rect x="450.2" y="659.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="453.2" y="670.0"></text>
</g>
<g>
<title>copy_page_from_iter (1 samples, 0.03%)</title><rect x="452.6" y="675.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="455.6" y="686.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.03%)</title><rect x="452.6" y="659.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="455.6" y="670.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="452.6" y="643.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="455.6" y="654.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="452.9" y="675.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="455.9" y="686.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.03%)</title><rect x="453.3" y="739.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="456.3" y="750.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="453.3" y="723.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="456.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.03%)</title><rect x="453.6" y="867.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="456.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.03%)</title><rect x="453.6" y="851.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="456.6" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.03%)</title><rect x="453.6" y="835.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="456.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.03%)</title><rect x="453.6" y="819.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="456.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.hasDemand (1 samples, 0.03%)</title><rect x="453.9" y="947.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="456.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.demand (1 samples, 0.03%)</title><rect x="453.9" y="931.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="456.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.06%)</title><rect x="454.3" y="963.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="457.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (1 samples, 0.03%)</title><rect x="454.3" y="947.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="457.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.03%)</title><rect x="454.6" y="947.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="457.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.03%)</title><rect x="454.6" y="931.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="457.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (1 samples, 0.03%)</title><rect x="454.6" y="915.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (1 samples, 0.03%)</title><rect x="454.6" y="899.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="457.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.03%)</title><rect x="454.6" y="883.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="457.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (192 samples, 5.49%)</title><rect x="454.9" y="963.0" width="64.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="457.9" y="974.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (190 samples, 5.43%)</title><rect x="455.3" y="947.0" width="64.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="458.3" y="958.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (190 samples, 5.43%)</title><rect x="455.3" y="931.0" width="64.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="458.3" y="942.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (190 samples, 5.43%)</title><rect x="455.3" y="915.0" width="64.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="458.3" y="926.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (108 samples, 3.09%)</title><rect x="455.3" y="899.0" width="36.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="458.3" y="910.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (108 samples, 3.09%)</title><rect x="455.3" y="883.0" width="36.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="458.3" y="894.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (108 samples, 3.09%)</title><rect x="455.3" y="867.0" width="36.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="458.3" y="878.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (108 samples, 3.09%)</title><rect x="455.3" y="851.0" width="36.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="458.3" y="862.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (106 samples, 3.03%)</title><rect x="456.0" y="835.0" width="35.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="459.0" y="846.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (105 samples, 3.00%)</title><rect x="456.0" y="819.0" width="35.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="459.0" y="830.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (105 samples, 3.00%)</title><rect x="456.0" y="803.0" width="35.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="459.0" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.11%)</title><rect x="456.3" y="787.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="459.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (1 samples, 0.03%)</title><rect x="457.6" y="787.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (1 samples, 0.03%)</title><rect x="457.6" y="771.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="460.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$293/1759280865.apply (1 samples, 0.03%)</title><rect x="457.6" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="460.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (90 samples, 2.57%)</title><rect x="458.0" y="787.0" width="30.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="461.0" y="798.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (90 samples, 2.57%)</title><rect x="458.0" y="771.0" width="30.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.0" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (72 samples, 2.06%)</title><rect x="458.0" y="755.0" width="24.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="461.0" y="766.0">j..</text>
</g>
<g>
<title>itable stub (2 samples, 0.06%)</title><rect x="459.0" y="739.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="462.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="459.7" y="739.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="462.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.03%)</title><rect x="459.7" y="723.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="462.7" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="459.7" y="707.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="462.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (2 samples, 0.06%)</title><rect x="460.0" y="739.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="463.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$162/425494514.apply (48 samples, 1.37%)</title><rect x="460.7" y="739.0" width="16.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="463.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (47 samples, 1.34%)</title><rect x="461.0" y="723.0" width="15.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="464.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (5 samples, 0.14%)</title><rect x="461.0" y="707.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="464.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (5 samples, 0.14%)</title><rect x="461.0" y="691.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="464.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (5 samples, 0.14%)</title><rect x="461.0" y="675.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="464.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$217/1047541244.apply (5 samples, 0.14%)</title><rect x="461.0" y="659.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="464.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (5 samples, 0.14%)</title><rect x="461.0" y="643.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="464.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (5 samples, 0.14%)</title><rect x="461.0" y="627.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="464.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (5 samples, 0.14%)</title><rect x="461.0" y="611.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="464.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (5 samples, 0.14%)</title><rect x="461.0" y="595.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="464.0" y="606.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (4 samples, 0.11%)</title><rect x="461.0" y="579.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="464.0" y="590.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (4 samples, 0.11%)</title><rect x="461.0" y="563.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="464.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (1 samples, 0.03%)</title><rect x="462.4" y="579.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="465.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.length (1 samples, 0.03%)</title><rect x="462.4" y="563.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="465.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (41 samples, 1.17%)</title><rect x="462.7" y="707.0" width="13.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="465.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.06%)</title><rect x="462.7" y="691.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.06%)</title><rect x="462.7" y="675.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="465.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (39 samples, 1.11%)</title><rect x="463.4" y="691.0" width="13.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.4" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$152/1362586375.apply (1 samples, 0.03%)</title><rect x="463.4" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="466.4" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (1 samples, 0.03%)</title><rect x="463.4" y="659.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="466.4" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (1 samples, 0.03%)</title><rect x="463.4" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="466.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (1 samples, 0.03%)</title><rect x="463.4" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.4" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.03%)</title><rect x="463.4" y="611.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="466.4" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (1 samples, 0.03%)</title><rect x="463.4" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="466.4" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (1 samples, 0.03%)</title><rect x="463.4" y="579.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (38 samples, 1.09%)</title><rect x="463.7" y="675.0" width="12.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.7" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (12 samples, 0.34%)</title><rect x="464.4" y="659.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="467.4" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.06%)</title><rect x="464.4" y="643.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="467.4" y="654.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.06%)</title><rect x="464.4" y="627.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="467.4" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.06%)</title><rect x="464.4" y="611.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="467.4" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.06%)</title><rect x="464.4" y="595.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="467.4" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.06%)</title><rect x="464.4" y="579.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="467.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="464.7" y="563.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="467.7" y="574.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="464.7" y="547.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="464.7" y="531.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="467.7" y="542.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.06%)</title><rect x="465.1" y="643.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.06%)</title><rect x="465.1" y="627.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="468.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (2 samples, 0.06%)</title><rect x="465.1" y="611.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="468.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (6 samples, 0.17%)</title><rect x="465.7" y="643.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="468.7" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (6 samples, 0.17%)</title><rect x="465.7" y="627.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="468.7" y="638.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (6 samples, 0.17%)</title><rect x="465.7" y="611.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (6 samples, 0.17%)</title><rect x="465.7" y="595.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="468.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (6 samples, 0.17%)</title><rect x="465.7" y="579.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="468.7" y="590.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (5 samples, 0.14%)</title><rect x="465.7" y="563.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="468.7" y="574.0"></text>
</g>
<g>
<title>vtable stub (4 samples, 0.11%)</title><rect x="466.1" y="547.0" width="1.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="469.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.03%)</title><rect x="467.4" y="563.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="470.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.03%)</title><rect x="467.4" y="547.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="470.4" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (1 samples, 0.03%)</title><rect x="467.4" y="531.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="470.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (1 samples, 0.03%)</title><rect x="467.4" y="515.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="470.4" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$301/1471889027.applyAsLong (1 samples, 0.03%)</title><rect x="467.4" y="499.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="470.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (2 samples, 0.06%)</title><rect x="467.8" y="643.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.8" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.&lt;init&gt; (2 samples, 0.06%)</title><rect x="467.8" y="627.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="470.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline$StatelessOp.&lt;init&gt; (2 samples, 0.06%)</title><rect x="467.8" y="611.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.&lt;init&gt; (2 samples, 0.06%)</title><rect x="467.8" y="595.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (2 samples, 0.06%)</title><rect x="467.8" y="579.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="470.8" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.combineOpFlags (1 samples, 0.03%)</title><rect x="468.1" y="563.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="471.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.03%)</title><rect x="468.4" y="659.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="471.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.03%)</title><rect x="468.4" y="643.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="471.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (23 samples, 0.66%)</title><rect x="468.8" y="659.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="471.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$306/77135866.run (23 samples, 0.66%)</title><rect x="468.8" y="643.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="471.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (23 samples, 0.66%)</title><rect x="468.8" y="627.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="471.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.11%)</title><rect x="468.8" y="611.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="471.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.09%)</title><rect x="468.8" y="595.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="471.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="469.8" y="595.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="472.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (4 samples, 0.11%)</title><rect x="470.1" y="611.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="473.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.06%)</title><rect x="470.1" y="595.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="473.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.06%)</title><rect x="470.1" y="579.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="473.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.06%)</title><rect x="470.8" y="595.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="473.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="471.1" y="579.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="474.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (6 samples, 0.17%)</title><rect x="471.5" y="611.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="474.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (6 samples, 0.17%)</title><rect x="471.5" y="595.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="474.5" y="606.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (4 samples, 0.11%)</title><rect x="471.5" y="579.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="474.5" y="590.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (1 samples, 0.03%)</title><rect x="471.5" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="474.5" y="574.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (3 samples, 0.09%)</title><rect x="471.8" y="563.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="474.8" y="574.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (3 samples, 0.09%)</title><rect x="471.8" y="547.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="474.8" y="558.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.06%)</title><rect x="471.8" y="531.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="474.8" y="542.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.03%)</title><rect x="471.8" y="515.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="474.8" y="526.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="472.1" y="515.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="475.1" y="526.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="472.1" y="499.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="475.1" y="510.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="472.5" y="531.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="475.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.06%)</title><rect x="472.8" y="579.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="475.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.06%)</title><rect x="472.8" y="563.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="475.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.06%)</title><rect x="472.8" y="547.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="475.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (9 samples, 0.26%)</title><rect x="473.5" y="611.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="476.5" y="622.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="475.5" y="595.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="478.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (2 samples, 0.06%)</title><rect x="475.9" y="595.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="478.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.06%)</title><rect x="475.9" y="579.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="478.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/392781299.invoke (2 samples, 0.06%)</title><rect x="475.9" y="563.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="478.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.06%)</title><rect x="475.9" y="547.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="478.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.06%)</title><rect x="475.9" y="531.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="478.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.06%)</title><rect x="475.9" y="515.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="478.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (1 samples, 0.03%)</title><rect x="476.5" y="707.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$234/1055901934.apply (16 samples, 0.46%)</title><rect x="476.9" y="739.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="479.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (16 samples, 0.46%)</title><rect x="476.9" y="723.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="479.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (15 samples, 0.43%)</title><rect x="477.2" y="707.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.2" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.hasNext (1 samples, 0.03%)</title><rect x="477.2" y="691.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="480.2" y="702.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.next (1 samples, 0.03%)</title><rect x="477.5" y="691.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.5" y="702.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.previous (1 samples, 0.03%)</title><rect x="477.5" y="675.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="480.5" y="686.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.hasPrevious (1 samples, 0.03%)</title><rect x="477.5" y="659.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="480.5" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (3 samples, 0.09%)</title><rect x="477.9" y="691.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="480.9" y="702.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (3 samples, 0.09%)</title><rect x="477.9" y="675.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.9" y="686.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (1 samples, 0.03%)</title><rect x="478.6" y="659.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="481.6" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (1 samples, 0.03%)</title><rect x="478.6" y="643.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="481.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (10 samples, 0.29%)</title><rect x="478.9" y="691.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="481.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (10 samples, 0.29%)</title><rect x="478.9" y="675.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.9" y="686.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (9 samples, 0.26%)</title><rect x="479.2" y="659.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="482.2" y="670.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (4 samples, 0.11%)</title><rect x="479.2" y="643.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="482.2" y="654.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (2 samples, 0.06%)</title><rect x="479.9" y="627.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="482.9" y="638.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (2 samples, 0.06%)</title><rect x="479.9" y="611.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="482.9" y="622.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (2 samples, 0.06%)</title><rect x="479.9" y="595.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="482.9" y="606.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (5 samples, 0.14%)</title><rect x="480.6" y="643.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="483.6" y="654.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (2 samples, 0.06%)</title><rect x="481.6" y="627.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="484.6" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="481.6" y="611.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="484.6" y="622.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.03%)</title><rect x="481.9" y="611.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="484.9" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="481.9" y="595.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="484.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (12 samples, 0.34%)</title><rect x="482.3" y="755.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="485.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (12 samples, 0.34%)</title><rect x="482.3" y="739.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="485.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.11%)</title><rect x="482.6" y="723.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="485.6" y="734.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.06%)</title><rect x="482.6" y="707.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="485.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$235/327968557.apply (2 samples, 0.06%)</title><rect x="483.3" y="707.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="486.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$235/327968557.apply (7 samples, 0.20%)</title><rect x="484.0" y="723.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="487.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (7 samples, 0.20%)</title><rect x="484.0" y="707.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (4 samples, 0.11%)</title><rect x="484.0" y="691.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (4 samples, 0.11%)</title><rect x="484.0" y="675.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.0" y="686.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (4 samples, 0.11%)</title><rect x="484.0" y="659.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="487.0" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (4 samples, 0.11%)</title><rect x="484.0" y="643.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.0" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (4 samples, 0.11%)</title><rect x="484.0" y="627.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="487.0" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (2 samples, 0.06%)</title><rect x="484.0" y="611.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="487.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (2 samples, 0.06%)</title><rect x="484.6" y="611.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="487.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (2 samples, 0.06%)</title><rect x="485.3" y="691.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="488.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (2 samples, 0.06%)</title><rect x="485.3" y="675.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="488.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (2 samples, 0.06%)</title><rect x="485.3" y="659.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="488.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (2 samples, 0.06%)</title><rect x="485.3" y="643.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="488.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.06%)</title><rect x="485.3" y="627.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="488.3" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (1 samples, 0.03%)</title><rect x="485.6" y="611.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="488.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.03%)</title><rect x="486.0" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="489.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.03%)</title><rect x="486.0" y="675.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="489.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="486.0" y="659.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="489.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="486.0" y="643.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="489.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (5 samples, 0.14%)</title><rect x="486.3" y="755.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="489.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (2 samples, 0.06%)</title><rect x="487.3" y="739.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (2 samples, 0.06%)</title><rect x="487.3" y="723.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AltResult.&lt;init&gt; (2 samples, 0.06%)</title><rect x="487.3" y="707.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="490.3" y="718.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="488.0" y="755.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="491.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$293/1759280865.apply (9 samples, 0.26%)</title><rect x="488.3" y="787.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="491.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (9 samples, 0.26%)</title><rect x="488.3" y="771.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="491.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (9 samples, 0.26%)</title><rect x="488.3" y="755.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="491.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (8 samples, 0.23%)</title><rect x="488.3" y="739.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="491.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.23%)</title><rect x="488.3" y="723.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="491.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.23%)</title><rect x="488.3" y="707.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="491.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="491.0" y="739.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="494.0" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.getLocalAddress (1 samples, 0.03%)</title><rect x="491.0" y="723.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="494.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.03%)</title><rect x="491.4" y="819.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="494.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (1 samples, 0.03%)</title><rect x="491.4" y="803.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="494.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.03%)</title><rect x="491.4" y="787.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="494.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (79 samples, 2.26%)</title><rect x="491.7" y="899.0" width="26.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="494.7" y="910.0">j..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="498.1" y="883.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="501.1" y="894.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="498.1" y="867.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="501.1" y="878.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="498.1" y="851.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="501.1" y="862.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="498.1" y="835.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="501.1" y="846.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="498.1" y="819.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="501.1" y="830.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="498.1" y="803.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="501.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (12 samples, 0.34%)</title><rect x="498.5" y="883.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="501.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (2 samples, 0.06%)</title><rect x="501.8" y="867.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="504.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (11 samples, 0.31%)</title><rect x="502.5" y="883.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="505.5" y="894.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (9 samples, 0.26%)</title><rect x="503.2" y="867.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="506.2" y="878.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (9 samples, 0.26%)</title><rect x="503.2" y="851.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="506.2" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="505.9" y="835.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="508.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (8 samples, 0.23%)</title><rect x="506.2" y="883.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="509.2" y="894.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.23%)</title><rect x="506.2" y="867.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="509.2" y="878.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.23%)</title><rect x="506.2" y="851.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="509.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (12 samples, 0.34%)</title><rect x="508.9" y="883.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="511.9" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (12 samples, 0.34%)</title><rect x="508.9" y="867.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="511.9" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (12 samples, 0.34%)</title><rect x="508.9" y="851.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="511.9" y="862.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="508.9" y="835.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="511.9" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (11 samples, 0.31%)</title><rect x="509.3" y="835.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="512.3" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1852562922.accept (11 samples, 0.31%)</title><rect x="509.3" y="819.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="512.3" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (11 samples, 0.31%)</title><rect x="509.3" y="803.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="512.3" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.03%)</title><rect x="510.3" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="513.3" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.06%)</title><rect x="510.6" y="787.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="513.6" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/555770717.accept (1 samples, 0.03%)</title><rect x="510.9" y="771.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="513.9" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.03%)</title><rect x="510.9" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="513.9" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.11%)</title><rect x="511.3" y="787.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="514.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="512.0" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="515.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="512.0" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="515.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="512.0" y="739.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="515.0" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.03%)</title><rect x="512.3" y="771.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="515.3" y="782.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="512.6" y="787.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="515.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (13 samples, 0.37%)</title><rect x="513.0" y="883.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="516.0" y="894.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.03%)</title><rect x="514.3" y="867.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="517.3" y="878.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="514.3" y="851.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="517.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (8 samples, 0.23%)</title><rect x="514.7" y="867.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="515.0" y="851.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="518.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="515.0" y="835.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="518.0" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="515.0" y="819.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="518.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.09%)</title><rect x="515.3" y="851.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="518.3" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="516.0" y="835.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="519.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.trim (3 samples, 0.09%)</title><rect x="516.3" y="851.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="519.3" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (3 samples, 0.09%)</title><rect x="516.3" y="835.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.3" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1 samples, 0.03%)</title><rect x="516.7" y="819.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="519.7" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="517.0" y="819.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="520.0" y="830.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.09%)</title><rect x="517.4" y="883.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="520.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$224/427086183.accept (3 samples, 0.09%)</title><rect x="518.4" y="899.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="521.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (3 samples, 0.09%)</title><rect x="518.4" y="883.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="521.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.03%)</title><rect x="519.4" y="947.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="522.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.03%)</title><rect x="519.4" y="931.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="522.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.03%)</title><rect x="519.4" y="915.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="522.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (239 samples, 6.83%)</title><rect x="519.7" y="1011.0" width="80.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="522.7" y="1022.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (238 samples, 6.80%)</title><rect x="520.1" y="995.0" width="80.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="523.1" y="1006.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.03%)</title><rect x="520.7" y="979.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="523.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (234 samples, 6.69%)</title><rect x="521.1" y="979.0" width="78.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="524.1" y="990.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$216/1713688296.run (234 samples, 6.69%)</title><rect x="521.1" y="963.0" width="78.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="524.1" y="974.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (234 samples, 6.69%)</title><rect x="521.1" y="947.0" width="78.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.1" y="958.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (2 samples, 0.06%)</title><rect x="521.1" y="931.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="524.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onReadError (2 samples, 0.06%)</title><rect x="521.1" y="915.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="524.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.wrapWithExtraDetail (2 samples, 0.06%)</title><rect x="521.1" y="899.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="524.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader$$Lambda$296/921387510.get (2 samples, 0.06%)</title><rect x="521.1" y="883.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.currentStateMessage (2 samples, 0.06%)</title><rect x="521.1" y="867.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="524.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.format (2 samples, 0.06%)</title><rect x="521.1" y="851.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="524.1" y="862.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (2 samples, 0.06%)</title><rect x="521.1" y="835.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="524.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (1 samples, 0.03%)</title><rect x="521.4" y="819.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="524.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.03%)</title><rect x="521.7" y="931.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="524.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.03%)</title><rect x="521.7" y="915.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="524.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.03%)</title><rect x="521.7" y="899.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (1 samples, 0.03%)</title><rect x="521.7" y="883.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="524.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (1 samples, 0.03%)</title><rect x="521.7" y="867.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="524.7" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.03%)</title><rect x="521.7" y="851.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="524.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (231 samples, 6.60%)</title><rect x="522.1" y="931.0" width="77.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="525.1" y="942.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (231 samples, 6.60%)</title><rect x="522.1" y="915.0" width="77.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="525.1" y="926.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (231 samples, 6.60%)</title><rect x="522.1" y="899.0" width="77.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="525.1" y="910.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (231 samples, 6.60%)</title><rect x="522.1" y="883.0" width="77.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="525.1" y="894.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (231 samples, 6.60%)</title><rect x="522.1" y="867.0" width="77.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="525.1" y="878.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (231 samples, 6.60%)</title><rect x="522.1" y="851.0" width="77.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="525.1" y="862.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$307/864331069.run (132 samples, 3.77%)</title><rect x="522.8" y="835.0" width="44.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="525.8" y="846.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (132 samples, 3.77%)</title><rect x="522.8" y="819.0" width="44.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.8" y="830.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (132 samples, 3.77%)</title><rect x="522.8" y="803.0" width="44.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="525.8" y="814.0">jdk/..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (11 samples, 0.31%)</title><rect x="522.8" y="787.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="525.8" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (5 samples, 0.14%)</title><rect x="522.8" y="771.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="525.8" y="782.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (5 samples, 0.14%)</title><rect x="522.8" y="755.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="525.8" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (5 samples, 0.14%)</title><rect x="522.8" y="739.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="525.8" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.14%)</title><rect x="522.8" y="723.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="525.8" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.11%)</title><rect x="523.1" y="707.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="526.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.11%)</title><rect x="523.1" y="691.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="526.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.11%)</title><rect x="523.1" y="675.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="526.1" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.11%)</title><rect x="523.1" y="659.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="526.1" y="670.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.03%)</title><rect x="523.8" y="643.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="526.8" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.getChar (1 samples, 0.03%)</title><rect x="524.1" y="643.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="527.1" y="654.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.03%)</title><rect x="524.4" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="527.4" y="782.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.03%)</title><rect x="524.4" y="755.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="527.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (1 samples, 0.03%)</title><rect x="524.4" y="739.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="527.4" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (5 samples, 0.14%)</title><rect x="524.8" y="771.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="527.8" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.14%)</title><rect x="524.8" y="755.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="527.8" y="766.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (5 samples, 0.14%)</title><rect x="524.8" y="739.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="527.8" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.11%)</title><rect x="524.8" y="723.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="527.8" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.11%)</title><rect x="524.8" y="707.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="527.8" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (4 samples, 0.11%)</title><rect x="524.8" y="691.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="527.8" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (3 samples, 0.09%)</title><rect x="524.8" y="675.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="527.8" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (1 samples, 0.03%)</title><rect x="525.1" y="659.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="528.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (1 samples, 0.03%)</title><rect x="525.1" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="528.1" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="525.4" y="659.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="528.4" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="525.4" y="643.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="528.4" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="525.4" y="627.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="528.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.03%)</title><rect x="525.8" y="675.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="528.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.03%)</title><rect x="526.1" y="723.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="529.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (121 samples, 3.46%)</title><rect x="526.5" y="787.0" width="40.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="529.5" y="798.0">jdk..</text>
</g>
<g>
<title>java/time/Instant.now (5 samples, 0.14%)</title><rect x="526.5" y="771.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="529.5" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (5 samples, 0.14%)</title><rect x="526.5" y="755.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="529.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (4 samples, 0.11%)</title><rect x="526.8" y="739.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="529.8" y="750.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.06%)</title><rect x="527.5" y="723.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="530.5" y="734.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.03%)</title><rect x="527.8" y="707.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="530.8" y="718.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="527.8" y="691.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="530.8" y="702.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="527.8" y="675.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="530.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (116 samples, 3.32%)</title><rect x="528.1" y="771.0" width="39.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="531.1" y="782.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (74 samples, 2.12%)</title><rect x="529.2" y="755.0" width="24.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="532.2" y="766.0">j..</text>
</g>
<g>
<title>java/time/Instant.truncatedTo (1 samples, 0.03%)</title><rect x="550.4" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="553.4" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (8 samples, 0.23%)</title><rect x="550.7" y="739.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="553.7" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.previous (1 samples, 0.03%)</title><rect x="553.4" y="739.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="556.4" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="553.8" y="739.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="556.8" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="553.8" y="723.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="556.8" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="553.8" y="707.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="556.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (3 samples, 0.09%)</title><rect x="554.1" y="755.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="557.1" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.09%)</title><rect x="554.1" y="739.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="557.1" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.06%)</title><rect x="554.1" y="723.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="557.1" y="734.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (1 samples, 0.03%)</title><rect x="554.5" y="707.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="557.5" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="554.8" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="557.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.03%)</title><rect x="554.8" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="557.8" y="718.0"></text>
</g>
<g>
<title>java/util/Objects.hash (1 samples, 0.03%)</title><rect x="554.8" y="691.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="557.8" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (1 samples, 0.03%)</title><rect x="554.8" y="675.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="557.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (36 samples, 1.03%)</title><rect x="555.1" y="755.0" width="12.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="558.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (36 samples, 1.03%)</title><rect x="555.1" y="739.0" width="12.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="558.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1 samples, 0.03%)</title><rect x="555.1" y="723.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="558.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.03%)</title><rect x="555.1" y="707.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="558.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.03%)</title><rect x="555.1" y="691.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="558.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (1 samples, 0.03%)</title><rect x="555.1" y="675.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="558.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.reset (1 samples, 0.03%)</title><rect x="555.1" y="659.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="558.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (35 samples, 1.00%)</title><rect x="555.5" y="723.0" width="11.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="558.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (35 samples, 1.00%)</title><rect x="555.5" y="707.0" width="11.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="558.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (28 samples, 0.80%)</title><rect x="555.8" y="691.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="558.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (28 samples, 0.80%)</title><rect x="555.8" y="675.0" width="9.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="558.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (28 samples, 0.80%)</title><rect x="555.8" y="659.0" width="9.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="558.8" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (26 samples, 0.74%)</title><rect x="556.5" y="643.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="559.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (25 samples, 0.71%)</title><rect x="556.8" y="627.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="559.8" y="638.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (1 samples, 0.03%)</title><rect x="556.8" y="611.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="559.8" y="622.0"></text>
</g>
<g>
<title>__write (24 samples, 0.69%)</title><rect x="557.2" y="611.0" width="8.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="560.2" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.66%)</title><rect x="557.5" y="595.0" width="7.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="560.5" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.66%)</title><rect x="557.5" y="579.0" width="7.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="560.5" y="590.0"></text>
</g>
<g>
<title>ksys_write (22 samples, 0.63%)</title><rect x="557.8" y="563.0" width="7.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="560.8" y="574.0"></text>
</g>
<g>
<title>vfs_write (21 samples, 0.60%)</title><rect x="558.2" y="547.0" width="7.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="561.2" y="558.0"></text>
</g>
<g>
<title>new_sync_write (21 samples, 0.60%)</title><rect x="558.2" y="531.0" width="7.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="561.2" y="542.0"></text>
</g>
<g>
<title>pipe_write (20 samples, 0.57%)</title><rect x="558.5" y="515.0" width="6.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="561.5" y="526.0"></text>
</g>
<g>
<title>__wake_up_common_lock (18 samples, 0.51%)</title><rect x="558.5" y="499.0" width="6.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="561.5" y="510.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="558.5" y="483.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="561.5" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.49%)</title><rect x="558.8" y="483.0" width="5.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="561.8" y="494.0"></text>
</g>
<g>
<title>copy_page_from_iter (1 samples, 0.03%)</title><rect x="564.6" y="499.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="567.6" y="510.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.03%)</title><rect x="564.6" y="483.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="567.6" y="494.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="564.6" y="467.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="567.6" y="478.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="564.9" y="499.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="567.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (2 samples, 0.06%)</title><rect x="565.3" y="691.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="568.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/FlowTube.asTubeSubscriber (4 samples, 0.11%)</title><rect x="565.9" y="691.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="568.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$313/1834938317.accept (8 samples, 0.23%)</title><rect x="567.3" y="835.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="570.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (8 samples, 0.23%)</title><rect x="567.3" y="819.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="570.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (8 samples, 0.23%)</title><rect x="567.3" y="803.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="570.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (8 samples, 0.23%)</title><rect x="567.3" y="787.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="570.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8 samples, 0.23%)</title><rect x="567.3" y="771.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="570.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (8 samples, 0.23%)</title><rect x="567.3" y="755.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="570.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.03%)</title><rect x="567.6" y="739.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="570.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="567.6" y="723.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="570.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (6 samples, 0.17%)</title><rect x="568.0" y="739.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="571.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.11%)</title><rect x="568.0" y="723.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="571.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.11%)</title><rect x="568.0" y="707.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="571.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.11%)</title><rect x="568.0" y="691.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="571.0" y="702.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (4 samples, 0.11%)</title><rect x="568.0" y="675.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="571.0" y="686.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (4 samples, 0.11%)</title><rect x="568.0" y="659.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="571.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (4 samples, 0.11%)</title><rect x="568.0" y="643.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="571.0" y="654.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="568.0" y="627.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="571.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$318/1674853394.accept (1 samples, 0.03%)</title><rect x="568.3" y="627.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="571.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$320/1743496368.accept (2 samples, 0.06%)</title><rect x="568.6" y="627.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="571.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$320/1743496368.accept (2 samples, 0.06%)</title><rect x="569.3" y="723.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="572.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (2 samples, 0.06%)</title><rect x="569.3" y="707.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="572.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (2 samples, 0.06%)</title><rect x="569.3" y="691.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="572.3" y="702.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (2 samples, 0.06%)</title><rect x="569.3" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="572.3" y="686.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (2 samples, 0.06%)</title><rect x="569.3" y="659.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="572.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (82 samples, 2.34%)</title><rect x="570.0" y="835.0" width="27.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="573.0" y="846.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (82 samples, 2.34%)</title><rect x="570.0" y="819.0" width="27.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="573.0" y="830.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (80 samples, 2.29%)</title><rect x="570.7" y="803.0" width="26.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="573.7" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (77 samples, 2.20%)</title><rect x="570.7" y="787.0" width="25.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="573.7" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (77 samples, 2.20%)</title><rect x="570.7" y="771.0" width="25.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.7" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (74 samples, 2.12%)</title><rect x="571.7" y="755.0" width="24.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="574.7" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.03%)</title><rect x="571.7" y="739.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="571.7" y="723.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="574.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (73 samples, 2.09%)</title><rect x="572.0" y="739.0" width="24.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="575.0" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.06%)</title><rect x="572.0" y="723.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="575.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.06%)</title><rect x="572.0" y="707.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="575.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.06%)</title><rect x="572.0" y="691.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="575.0" y="702.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (2 samples, 0.06%)</title><rect x="572.0" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="575.0" y="686.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (2 samples, 0.06%)</title><rect x="572.0" y="659.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="575.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (2 samples, 0.06%)</title><rect x="572.0" y="643.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="575.0" y="654.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="572.3" y="627.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="575.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$323/1326592755.accept (71 samples, 2.03%)</title><rect x="572.7" y="723.0" width="23.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="575.7" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (70 samples, 2.00%)</title><rect x="573.0" y="707.0" width="23.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="576.0" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (70 samples, 2.00%)</title><rect x="573.0" y="691.0" width="23.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.0" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (70 samples, 2.00%)</title><rect x="573.0" y="675.0" width="23.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="576.0" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2 samples, 0.06%)</title><rect x="573.0" y="659.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="576.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (1 samples, 0.03%)</title><rect x="573.4" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="576.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (1 samples, 0.03%)</title><rect x="573.4" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="576.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$363/1931323287.apply (1 samples, 0.03%)</title><rect x="573.4" y="611.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="576.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (68 samples, 1.94%)</title><rect x="573.7" y="659.0" width="22.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="576.7" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (67 samples, 1.92%)</title><rect x="574.0" y="643.0" width="22.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="577.0" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (66 samples, 1.89%)</title><rect x="574.4" y="627.0" width="22.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="577.4" y="638.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (62 samples, 1.77%)</title><rect x="574.4" y="611.0" width="20.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="577.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (61 samples, 1.74%)</title><rect x="574.7" y="595.0" width="20.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="577.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (61 samples, 1.74%)</title><rect x="574.7" y="579.0" width="20.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="577.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (61 samples, 1.74%)</title><rect x="574.7" y="563.0" width="20.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="577.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (61 samples, 1.74%)</title><rect x="574.7" y="547.0" width="20.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="577.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (58 samples, 1.66%)</title><rect x="575.7" y="531.0" width="19.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.7" y="542.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="575.7" y="515.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="578.7" y="526.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.26%)</title><rect x="576.0" y="515.0" width="3.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="579.0" y="526.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="576.4" y="499.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="579.4" y="510.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="576.7" y="499.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="579.7" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (2 samples, 0.06%)</title><rect x="577.1" y="499.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="580.1" y="510.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="577.7" y="499.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="580.7" y="510.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.03%)</title><rect x="578.1" y="499.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="581.1" y="510.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.03%)</title><rect x="578.4" y="499.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="581.4" y="510.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="578.7" y="499.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="581.7" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_signal (47 samples, 1.34%)</title><rect x="579.1" y="515.0" width="15.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="582.1" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 1.20%)</title><rect x="580.8" y="499.0" width="14.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="583.8" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 1.20%)</title><rect x="580.8" y="483.0" width="14.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="583.8" y="494.0"></text>
</g>
<g>
<title>__se_sys_futex (39 samples, 1.11%)</title><rect x="581.1" y="467.0" width="13.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="584.1" y="478.0"></text>
</g>
<g>
<title>do_futex (39 samples, 1.11%)</title><rect x="581.1" y="451.0" width="13.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="584.1" y="462.0"></text>
</g>
<g>
<title>futex_wake (38 samples, 1.09%)</title><rect x="581.4" y="435.0" width="12.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="584.4" y="446.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="581.8" y="419.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="584.8" y="430.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.03%)</title><rect x="581.8" y="403.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="584.8" y="414.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.06%)</title><rect x="582.1" y="419.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="585.1" y="430.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="582.8" y="419.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="585.8" y="430.0"></text>
</g>
<g>
<title>wake_up_q (33 samples, 0.94%)</title><rect x="583.1" y="419.0" width="11.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="586.1" y="430.0"></text>
</g>
<g>
<title>try_to_wake_up (33 samples, 0.94%)</title><rect x="583.1" y="403.0" width="11.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="586.1" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (31 samples, 0.89%)</title><rect x="583.1" y="387.0" width="10.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="586.1" y="398.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="593.6" y="387.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="596.6" y="398.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="593.9" y="387.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="596.9" y="398.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.06%)</title><rect x="594.3" y="467.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="597.3" y="478.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.03%)</title><rect x="594.6" y="451.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="597.6" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="594.9" y="515.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="597.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.11%)</title><rect x="595.3" y="611.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="598.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.11%)</title><rect x="595.3" y="595.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="598.3" y="606.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (4 samples, 0.11%)</title><rect x="595.3" y="579.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="598.3" y="590.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (4 samples, 0.11%)</title><rect x="595.3" y="563.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="598.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (4 samples, 0.11%)</title><rect x="595.3" y="547.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="598.3" y="558.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.06%)</title><rect x="595.6" y="531.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="598.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$357/1831441117.accept (1 samples, 0.03%)</title><rect x="596.3" y="531.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="599.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (3 samples, 0.09%)</title><rect x="596.6" y="787.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="599.6" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.06%)</title><rect x="596.6" y="771.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="599.6" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (1 samples, 0.03%)</title><rect x="596.6" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="599.6" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="597.0" y="755.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="600.0" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="597.0" y="739.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="600.0" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="597.0" y="723.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="600.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (1 samples, 0.03%)</title><rect x="597.3" y="771.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="600.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (3 samples, 0.09%)</title><rect x="597.6" y="835.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="600.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (3 samples, 0.09%)</title><rect x="597.6" y="819.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="600.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (1 samples, 0.03%)</title><rect x="598.3" y="803.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="601.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (1 samples, 0.03%)</title><rect x="598.3" y="787.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="601.3" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (1 samples, 0.03%)</title><rect x="598.3" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="601.3" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.03%)</title><rect x="598.3" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="601.3" y="766.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.03%)</title><rect x="598.3" y="739.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="601.3" y="750.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (1 samples, 0.03%)</title><rect x="598.3" y="723.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="601.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.03%)</title><rect x="598.7" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="601.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.03%)</title><rect x="598.7" y="819.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="601.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.03%)</title><rect x="598.7" y="803.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="601.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.sliceWithLimitedCapacity (3 samples, 0.09%)</title><rect x="599.0" y="835.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="602.0" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.slice (3 samples, 0.09%)</title><rect x="599.0" y="819.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="602.0" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.09%)</title><rect x="599.0" y="803.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="602.0" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="599.3" y="787.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="602.3" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="599.3" y="771.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="602.3" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="599.7" y="755.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="602.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.03%)</title><rect x="599.7" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="602.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="600.0" y="979.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="603.0" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl$$Lambda$124/314024696.run (297 samples, 8.49%)</title><rect x="600.3" y="1043.0" width="100.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="603.3" y="1054.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.lambda$entity$1 (296 samples, 8.46%)</title><rect x="600.7" y="1027.0" width="99.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="603.7" y="1038.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.executeEntityRequest (296 samples, 8.46%)</title><rect x="600.7" y="1011.0" width="99.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="603.7" y="1022.0">ru/mail/poli..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (2 samples, 0.06%)</title><rect x="601.3" y="995.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="604.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (2 samples, 0.06%)</title><rect x="601.3" y="979.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="604.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionally (2 samples, 0.06%)</title><rect x="601.3" y="963.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="604.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (1 samples, 0.03%)</title><rect x="602.0" y="995.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="605.0" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/CompletableFutureHelper.whenComplete (6 samples, 0.17%)</title><rect x="602.4" y="995.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="605.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (2 samples, 0.06%)</title><rect x="602.7" y="979.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="605.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (2 samples, 0.06%)</title><rect x="602.7" y="963.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="605.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionally (2 samples, 0.06%)</title><rect x="602.7" y="947.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="605.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (3 samples, 0.09%)</title><rect x="603.4" y="979.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (3 samples, 0.09%)</title><rect x="603.4" y="963.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="606.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (2 samples, 0.06%)</title><rect x="603.4" y="947.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="606.4" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/CompletableFutureHelper$$Lambda$173/1222990715.accept (1 samples, 0.03%)</title><rect x="603.7" y="931.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="606.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="604.0" y="947.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="607.0" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/EntityWorker.processRequestLocally (50 samples, 1.43%)</title><rect x="604.4" y="995.0" width="16.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.06%)</title><rect x="604.7" y="979.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="607.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.06%)</title><rect x="604.7" y="963.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="607.7" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/EntityWorker.responseProcessEntity (47 samples, 1.34%)</title><rect x="605.4" y="979.0" width="15.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="608.4" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.getRecord (45 samples, 1.29%)</title><rect x="605.4" y="963.0" width="15.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="608.4" y="974.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (45 samples, 1.29%)</title><rect x="605.4" y="947.0" width="15.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="608.4" y="958.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (45 samples, 1.29%)</title><rect x="605.4" y="931.0" width="15.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="608.4" y="942.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (39 samples, 1.11%)</title><rect x="605.7" y="915.0" width="13.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="608.7" y="926.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.03%)</title><rect x="605.7" y="899.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="608.7" y="910.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.03%)</title><rect x="606.1" y="899.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="609.1" y="910.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.03%)</title><rect x="606.4" y="899.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="609.4" y="910.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.03%)</title><rect x="606.7" y="899.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="609.7" y="910.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (35 samples, 1.00%)</title><rect x="607.1" y="899.0" width="11.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="610.1" y="910.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (30 samples, 0.86%)</title><rect x="607.1" y="883.0" width="10.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="610.1" y="894.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.03%)</title><rect x="607.1" y="867.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="610.1" y="878.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (28 samples, 0.80%)</title><rect x="607.4" y="867.0" width="9.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="610.4" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (27 samples, 0.77%)</title><rect x="607.8" y="851.0" width="9.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="610.8" y="862.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (25 samples, 0.71%)</title><rect x="607.8" y="835.0" width="8.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="610.8" y="846.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.06%)</title><rect x="608.1" y="819.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="611.1" y="830.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.03%)</title><rect x="608.8" y="819.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="611.8" y="830.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (2 samples, 0.06%)</title><rect x="609.1" y="819.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="612.1" y="830.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="609.1" y="803.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="612.1" y="814.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.03%)</title><rect x="609.4" y="803.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="612.4" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.06%)</title><rect x="609.8" y="819.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="612.8" y="830.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.03%)</title><rect x="609.8" y="803.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="612.8" y="814.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="609.8" y="787.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="612.8" y="798.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.03%)</title><rect x="610.1" y="803.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="613.1" y="814.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (16 samples, 0.46%)</title><rect x="610.5" y="819.0" width="5.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="613.5" y="830.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5993561685849609822.so (16 samples, 0.46%)</title><rect x="610.5" y="803.0" width="5.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="613.5" y="814.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5993561685849609822.so (1 samples, 0.03%)</title><rect x="610.5" y="787.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="613.5" y="798.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (14 samples, 0.40%)</title><rect x="610.8" y="787.0" width="4.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="613.8" y="798.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.11%)</title><rect x="614.2" y="771.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="617.2" y="782.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5993561685849609822.so (1 samples, 0.03%)</title><rect x="615.2" y="755.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="618.2" y="766.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.03%)</title><rect x="615.5" y="787.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="618.5" y="798.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.03%)</title><rect x="615.9" y="819.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="618.9" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.06%)</title><rect x="616.2" y="835.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="619.2" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1 samples, 0.03%)</title><rect x="616.9" y="867.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="619.9" y="878.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (5 samples, 0.14%)</title><rect x="617.2" y="883.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="620.2" y="894.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="617.2" y="867.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="620.2" y="878.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.03%)</title><rect x="617.5" y="867.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="620.5" y="878.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.09%)</title><rect x="617.9" y="867.0" width="1.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="620.9" y="878.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.03%)</title><rect x="617.9" y="851.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="620.9" y="862.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.06%)</title><rect x="618.2" y="851.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="621.2" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.06%)</title><rect x="618.2" y="835.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="621.2" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.06%)</title><rect x="618.2" y="819.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="621.2" y="830.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.06%)</title><rect x="618.2" y="803.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="621.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="618.9" y="915.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="621.9" y="926.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="618.9" y="899.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="621.9" y="910.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.03%)</title><rect x="619.2" y="899.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="622.2" y="910.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.03%)</title><rect x="619.6" y="915.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="622.6" y="926.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.03%)</title><rect x="619.9" y="915.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="622.9" y="926.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.03%)</title><rect x="620.2" y="915.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="623.2" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORecord.toBytes (2 samples, 0.06%)</title><rect x="620.6" y="963.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="623.6" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.06%)</title><rect x="620.6" y="947.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="623.6" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="620.6" y="931.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.6" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="620.6" y="915.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="623.6" y="926.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="620.6" y="899.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="623.6" y="910.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="620.6" y="883.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="623.6" y="894.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="620.6" y="867.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="623.6" y="878.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="620.6" y="851.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="623.6" y="862.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="620.6" y="835.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="623.6" y="846.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="620.6" y="819.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="623.6" y="830.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="620.6" y="803.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="623.6" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="620.9" y="883.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="623.9" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="620.9" y="867.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="623.9" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="620.9" y="851.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="623.9" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/EntityWorker.proxy (216 samples, 6.17%)</title><rect x="621.3" y="995.0" width="72.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="624.3" y="1006.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/Long.toString (2 samples, 0.06%)</title><rect x="621.6" y="979.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="624.6" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.09%)</title><rect x="622.3" y="979.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="625.3" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (3 samples, 0.09%)</title><rect x="622.3" y="963.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="625.3" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1617550160.invoke (3 samples, 0.09%)</title><rect x="622.3" y="947.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="625.3" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.09%)</title><rect x="622.3" y="931.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="625.3" y="942.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.03%)</title><rect x="622.3" y="915.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="625.3" y="926.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.06%)</title><rect x="622.6" y="915.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="625.6" y="926.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.06%)</title><rect x="622.6" y="899.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="625.6" y="910.0"></text>
</g>
<g>
<title>java/net/URI.create (23 samples, 0.66%)</title><rect x="623.3" y="979.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="626.3" y="990.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (23 samples, 0.66%)</title><rect x="623.3" y="963.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="626.3" y="974.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (23 samples, 0.66%)</title><rect x="623.3" y="947.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="626.3" y="958.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (2 samples, 0.06%)</title><rect x="624.0" y="931.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="627.0" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (2 samples, 0.06%)</title><rect x="624.0" y="915.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="627.0" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.06%)</title><rect x="624.0" y="899.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="627.0" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (19 samples, 0.54%)</title><rect x="624.6" y="931.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="627.6" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (6 samples, 0.17%)</title><rect x="624.6" y="915.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="627.6" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (6 samples, 0.17%)</title><rect x="624.6" y="899.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="627.6" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (13 samples, 0.37%)</title><rect x="626.6" y="915.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="629.6" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (6 samples, 0.17%)</title><rect x="627.3" y="899.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.3" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (2 samples, 0.06%)</title><rect x="627.3" y="883.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="630.3" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.06%)</title><rect x="627.3" y="867.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="630.3" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (3 samples, 0.09%)</title><rect x="628.0" y="883.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="631.0" y="894.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.06%)</title><rect x="628.0" y="867.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="631.0" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.06%)</title><rect x="628.0" y="851.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="631.0" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="628.7" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="631.7" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseIPv4Address (1 samples, 0.03%)</title><rect x="629.0" y="883.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="632.0" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scanIPv4Address (1 samples, 0.03%)</title><rect x="629.0" y="867.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="632.0" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="629.0" y="851.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="632.0" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (5 samples, 0.14%)</title><rect x="629.3" y="899.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="632.3" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (3 samples, 0.09%)</title><rect x="631.0" y="979.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="634.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (3 samples, 0.09%)</title><rect x="631.0" y="963.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="634.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (2 samples, 0.06%)</title><rect x="631.4" y="947.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="634.4" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (1 samples, 0.03%)</title><rect x="631.4" y="931.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="634.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (1 samples, 0.03%)</title><rect x="631.7" y="931.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="634.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1 samples, 0.03%)</title><rect x="632.0" y="979.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.03%)</title><rect x="632.0" y="963.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (1 samples, 0.03%)</title><rect x="632.0" y="947.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="635.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$217/1047541244.apply (1 samples, 0.03%)</title><rect x="632.0" y="931.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="635.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (1 samples, 0.03%)</title><rect x="632.0" y="915.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="635.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (1 samples, 0.03%)</title><rect x="632.0" y="899.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (1 samples, 0.03%)</title><rect x="632.0" y="883.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="635.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.03%)</title><rect x="632.0" y="867.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="635.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (148 samples, 4.23%)</title><rect x="632.4" y="979.0" width="49.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="635.4" y="990.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (148 samples, 4.23%)</title><rect x="632.4" y="963.0" width="49.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.4" y="974.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (148 samples, 4.23%)</title><rect x="632.4" y="947.0" width="49.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="635.4" y="958.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (148 samples, 4.23%)</title><rect x="632.4" y="931.0" width="49.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="635.4" y="942.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.03%)</title><rect x="633.1" y="915.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="636.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (67 samples, 1.92%)</title><rect x="633.4" y="915.0" width="22.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="636.4" y="926.0">j..</text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="634.1" y="899.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="637.1" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="634.1" y="883.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="637.1" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (3 samples, 0.09%)</title><rect x="634.4" y="899.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="637.4" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.03%)</title><rect x="634.4" y="883.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="637.4" y="894.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.03%)</title><rect x="634.7" y="883.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="637.7" y="894.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.03%)</title><rect x="634.7" y="867.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.7" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.03%)</title><rect x="634.7" y="851.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="637.7" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="634.7" y="835.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="637.7" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="634.7" y="819.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="637.7" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.03%)</title><rect x="635.1" y="883.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="638.1" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.03%)</title><rect x="635.1" y="867.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="638.1" y="878.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.03%)</title><rect x="635.1" y="851.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="638.1" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.03%)</title><rect x="635.1" y="835.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="638.1" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.03%)</title><rect x="635.1" y="819.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="638.1" y="830.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (1 samples, 0.03%)</title><rect x="635.1" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="638.1" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (19 samples, 0.54%)</title><rect x="635.4" y="899.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="638.4" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (19 samples, 0.54%)</title><rect x="635.4" y="883.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="638.4" y="894.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (19 samples, 0.54%)</title><rect x="635.4" y="867.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="638.4" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (17 samples, 0.49%)</title><rect x="636.1" y="851.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.1" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1852562922.accept (17 samples, 0.49%)</title><rect x="636.1" y="835.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="639.1" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (17 samples, 0.49%)</title><rect x="636.1" y="819.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="639.1" y="830.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (15 samples, 0.43%)</title><rect x="636.8" y="803.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="639.8" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/555770717.accept (14 samples, 0.40%)</title><rect x="636.8" y="787.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="639.8" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (14 samples, 0.40%)</title><rect x="636.8" y="771.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="639.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.06%)</title><rect x="637.1" y="755.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="640.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.06%)</title><rect x="637.1" y="739.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="640.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/11939193.test (11 samples, 0.31%)</title><rect x="637.8" y="755.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="640.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (11 samples, 0.31%)</title><rect x="637.8" y="739.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="640.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/718068661.test (7 samples, 0.20%)</title><rect x="638.1" y="723.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="641.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (7 samples, 0.20%)</title><rect x="638.1" y="707.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="641.1" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (7 samples, 0.20%)</title><rect x="638.1" y="691.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="641.1" y="702.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (7 samples, 0.20%)</title><rect x="638.1" y="675.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="641.1" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (7 samples, 0.20%)</title><rect x="638.1" y="659.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="641.1" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (7 samples, 0.20%)</title><rect x="638.1" y="643.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="641.1" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.11%)</title><rect x="639.1" y="627.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.09%)</title><rect x="639.5" y="611.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="642.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.09%)</title><rect x="639.5" y="595.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.09%)</title><rect x="639.5" y="579.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="642.5" y="590.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.06%)</title><rect x="639.5" y="563.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="642.5" y="574.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.06%)</title><rect x="639.5" y="547.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="642.5" y="558.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="639.8" y="531.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.8" y="542.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.03%)</title><rect x="639.8" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.8" y="526.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.03%)</title><rect x="640.1" y="563.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="643.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (1 samples, 0.03%)</title><rect x="640.5" y="723.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="643.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (2 samples, 0.06%)</title><rect x="640.8" y="723.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="643.8" y="734.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.hasNext (1 samples, 0.03%)</title><rect x="641.5" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="644.5" y="798.0"></text>
</g>
<g>
<title>java/util/Optional.orElse (2 samples, 0.06%)</title><rect x="641.8" y="899.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="644.8" y="910.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.06%)</title><rect x="641.8" y="883.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="644.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (3 samples, 0.09%)</title><rect x="642.5" y="899.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.5" y="910.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.06%)</title><rect x="642.8" y="883.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.06%)</title><rect x="642.8" y="867.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (37 samples, 1.06%)</title><rect x="643.5" y="899.0" width="12.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="646.5" y="910.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (35 samples, 1.00%)</title><rect x="644.2" y="883.0" width="11.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="647.2" y="894.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="644.2" y="867.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="647.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="644.2" y="851.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="647.2" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (34 samples, 0.97%)</title><rect x="644.5" y="867.0" width="11.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="647.5" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.03%)</title><rect x="644.5" y="851.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="647.5" y="862.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (19 samples, 0.54%)</title><rect x="644.9" y="851.0" width="6.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="647.9" y="862.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (1 samples, 0.03%)</title><rect x="645.5" y="835.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="648.5" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.03%)</title><rect x="645.9" y="835.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="648.9" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (1 samples, 0.03%)</title><rect x="645.9" y="819.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="648.9" y="830.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 0.14%)</title><rect x="646.2" y="835.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="649.2" y="846.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (4 samples, 0.11%)</title><rect x="646.2" y="819.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="649.2" y="830.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.06%)</title><rect x="646.9" y="803.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="649.9" y="814.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.03%)</title><rect x="647.6" y="819.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="650.6" y="830.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.03%)</title><rect x="647.9" y="835.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="650.9" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (1 samples, 0.03%)</title><rect x="648.2" y="835.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="651.2" y="846.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.03%)</title><rect x="648.6" y="835.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="651.6" y="846.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.03%)</title><rect x="648.9" y="835.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="651.9" y="846.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.06%)</title><rect x="649.3" y="835.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="652.3" y="846.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.03%)</title><rect x="649.6" y="819.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="652.6" y="830.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="649.6" y="803.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="652.6" y="814.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="649.6" y="787.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="652.6" y="798.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (4 samples, 0.11%)</title><rect x="649.9" y="835.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="652.9" y="846.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.09%)</title><rect x="650.3" y="819.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="653.3" y="830.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.06%)</title><rect x="650.6" y="803.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="653.6" y="814.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.06%)</title><rect x="650.6" y="787.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="653.6" y="798.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.06%)</title><rect x="650.6" y="771.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="653.6" y="782.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (1 samples, 0.03%)</title><rect x="651.3" y="851.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="654.3" y="862.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (1 samples, 0.03%)</title><rect x="651.6" y="851.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="654.6" y="862.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.03%)</title><rect x="651.9" y="851.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="654.9" y="862.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (10 samples, 0.29%)</title><rect x="652.3" y="851.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="655.3" y="862.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (10 samples, 0.29%)</title><rect x="652.3" y="835.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="655.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.14%)</title><rect x="653.0" y="819.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="656.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.14%)</title><rect x="653.0" y="803.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="656.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.14%)</title><rect x="653.0" y="787.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="656.0" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="654.0" y="771.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="657.0" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="654.3" y="771.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="657.3" y="782.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (3 samples, 0.09%)</title><rect x="654.6" y="819.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="657.6" y="830.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (3 samples, 0.09%)</title><rect x="654.6" y="803.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="657.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (3 samples, 0.09%)</title><rect x="654.6" y="787.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="657.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="655.3" y="771.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="658.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="655.3" y="755.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="658.3" y="766.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="655.7" y="851.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="658.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (9 samples, 0.26%)</title><rect x="656.0" y="915.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="659.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (7 samples, 0.20%)</title><rect x="656.7" y="899.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="659.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (7 samples, 0.20%)</title><rect x="656.7" y="883.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="659.7" y="894.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (1 samples, 0.03%)</title><rect x="657.0" y="867.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="660.0" y="878.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (1 samples, 0.03%)</title><rect x="657.0" y="851.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="660.0" y="862.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (1 samples, 0.03%)</title><rect x="657.0" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="660.0" y="846.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (4 samples, 0.11%)</title><rect x="657.3" y="867.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="660.3" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.03%)</title><rect x="658.0" y="851.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="661.0" y="862.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (1 samples, 0.03%)</title><rect x="658.0" y="835.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="661.0" y="846.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (1 samples, 0.03%)</title><rect x="658.0" y="819.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="661.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (1 samples, 0.03%)</title><rect x="658.0" y="803.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="661.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isSameClassPackage (1 samples, 0.03%)</title><rect x="658.0" y="787.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="661.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.03%)</title><rect x="658.4" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="661.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (1 samples, 0.03%)</title><rect x="658.7" y="867.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="661.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (69 samples, 1.97%)</title><rect x="659.0" y="915.0" width="23.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="662.0" y="926.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (68 samples, 1.94%)</title><rect x="659.0" y="899.0" width="23.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="662.0" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (68 samples, 1.94%)</title><rect x="659.0" y="883.0" width="23.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="662.0" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (65 samples, 1.86%)</title><rect x="659.7" y="867.0" width="21.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="662.7" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (65 samples, 1.86%)</title><rect x="659.7" y="851.0" width="21.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="662.7" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (65 samples, 1.86%)</title><rect x="659.7" y="835.0" width="21.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="662.7" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (65 samples, 1.86%)</title><rect x="659.7" y="819.0" width="21.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="662.7" y="830.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (63 samples, 1.80%)</title><rect x="660.4" y="803.0" width="21.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="663.4" y="814.0">j..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.03%)</title><rect x="660.7" y="787.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="663.7" y="798.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.23%)</title><rect x="661.1" y="787.0" width="2.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="664.1" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="661.1" y="771.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="664.1" y="782.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.06%)</title><rect x="661.4" y="771.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="664.4" y="782.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="662.1" y="771.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="665.1" y="782.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.03%)</title><rect x="662.4" y="771.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="665.4" y="782.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.03%)</title><rect x="662.7" y="771.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="665.7" y="782.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.06%)</title><rect x="663.1" y="771.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="666.1" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (52 samples, 1.49%)</title><rect x="663.8" y="787.0" width="17.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="666.8" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (50 samples, 1.43%)</title><rect x="664.4" y="771.0" width="16.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="667.4" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (50 samples, 1.43%)</title><rect x="664.4" y="755.0" width="16.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="667.4" y="766.0"></text>
</g>
<g>
<title>__se_sys_futex (48 samples, 1.37%)</title><rect x="664.8" y="739.0" width="16.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="667.8" y="750.0"></text>
</g>
<g>
<title>do_futex (48 samples, 1.37%)</title><rect x="664.8" y="723.0" width="16.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="667.8" y="734.0"></text>
</g>
<g>
<title>futex_wake (48 samples, 1.37%)</title><rect x="664.8" y="707.0" width="16.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="667.8" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="665.8" y="691.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="668.8" y="702.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.09%)</title><rect x="666.1" y="691.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="669.1" y="702.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.03%)</title><rect x="666.8" y="675.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="669.8" y="686.0"></text>
</g>
<g>
<title>wake_up_q (41 samples, 1.17%)</title><rect x="667.1" y="691.0" width="13.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="670.1" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (41 samples, 1.17%)</title><rect x="667.1" y="675.0" width="13.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="670.1" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (41 samples, 1.17%)</title><rect x="667.1" y="659.0" width="13.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="670.1" y="670.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.03%)</title><rect x="681.0" y="739.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="684.0" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="681.3" y="787.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="684.3" y="798.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (1 samples, 0.03%)</title><rect x="681.6" y="867.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="684.6" y="878.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (1 samples, 0.03%)</title><rect x="681.6" y="851.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="684.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (1 samples, 0.03%)</title><rect x="681.6" y="835.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="684.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (1 samples, 0.03%)</title><rect x="682.0" y="899.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="685.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.03%)</title><rect x="682.0" y="883.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="685.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (1 samples, 0.03%)</title><rect x="682.0" y="867.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="685.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (20 samples, 0.57%)</title><rect x="682.3" y="979.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="685.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (20 samples, 0.57%)</title><rect x="682.3" y="963.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="685.3" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (20 samples, 0.57%)</title><rect x="682.3" y="947.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="685.3" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (20 samples, 0.57%)</title><rect x="682.3" y="931.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="685.3" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (18 samples, 0.51%)</title><rect x="683.0" y="915.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="686.0" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1852562922.accept (17 samples, 0.49%)</title><rect x="683.3" y="899.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="686.3" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (17 samples, 0.49%)</title><rect x="683.3" y="883.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.3" y="894.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="683.7" y="867.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="686.7" y="878.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="683.7" y="851.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="686.7" y="862.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="683.7" y="835.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="686.7" y="846.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="683.7" y="819.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="686.7" y="830.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="683.7" y="803.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="686.7" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="683.7" y="787.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="686.7" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (4 samples, 0.11%)</title><rect x="684.0" y="867.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="687.0" y="878.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.06%)</title><rect x="684.3" y="851.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="687.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/718068661.test (1 samples, 0.03%)</title><rect x="685.0" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="688.0" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (7 samples, 0.20%)</title><rect x="685.3" y="867.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="688.3" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/555770717.accept (6 samples, 0.17%)</title><rect x="685.7" y="851.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="688.7" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (6 samples, 0.17%)</title><rect x="685.7" y="835.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="688.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/718068661.test (5 samples, 0.14%)</title><rect x="686.0" y="819.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="689.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (5 samples, 0.14%)</title><rect x="686.0" y="803.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="689.0" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (5 samples, 0.14%)</title><rect x="686.0" y="787.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="689.0" y="798.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (5 samples, 0.14%)</title><rect x="686.0" y="771.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="689.0" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (5 samples, 0.14%)</title><rect x="686.0" y="755.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="689.0" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.14%)</title><rect x="686.0" y="739.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="689.0" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (5 samples, 0.14%)</title><rect x="686.0" y="723.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="689.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.11%)</title><rect x="686.4" y="707.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="689.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.11%)</title><rect x="686.4" y="691.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="689.4" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.11%)</title><rect x="686.4" y="675.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="689.4" y="686.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="686.4" y="659.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="689.4" y="670.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="686.4" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="689.4" y="654.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="686.4" y="627.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="689.4" y="638.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.03%)</title><rect x="686.4" y="611.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="689.4" y="622.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (3 samples, 0.09%)</title><rect x="686.7" y="659.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="689.7" y="670.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.03%)</title><rect x="687.4" y="643.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="690.4" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.09%)</title><rect x="687.7" y="867.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="690.7" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.03%)</title><rect x="688.4" y="851.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.4" y="862.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="688.7" y="867.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="691.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (13 samples, 0.37%)</title><rect x="689.1" y="979.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="692.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (13 samples, 0.37%)</title><rect x="689.1" y="963.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="692.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (12 samples, 0.34%)</title><rect x="689.1" y="947.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="692.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/718068661.test (6 samples, 0.17%)</title><rect x="689.1" y="931.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="692.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (6 samples, 0.17%)</title><rect x="689.1" y="915.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.1" y="926.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (6 samples, 0.17%)</title><rect x="689.1" y="899.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="692.1" y="910.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (6 samples, 0.17%)</title><rect x="689.1" y="883.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.1" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (6 samples, 0.17%)</title><rect x="689.1" y="867.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="692.1" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (6 samples, 0.17%)</title><rect x="689.1" y="851.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="692.1" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (5 samples, 0.14%)</title><rect x="689.4" y="835.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="692.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.14%)</title><rect x="689.4" y="819.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="692.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.14%)</title><rect x="689.4" y="803.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="692.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (5 samples, 0.14%)</title><rect x="689.4" y="787.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="692.4" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="689.4" y="771.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="692.4" y="782.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (4 samples, 0.11%)</title><rect x="689.7" y="771.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="692.7" y="782.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.03%)</title><rect x="690.7" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="693.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (2 samples, 0.06%)</title><rect x="691.1" y="931.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="694.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (4 samples, 0.11%)</title><rect x="691.8" y="931.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="694.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.03%)</title><rect x="693.1" y="947.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="696.1" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.03%)</title><rect x="693.1" y="931.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.1" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.03%)</title><rect x="693.1" y="915.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (2 samples, 0.06%)</title><rect x="693.4" y="979.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="696.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (2 samples, 0.06%)</title><rect x="693.4" y="963.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="696.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (2 samples, 0.06%)</title><rect x="693.4" y="947.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="696.4" y="958.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.03%)</title><rect x="693.4" y="931.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="696.4" y="942.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="693.4" y="915.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="696.4" y="926.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="693.8" y="931.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="696.8" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="693.8" y="915.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="696.8" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/LoadRouter.selectNodeForKey (19 samples, 0.54%)</title><rect x="694.1" y="995.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="697.1" y="1006.0"></text>
</g>
<g>
<title>com/google/common/collect/TreeRangeMap.get (9 samples, 0.26%)</title><rect x="694.1" y="979.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="697.1" y="990.0"></text>
</g>
<g>
<title>com/google/common/collect/TreeRangeMap.getEntry (9 samples, 0.26%)</title><rect x="694.1" y="963.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.1" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.floorEntry (9 samples, 0.26%)</title><rect x="694.1" y="947.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="697.1" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFloorEntry (9 samples, 0.26%)</title><rect x="694.1" y="931.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="697.1" y="942.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (6 samples, 0.17%)</title><rect x="697.2" y="979.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="700.2" y="990.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (3 samples, 0.09%)</title><rect x="697.2" y="963.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.2" y="974.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction.newHasher (3 samples, 0.09%)</title><rect x="697.2" y="947.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.2" y="958.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="697.8" y="931.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="700.8" y="942.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.hash (3 samples, 0.09%)</title><rect x="698.2" y="963.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="701.2" y="974.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (3 samples, 0.09%)</title><rect x="698.2" y="947.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="701.2" y="958.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (3 samples, 0.09%)</title><rect x="698.2" y="931.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="701.2" y="942.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (3 samples, 0.09%)</title><rect x="698.2" y="915.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="701.2" y="926.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (3 samples, 0.09%)</title><rect x="698.2" y="899.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="701.2" y="910.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implDigest (3 samples, 0.09%)</title><rect x="698.2" y="883.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="701.2" y="894.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompress (3 samples, 0.09%)</title><rect x="698.2" y="867.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="701.2" y="878.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompressCheck (3 samples, 0.09%)</title><rect x="698.2" y="851.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="701.2" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="698.5" y="835.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="701.5" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.06%)</title><rect x="699.2" y="979.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="702.2" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.06%)</title><rect x="699.2" y="963.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="702.2" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.06%)</title><rect x="699.2" y="947.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="702.2" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.06%)</title><rect x="699.2" y="931.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.2" y="942.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.06%)</title><rect x="699.2" y="915.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="702.2" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/LoadRouter$Node.equals (2 samples, 0.06%)</title><rect x="699.9" y="979.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="702.9" y="990.0"></text>
</g>
<g>
<title>java/util/Objects.equals (2 samples, 0.06%)</title><rect x="699.9" y="963.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.9" y="974.0"></text>
</g>
<g>
<title>java/util/AbstractList.equals (2 samples, 0.06%)</title><rect x="699.9" y="947.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="702.9" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl$$Lambda$292/2012048222.run (340 samples, 9.72%)</title><rect x="700.5" y="1043.0" width="114.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="703.5" y="1054.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.lambda$entity$0 (336 samples, 9.61%)</title><rect x="701.9" y="1027.0" width="113.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="704.9" y="1038.0">ru/mail/polis/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (218 samples, 6.23%)</title><rect x="701.9" y="1011.0" width="73.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="704.9" y="1022.0">one/nio/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="702.2" y="995.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="705.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="702.2" y="979.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="705.2" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="702.2" y="963.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="705.2" y="974.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="702.2" y="947.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="705.2" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (213 samples, 6.09%)</title><rect x="702.6" y="995.0" width="71.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="705.6" y="1006.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.20%)</title><rect x="702.6" y="979.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="705.6" y="990.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.14%)</title><rect x="703.2" y="963.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="706.2" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.14%)</title><rect x="703.2" y="947.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="706.2" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.14%)</title><rect x="703.2" y="931.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="706.2" y="942.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.14%)</title><rect x="703.2" y="915.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="706.2" y="926.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="704.6" y="899.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="707.6" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (206 samples, 5.89%)</title><rect x="704.9" y="979.0" width="69.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="707.9" y="990.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.write (206 samples, 5.89%)</title><rect x="704.9" y="963.0" width="69.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="707.9" y="974.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (205 samples, 5.86%)</title><rect x="705.2" y="947.0" width="69.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="708.2" y="958.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (205 samples, 5.86%)</title><rect x="705.2" y="931.0" width="69.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="708.2" y="942.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.03%)</title><rect x="706.9" y="915.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="709.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.20%)</title><rect x="707.3" y="915.0" width="2.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="710.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.20%)</title><rect x="707.3" y="899.0" width="2.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="710.3" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.17%)</title><rect x="707.3" y="883.0" width="2.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="710.3" y="894.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (3 samples, 0.09%)</title><rect x="707.6" y="867.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="710.6" y="878.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.06%)</title><rect x="708.6" y="867.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="711.6" y="878.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="708.6" y="851.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="711.6" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.03%)</title><rect x="709.0" y="851.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="712.0" y="862.0"></text>
</g>
<g>
<title>__send (1 samples, 0.03%)</title><rect x="709.3" y="883.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="712.3" y="894.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="709.6" y="915.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="712.6" y="926.0"></text>
</g>
<g>
<title>__send (191 samples, 5.46%)</title><rect x="710.0" y="915.0" width="64.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="713.0" y="926.0">__send</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="712.3" y="899.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="715.3" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (183 samples, 5.23%)</title><rect x="712.7" y="899.0" width="61.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="715.7" y="910.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (183 samples, 5.23%)</title><rect x="712.7" y="883.0" width="61.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="715.7" y="894.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_sendto (177 samples, 5.06%)</title><rect x="714.0" y="867.0" width="59.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="717.0" y="878.0">__x64_..</text>
</g>
<g>
<title>__sys_sendto (176 samples, 5.03%)</title><rect x="714.4" y="851.0" width="59.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="717.4" y="862.0">__sys_..</text>
</g>
<g>
<title>sock_sendmsg (169 samples, 4.83%)</title><rect x="714.7" y="835.0" width="57.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="717.7" y="846.0">sock_s..</text>
</g>
<g>
<title>inet6_sendmsg (3 samples, 0.09%)</title><rect x="714.7" y="819.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="717.7" y="830.0"></text>
</g>
<g>
<title>inet_send_prepare (3 samples, 0.09%)</title><rect x="714.7" y="803.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="717.7" y="814.0"></text>
</g>
<g>
<title>tcp_sendmsg (166 samples, 4.75%)</title><rect x="715.7" y="819.0" width="56.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="718.7" y="830.0">tcp_s..</text>
</g>
<g>
<title>release_sock (2 samples, 0.06%)</title><rect x="716.4" y="803.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="719.4" y="814.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="716.7" y="787.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="719.7" y="798.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (162 samples, 4.63%)</title><rect x="717.1" y="803.0" width="54.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="720.1" y="814.0">tcp_s..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="717.1" y="787.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="720.1" y="798.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="717.1" y="771.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="720.1" y="782.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (138 samples, 3.95%)</title><rect x="717.4" y="787.0" width="46.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="720.4" y="798.0">__tc..</text>
</g>
<g>
<title>tcp_write_xmit (137 samples, 3.92%)</title><rect x="717.7" y="771.0" width="46.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="720.7" y="782.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (129 samples, 3.69%)</title><rect x="718.7" y="755.0" width="43.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="721.7" y="766.0">__tc..</text>
</g>
<g>
<title>__ip_queue_xmit (119 samples, 3.40%)</title><rect x="720.4" y="739.0" width="40.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="723.4" y="750.0">__i..</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.06%)</title><rect x="720.8" y="723.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="723.8" y="734.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="721.1" y="707.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="724.1" y="718.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.03%)</title><rect x="721.4" y="723.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="724.4" y="734.0"></text>
</g>
<g>
<title>ip_local_out (28 samples, 0.80%)</title><rect x="721.8" y="723.0" width="9.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="724.8" y="734.0"></text>
</g>
<g>
<title>__ip_local_out (28 samples, 0.80%)</title><rect x="721.8" y="707.0" width="9.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="724.8" y="718.0"></text>
</g>
<g>
<title>nf_hook_slow (26 samples, 0.74%)</title><rect x="722.5" y="691.0" width="8.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="725.5" y="702.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (1 samples, 0.03%)</title><rect x="723.8" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="726.8" y="686.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (2 samples, 0.06%)</title><rect x="724.1" y="675.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="727.1" y="686.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (1 samples, 0.03%)</title><rect x="724.8" y="675.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="727.8" y="686.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (14 samples, 0.40%)</title><rect x="725.2" y="675.0" width="4.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="728.2" y="686.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (6 samples, 0.17%)</title><rect x="725.8" y="659.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="728.8" y="670.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (1 samples, 0.03%)</title><rect x="727.9" y="659.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="730.9" y="670.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (4 samples, 0.11%)</title><rect x="728.2" y="659.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="731.2" y="670.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (1 samples, 0.03%)</title><rect x="729.2" y="643.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="732.2" y="654.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (1 samples, 0.03%)</title><rect x="729.5" y="659.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="732.5" y="670.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (4 samples, 0.11%)</title><rect x="729.9" y="675.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="732.9" y="686.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (1 samples, 0.03%)</title><rect x="729.9" y="659.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="732.9" y="670.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (1 samples, 0.03%)</title><rect x="730.2" y="659.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="733.2" y="670.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (2 samples, 0.06%)</title><rect x="730.5" y="659.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="733.5" y="670.0"></text>
</g>
<g>
<title>ip_output (87 samples, 2.49%)</title><rect x="731.2" y="723.0" width="29.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="734.2" y="734.0">ip..</text>
</g>
<g>
<title>ip_finish_output2 (84 samples, 2.40%)</title><rect x="731.2" y="707.0" width="28.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="734.2" y="718.0">ip..</text>
</g>
<g>
<title>__dev_queue_xmit (10 samples, 0.29%)</title><rect x="731.6" y="691.0" width="3.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="734.6" y="702.0"></text>
</g>
<g>
<title>debug_smp_processor_id (1 samples, 0.03%)</title><rect x="732.6" y="675.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="735.6" y="686.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.09%)</title><rect x="732.9" y="675.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="735.9" y="686.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.09%)</title><rect x="732.9" y="659.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="735.9" y="670.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.09%)</title><rect x="732.9" y="643.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="735.9" y="654.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.09%)</title><rect x="732.9" y="627.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="735.9" y="638.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.06%)</title><rect x="732.9" y="611.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="735.9" y="622.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="733.6" y="611.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="736.6" y="622.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.09%)</title><rect x="733.9" y="675.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="736.9" y="686.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="734.6" y="659.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="737.6" y="670.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.03%)</title><rect x="734.6" y="643.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="737.6" y="654.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (73 samples, 2.09%)</title><rect x="734.9" y="691.0" width="24.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="737.9" y="702.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (72 samples, 2.06%)</title><rect x="734.9" y="675.0" width="24.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="737.9" y="686.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (68 samples, 1.94%)</title><rect x="736.3" y="659.0" width="22.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="739.3" y="670.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (68 samples, 1.94%)</title><rect x="736.3" y="643.0" width="22.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="739.3" y="654.0">_..</text>
</g>
<g>
<title>net_rx_action (64 samples, 1.83%)</title><rect x="737.6" y="627.0" width="21.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="740.6" y="638.0">n..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="737.6" y="611.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="740.6" y="622.0"></text>
</g>
<g>
<title>process_backlog (63 samples, 1.80%)</title><rect x="738.0" y="611.0" width="21.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="741.0" y="622.0">p..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (60 samples, 1.72%)</title><rect x="739.0" y="595.0" width="20.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="742.0" y="606.0"></text>
</g>
<g>
<title>ip_rcv (60 samples, 1.72%)</title><rect x="739.0" y="579.0" width="20.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="742.0" y="590.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="739.3" y="563.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="742.3" y="574.0"></text>
</g>
<g>
<title>ip_local_deliver (53 samples, 1.52%)</title><rect x="739.7" y="563.0" width="17.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="742.7" y="574.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="739.7" y="547.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="742.7" y="558.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (50 samples, 1.43%)</title><rect x="740.0" y="547.0" width="16.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="743.0" y="558.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="740.0" y="531.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="743.0" y="542.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (49 samples, 1.40%)</title><rect x="740.3" y="531.0" width="16.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="743.3" y="542.0"></text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.09%)</title><rect x="740.3" y="515.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="743.3" y="526.0"></text>
</g>
<g>
<title>tcp_v4_rcv (46 samples, 1.32%)</title><rect x="741.3" y="515.0" width="15.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="744.3" y="526.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.11%)</title><rect x="742.4" y="499.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="745.4" y="510.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="743.4" y="483.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="746.4" y="494.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.06%)</title><rect x="743.7" y="499.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="746.7" y="510.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="743.7" y="483.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="746.7" y="494.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.03%)</title><rect x="744.0" y="483.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="747.0" y="494.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (37 samples, 1.06%)</title><rect x="744.4" y="499.0" width="12.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="747.4" y="510.0"></text>
</g>
<g>
<title>tcp_rcv_established (37 samples, 1.06%)</title><rect x="744.4" y="483.0" width="12.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="747.4" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.20%)</title><rect x="744.4" y="467.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="747.4" y="478.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.20%)</title><rect x="744.4" y="451.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="747.4" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.20%)</title><rect x="744.4" y="435.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="747.4" y="446.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="746.7" y="467.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="749.7" y="478.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="746.7" y="451.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="749.7" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="746.7" y="435.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="749.7" y="446.0"></text>
</g>
<g>
<title>tcp_ack (19 samples, 0.54%)</title><rect x="747.1" y="467.0" width="6.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="750.1" y="478.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.11%)</title><rect x="748.4" y="451.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="751.4" y="462.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="748.4" y="435.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="751.4" y="446.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.06%)</title><rect x="748.8" y="435.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="751.8" y="446.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="749.4" y="435.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="752.4" y="446.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.03%)</title><rect x="749.8" y="451.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="752.8" y="462.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.06%)</title><rect x="750.1" y="451.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="753.1" y="462.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.06%)</title><rect x="750.8" y="451.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="753.8" y="462.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.03%)</title><rect x="751.5" y="451.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="754.5" y="462.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.06%)</title><rect x="751.8" y="451.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="754.8" y="462.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.03%)</title><rect x="752.5" y="451.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="755.5" y="462.0"></text>
</g>
<g>
<title>tcp_sync_mss (2 samples, 0.06%)</title><rect x="752.8" y="451.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="755.8" y="462.0"></text>
</g>
<g>
<title>tcp_mtu_to_mss (1 samples, 0.03%)</title><rect x="753.2" y="435.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="756.2" y="446.0"></text>
</g>
<g>
<title>tcp_data_queue (9 samples, 0.26%)</title><rect x="753.5" y="467.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="756.5" y="478.0"></text>
</g>
<g>
<title>sock_def_readable (8 samples, 0.23%)</title><rect x="753.5" y="451.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="756.5" y="462.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.20%)</title><rect x="753.8" y="435.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="756.8" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.20%)</title><rect x="753.8" y="419.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="756.8" y="430.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.03%)</title><rect x="756.2" y="451.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="759.2" y="462.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.03%)</title><rect x="756.5" y="467.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="759.5" y="478.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="756.5" y="451.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="759.5" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.06%)</title><rect x="756.9" y="547.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="759.9" y="558.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (2 samples, 0.06%)</title><rect x="756.9" y="531.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="759.9" y="542.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="756.9" y="515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="759.9" y="526.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="756.9" y="499.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="759.9" y="510.0"></text>
</g>
<g>
<title>debug_smp_processor_id (1 samples, 0.03%)</title><rect x="757.2" y="515.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="760.2" y="526.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.03%)</title><rect x="757.5" y="563.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="760.5" y="574.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="757.9" y="563.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="760.9" y="574.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.09%)</title><rect x="758.2" y="563.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="761.2" y="574.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (1 samples, 0.03%)</title><rect x="758.2" y="547.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="761.2" y="558.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack] (1 samples, 0.03%)</title><rect x="758.5" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="761.5" y="558.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (1 samples, 0.03%)</title><rect x="758.9" y="547.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="761.9" y="558.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="759.2" y="675.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="762.2" y="686.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.03%)</title><rect x="759.6" y="707.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="762.6" y="718.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.06%)</title><rect x="759.9" y="707.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="762.9" y="718.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (1 samples, 0.03%)</title><rect x="760.2" y="691.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="763.2" y="702.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (4 samples, 0.11%)</title><rect x="760.6" y="739.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="763.6" y="750.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="761.9" y="739.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="764.9" y="750.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.09%)</title><rect x="762.3" y="755.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="765.3" y="766.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="762.6" y="739.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="765.6" y="750.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="762.6" y="723.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="765.6" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="762.6" y="707.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="765.6" y="718.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="762.9" y="739.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="765.9" y="750.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.06%)</title><rect x="763.3" y="755.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="766.3" y="766.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="763.6" y="739.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="766.6" y="750.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.06%)</title><rect x="763.9" y="787.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="766.9" y="798.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.06%)</title><rect x="763.9" y="771.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="766.9" y="782.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.06%)</title><rect x="763.9" y="755.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="766.9" y="766.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.06%)</title><rect x="764.6" y="787.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="767.6" y="798.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (12 samples, 0.34%)</title><rect x="765.3" y="787.0" width="4.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="768.3" y="798.0"></text>
</g>
<g>
<title>__alloc_skb (12 samples, 0.34%)</title><rect x="765.3" y="771.0" width="4.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="768.3" y="782.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (4 samples, 0.11%)</title><rect x="766.6" y="755.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="769.6" y="766.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.11%)</title><rect x="766.6" y="739.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="769.6" y="750.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.03%)</title><rect x="767.7" y="723.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="770.7" y="734.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.09%)</title><rect x="768.0" y="755.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="771.0" y="766.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="769.0" y="755.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="772.0" y="766.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.03%)</title><rect x="769.3" y="787.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="772.3" y="798.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.06%)</title><rect x="769.7" y="787.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="772.7" y="798.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.11%)</title><rect x="770.4" y="787.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="773.4" y="798.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.09%)</title><rect x="770.7" y="771.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="773.7" y="782.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.17%)</title><rect x="771.7" y="835.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="774.7" y="846.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.17%)</title><rect x="771.7" y="819.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="774.7" y="830.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.14%)</title><rect x="772.0" y="803.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="775.0" y="814.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="773.7" y="867.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="776.7" y="878.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.03%)</title><rect x="774.1" y="867.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="777.1" y="878.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="774.1" y="851.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="777.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.09%)</title><rect x="774.4" y="995.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="777.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.09%)</title><rect x="774.4" y="979.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="777.4" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.09%)</title><rect x="774.4" y="963.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.4" y="974.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="775.1" y="947.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="778.1" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/EntityWorker.responseProcessEntity (118 samples, 3.37%)</title><rect x="775.4" y="1011.0" width="39.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="778.4" y="1022.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="775.4" y="995.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.4" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="775.4" y="979.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="778.4" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="775.4" y="963.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="778.4" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="775.4" y="947.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="778.4" y="958.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="775.4" y="931.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="778.4" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="775.4" y="915.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="778.4" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="775.4" y="899.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="778.4" y="910.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="775.4" y="883.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="778.4" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.getRecord (111 samples, 3.17%)</title><rect x="775.8" y="995.0" width="37.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.8" y="1006.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (108 samples, 3.09%)</title><rect x="775.8" y="979.0" width="36.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="778.8" y="990.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (108 samples, 3.09%)</title><rect x="775.8" y="963.0" width="36.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="778.8" y="974.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (94 samples, 2.69%)</title><rect x="776.1" y="947.0" width="31.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="779.1" y="958.0">Ja..</text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.03%)</title><rect x="776.4" y="931.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="779.4" y="942.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.06%)</title><rect x="776.8" y="931.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="779.8" y="942.0"></text>
</g>
<g>
<title>_int_free (2 samples, 0.06%)</title><rect x="777.4" y="931.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="780.4" y="942.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.03%)</title><rect x="778.1" y="931.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="781.1" y="942.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (86 samples, 2.46%)</title><rect x="778.5" y="931.0" width="29.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="781.5" y="942.0">ro..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="779.1" y="915.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="782.1" y="926.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.06%)</title><rect x="779.5" y="915.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="782.5" y="926.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.06%)</title><rect x="780.1" y="915.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="783.1" y="926.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (68 samples, 1.94%)</title><rect x="780.8" y="915.0" width="23.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="783.8" y="926.0">r..</text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="780.8" y="899.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="783.8" y="910.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.03%)</title><rect x="781.1" y="899.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="784.1" y="910.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (64 samples, 1.83%)</title><rect x="781.5" y="899.0" width="21.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="784.5" y="910.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (62 samples, 1.77%)</title><rect x="782.2" y="883.0" width="20.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="785.2" y="894.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="782.2" y="867.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="785.2" y="878.0"></text>
</g>
<g>
<title>_init (3 samples, 0.09%)</title><rect x="782.5" y="867.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="785.5" y="878.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (2 samples, 0.06%)</title><rect x="783.5" y="867.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="786.5" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (55 samples, 1.57%)</title><rect x="784.2" y="867.0" width="18.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="787.2" y="878.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5993561685849609822.so (1 samples, 0.03%)</title><rect x="784.9" y="851.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="787.9" y="862.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.09%)</title><rect x="785.2" y="851.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="788.2" y="862.0"></text>
</g>
<g>
<title>_init (2 samples, 0.06%)</title><rect x="786.2" y="851.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="789.2" y="862.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (4 samples, 0.11%)</title><rect x="786.9" y="851.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="789.9" y="862.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.06%)</title><rect x="786.9" y="835.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="789.9" y="846.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.03%)</title><rect x="787.2" y="819.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="790.2" y="830.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (2 samples, 0.06%)</title><rect x="787.6" y="835.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="790.6" y="846.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.06%)</title><rect x="787.6" y="819.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="790.6" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (4 samples, 0.11%)</title><rect x="788.2" y="851.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="791.2" y="862.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.03%)</title><rect x="788.2" y="835.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="791.2" y="846.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.03%)</title><rect x="788.2" y="819.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="791.2" y="830.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.03%)</title><rect x="788.2" y="803.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="791.2" y="814.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.03%)</title><rect x="788.6" y="835.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="791.6" y="846.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (2 samples, 0.06%)</title><rect x="788.9" y="835.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="791.9" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (39 samples, 1.11%)</title><rect x="789.6" y="851.0" width="13.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="792.6" y="862.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5993561685849609822.so (37 samples, 1.06%)</title><rect x="789.9" y="835.0" width="12.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="792.9" y="846.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5993561685849609822.so (1 samples, 0.03%)</title><rect x="790.3" y="819.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="793.3" y="830.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="790.6" y="819.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="793.6" y="830.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (32 samples, 0.91%)</title><rect x="790.9" y="819.0" width="10.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="793.9" y="830.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="798.4" y="803.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="801.4" y="814.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (9 samples, 0.26%)</title><rect x="798.7" y="803.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="801.7" y="814.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5993561685849609822.so (2 samples, 0.06%)</title><rect x="799.7" y="787.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="802.7" y="798.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="800.4" y="787.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="803.4" y="798.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.06%)</title><rect x="800.7" y="787.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="803.7" y="798.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.03%)</title><rect x="801.4" y="787.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="804.4" y="798.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (2 samples, 0.06%)</title><rect x="801.7" y="819.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="804.7" y="830.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (1 samples, 0.03%)</title><rect x="802.4" y="835.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="805.4" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.03%)</title><rect x="802.7" y="867.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="805.7" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (2 samples, 0.06%)</title><rect x="803.1" y="899.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="806.1" y="910.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.06%)</title><rect x="803.8" y="915.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="806.8" y="926.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (9 samples, 0.26%)</title><rect x="804.4" y="915.0" width="3.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="807.4" y="926.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="804.4" y="899.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="807.4" y="910.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.03%)</title><rect x="804.8" y="899.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="807.8" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.03%)</title><rect x="804.8" y="883.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="807.8" y="894.0"></text>
</g>
<g>
<title>jni_NewByteArray (7 samples, 0.20%)</title><rect x="805.1" y="899.0" width="2.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="808.1" y="910.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.06%)</title><rect x="805.8" y="883.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="808.8" y="894.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.09%)</title><rect x="806.4" y="883.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="809.4" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.06%)</title><rect x="806.8" y="867.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="809.8" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.06%)</title><rect x="806.8" y="851.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="809.8" y="862.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="807.1" y="835.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="810.1" y="846.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.03%)</title><rect x="807.5" y="931.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="810.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="807.8" y="947.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="810.8" y="958.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (2 samples, 0.06%)</title><rect x="807.8" y="931.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="810.8" y="942.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.03%)</title><rect x="808.5" y="931.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="811.5" y="942.0"></text>
</g>
<g>
<title>__GI___libc_malloc (2 samples, 0.06%)</title><rect x="808.8" y="947.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="811.8" y="958.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.03%)</title><rect x="809.5" y="947.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="812.5" y="958.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="809.8" y="947.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="812.8" y="958.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (5 samples, 0.14%)</title><rect x="810.2" y="947.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="813.2" y="958.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.03%)</title><rect x="811.8" y="947.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="814.8" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORecord.fromBytes (3 samples, 0.09%)</title><rect x="812.2" y="979.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="815.2" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORecord.fromBytes (3 samples, 0.09%)</title><rect x="812.2" y="963.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="815.2" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getLong (3 samples, 0.09%)</title><rect x="812.2" y="947.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="815.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getLongUnaligned (3 samples, 0.09%)</title><rect x="812.2" y="931.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="815.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (2 samples, 0.06%)</title><rect x="812.5" y="915.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="815.5" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.upsertRecord (4 samples, 0.11%)</title><rect x="813.2" y="995.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="816.2" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORecord.toBytes (4 samples, 0.11%)</title><rect x="813.2" y="979.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="816.2" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.09%)</title><rect x="813.2" y="963.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="816.2" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.09%)</title><rect x="813.2" y="947.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="816.2" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.09%)</title><rect x="813.2" y="931.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="816.2" y="942.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.09%)</title><rect x="813.2" y="915.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="816.2" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putLong (1 samples, 0.03%)</title><rect x="814.2" y="963.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="817.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.putLongUnaligned (1 samples, 0.03%)</title><rect x="814.2" y="947.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="817.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (1 samples, 0.03%)</title><rect x="814.2" y="931.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="817.2" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORecord.toBytes (2 samples, 0.06%)</title><rect x="814.5" y="995.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="817.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (191 samples, 5.46%)</title><rect x="815.2" y="1091.0" width="64.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="818.2" y="1102.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (191 samples, 5.46%)</title><rect x="815.2" y="1075.0" width="64.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="818.2" y="1086.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (157 samples, 4.49%)</title><rect x="815.9" y="1059.0" width="53.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="818.9" y="1070.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (144 samples, 4.12%)</title><rect x="815.9" y="1043.0" width="48.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="818.9" y="1054.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (144 samples, 4.12%)</title><rect x="815.9" y="1027.0" width="48.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="818.9" y="1038.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (144 samples, 4.12%)</title><rect x="815.9" y="1011.0" width="48.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="818.9" y="1022.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (144 samples, 4.12%)</title><rect x="815.9" y="995.0" width="48.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="818.9" y="1006.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (136 samples, 3.89%)</title><rect x="817.6" y="979.0" width="45.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="820.6" y="990.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (136 samples, 3.89%)</title><rect x="817.6" y="963.0" width="45.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="820.6" y="974.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (127 samples, 3.63%)</title><rect x="817.9" y="947.0" width="42.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="820.9" y="958.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.06%)</title><rect x="818.3" y="931.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="821.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.06%)</title><rect x="818.3" y="915.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="821.3" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/CompletableFutureHelper$$Lambda$173/1222990715.accept (122 samples, 3.49%)</title><rect x="818.9" y="931.0" width="41.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="821.9" y="942.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/CompletableFutureHelper.lambda$whenComplete$0 (121 samples, 3.46%)</title><rect x="819.3" y="915.0" width="40.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="822.3" y="926.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (118 samples, 3.37%)</title><rect x="819.3" y="899.0" width="39.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="822.3" y="910.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (118 samples, 3.37%)</title><rect x="819.3" y="883.0" width="39.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="822.3" y="894.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (118 samples, 3.37%)</title><rect x="819.3" y="867.0" width="39.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="822.3" y="878.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.06%)</title><rect x="819.3" y="851.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="822.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.03%)</title><rect x="819.6" y="835.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="822.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (1 samples, 0.03%)</title><rect x="819.9" y="851.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="822.9" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="819.9" y="835.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="822.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl$$Lambda$176/2068010095.accept (115 samples, 3.29%)</title><rect x="820.3" y="851.0" width="38.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="823.3" y="862.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.lambda$executeEntityRequest$2 (115 samples, 3.29%)</title><rect x="820.3" y="835.0" width="38.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="823.3" y="846.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (95 samples, 2.72%)</title><rect x="820.6" y="819.0" width="32.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="823.6" y="830.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (92 samples, 2.63%)</title><rect x="821.6" y="803.0" width="31.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="824.6" y="814.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.14%)</title><rect x="822.0" y="787.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="825.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.06%)</title><rect x="823.0" y="771.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="826.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.06%)</title><rect x="823.0" y="755.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="826.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.06%)</title><rect x="823.0" y="739.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="826.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.06%)</title><rect x="823.0" y="723.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="826.0" y="734.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="823.3" y="707.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="826.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (86 samples, 2.46%)</title><rect x="823.7" y="787.0" width="29.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="826.7" y="798.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (86 samples, 2.46%)</title><rect x="823.7" y="771.0" width="29.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="826.7" y="782.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (86 samples, 2.46%)</title><rect x="823.7" y="755.0" width="29.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="826.7" y="766.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="823.7" y="739.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="826.7" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (85 samples, 2.43%)</title><rect x="824.0" y="739.0" width="28.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="827.0" y="750.0">on..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="824.0" y="723.0" width="1.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="827.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="824.0" y="707.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="827.0" y="718.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.09%)</title><rect x="824.0" y="691.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="827.0" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.06%)</title><rect x="824.0" y="675.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="827.0" y="686.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="824.7" y="675.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="827.7" y="686.0"></text>
</g>
<g>
<title>__send (82 samples, 2.34%)</title><rect x="825.0" y="723.0" width="27.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="828.0" y="734.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (81 samples, 2.32%)</title><rect x="825.3" y="707.0" width="27.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="828.3" y="718.0">e..</text>
</g>
<g>
<title>do_syscall_64 (81 samples, 2.32%)</title><rect x="825.3" y="691.0" width="27.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="828.3" y="702.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (79 samples, 2.26%)</title><rect x="825.3" y="675.0" width="26.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="828.3" y="686.0">_..</text>
</g>
<g>
<title>__sys_sendto (79 samples, 2.26%)</title><rect x="825.3" y="659.0" width="26.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="828.3" y="670.0">_..</text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="825.3" y="643.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="828.3" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (77 samples, 2.20%)</title><rect x="825.7" y="643.0" width="26.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="828.7" y="654.0">s..</text>
</g>
<g>
<title>tcp_sendmsg (77 samples, 2.20%)</title><rect x="825.7" y="627.0" width="26.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="828.7" y="638.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (77 samples, 2.20%)</title><rect x="825.7" y="611.0" width="26.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="828.7" y="622.0">t..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="826.0" y="595.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="829.0" y="606.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (69 samples, 1.97%)</title><rect x="826.4" y="595.0" width="23.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="829.4" y="606.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (69 samples, 1.97%)</title><rect x="826.4" y="579.0" width="23.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="829.4" y="590.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (62 samples, 1.77%)</title><rect x="826.7" y="563.0" width="20.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="829.7" y="574.0"></text>
</g>
<g>
<title>__ip_queue_xmit (59 samples, 1.69%)</title><rect x="827.0" y="547.0" width="19.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="830.0" y="558.0"></text>
</g>
<g>
<title>ip_local_out (12 samples, 0.34%)</title><rect x="827.7" y="531.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="830.7" y="542.0"></text>
</g>
<g>
<title>__ip_local_out (12 samples, 0.34%)</title><rect x="827.7" y="515.0" width="4.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="830.7" y="526.0"></text>
</g>
<g>
<title>nf_hook_slow (12 samples, 0.34%)</title><rect x="827.7" y="499.0" width="4.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="830.7" y="510.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.11%)</title><rect x="827.7" y="483.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="830.7" y="494.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (1 samples, 0.03%)</title><rect x="829.1" y="483.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="832.1" y="494.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (4 samples, 0.11%)</title><rect x="829.4" y="483.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="832.4" y="494.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (2 samples, 0.06%)</title><rect x="829.4" y="467.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="832.4" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (2 samples, 0.06%)</title><rect x="830.1" y="467.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="833.1" y="478.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="830.4" y="451.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="833.4" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (3 samples, 0.09%)</title><rect x="830.7" y="483.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="833.7" y="494.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (2 samples, 0.06%)</title><rect x="831.1" y="467.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="834.1" y="478.0"></text>
</g>
<g>
<title>ip_output (44 samples, 1.26%)</title><rect x="831.7" y="531.0" width="14.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="834.7" y="542.0"></text>
</g>
<g>
<title>ip_finish_output2 (38 samples, 1.09%)</title><rect x="832.1" y="515.0" width="12.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="835.1" y="526.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.17%)</title><rect x="832.4" y="499.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="835.4" y="510.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.09%)</title><rect x="832.8" y="483.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="835.8" y="494.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.09%)</title><rect x="832.8" y="467.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="835.8" y="478.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.09%)</title><rect x="832.8" y="451.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="835.8" y="462.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.09%)</title><rect x="832.8" y="435.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="835.8" y="446.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.03%)</title><rect x="832.8" y="419.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="835.8" y="430.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.03%)</title><rect x="833.1" y="419.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="836.1" y="430.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="833.4" y="419.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="836.4" y="430.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.06%)</title><rect x="833.8" y="483.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="836.8" y="494.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (31 samples, 0.89%)</title><rect x="834.4" y="499.0" width="10.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="837.4" y="510.0"></text>
</g>
<g>
<title>do_softirq.part.0 (31 samples, 0.89%)</title><rect x="834.4" y="483.0" width="10.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="837.4" y="494.0"></text>
</g>
<g>
<title>do_softirq_own_stack (30 samples, 0.86%)</title><rect x="834.8" y="467.0" width="10.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="837.8" y="478.0"></text>
</g>
<g>
<title>__softirqentry_text_start (30 samples, 0.86%)</title><rect x="834.8" y="451.0" width="10.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="837.8" y="462.0"></text>
</g>
<g>
<title>net_rx_action (30 samples, 0.86%)</title><rect x="834.8" y="435.0" width="10.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="837.8" y="446.0"></text>
</g>
<g>
<title>process_backlog (30 samples, 0.86%)</title><rect x="834.8" y="419.0" width="10.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="837.8" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (30 samples, 0.86%)</title><rect x="834.8" y="403.0" width="10.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="837.8" y="414.0"></text>
</g>
<g>
<title>ip_rcv (30 samples, 0.86%)</title><rect x="834.8" y="387.0" width="10.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="837.8" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver (24 samples, 0.69%)</title><rect x="835.1" y="371.0" width="8.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="838.1" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (24 samples, 0.69%)</title><rect x="835.1" y="355.0" width="8.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="838.1" y="366.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (24 samples, 0.69%)</title><rect x="835.1" y="339.0" width="8.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="838.1" y="350.0"></text>
</g>
<g>
<title>tcp_v4_rcv (24 samples, 0.69%)</title><rect x="835.1" y="323.0" width="8.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="838.1" y="334.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.09%)</title><rect x="835.5" y="307.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="838.5" y="318.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="836.5" y="307.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="839.5" y="318.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (19 samples, 0.54%)</title><rect x="836.8" y="307.0" width="6.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="839.8" y="318.0"></text>
</g>
<g>
<title>tcp_rcv_established (19 samples, 0.54%)</title><rect x="836.8" y="291.0" width="6.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="839.8" y="302.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="837.5" y="275.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="840.5" y="286.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="837.5" y="259.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="840.5" y="270.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="837.5" y="243.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="840.5" y="254.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 0.14%)</title><rect x="837.8" y="275.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="840.8" y="286.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.14%)</title><rect x="837.8" y="259.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="840.8" y="270.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.14%)</title><rect x="837.8" y="243.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="840.8" y="254.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.29%)</title><rect x="839.5" y="275.0" width="3.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="842.5" y="286.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.09%)</title><rect x="840.2" y="259.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="843.2" y="270.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.09%)</title><rect x="840.2" y="243.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="843.2" y="254.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.03%)</title><rect x="841.2" y="259.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="844.2" y="270.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="841.5" y="259.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="844.5" y="270.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="841.9" y="259.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="844.9" y="270.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.03%)</title><rect x="842.2" y="259.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="845.2" y="270.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.03%)</title><rect x="842.5" y="259.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="845.5" y="270.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.03%)</title><rect x="842.9" y="275.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="845.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="843.2" y="371.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="846.2" y="382.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.03%)</title><rect x="843.2" y="355.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="846.2" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.11%)</title><rect x="843.6" y="371.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="846.6" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (1 samples, 0.03%)</title><rect x="843.9" y="355.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="846.9" y="366.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack] (2 samples, 0.06%)</title><rect x="844.2" y="355.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="847.2" y="366.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.03%)</title><rect x="844.9" y="515.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="847.9" y="526.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="844.9" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="847.9" y="510.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.11%)</title><rect x="845.2" y="515.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="848.2" y="526.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (2 samples, 0.06%)</title><rect x="845.6" y="499.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="848.6" y="510.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (1 samples, 0.03%)</title><rect x="846.3" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="849.3" y="510.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.03%)</title><rect x="846.6" y="531.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="849.6" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.06%)</title><rect x="846.9" y="547.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="849.9" y="558.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="847.6" y="563.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="850.6" y="574.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="847.6" y="547.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="850.6" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.11%)</title><rect x="847.9" y="563.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="850.9" y="574.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.06%)</title><rect x="848.3" y="547.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="851.3" y="558.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.06%)</title><rect x="848.3" y="531.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="851.3" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.06%)</title><rect x="848.3" y="515.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="851.3" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="849.0" y="547.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="852.0" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="849.3" y="563.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="852.3" y="574.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.03%)</title><rect x="849.6" y="595.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="852.6" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.06%)</title><rect x="850.0" y="595.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="853.0" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.06%)</title><rect x="850.0" y="579.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="853.0" y="590.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.06%)</title><rect x="850.0" y="563.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="853.0" y="574.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.06%)</title><rect x="850.6" y="595.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="853.6" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.03%)</title><rect x="851.3" y="595.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="854.3" y="606.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.03%)</title><rect x="851.3" y="579.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="854.3" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="851.3" y="563.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="854.3" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="851.7" y="643.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="854.7" y="654.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="851.7" y="627.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="854.7" y="638.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="851.7" y="611.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="854.7" y="622.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.06%)</title><rect x="852.0" y="675.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="855.0" y="686.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="852.3" y="659.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="855.3" y="670.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="852.3" y="643.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="855.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/EntityWorker.makeResponse (19 samples, 0.54%)</title><rect x="852.7" y="819.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="855.7" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableSet.of (9 samples, 0.26%)</title><rect x="853.0" y="803.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="856.0" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableSet.construct (9 samples, 0.26%)</title><rect x="853.0" y="787.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="856.0" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableSet$RegularSetBuilderImpl.&lt;init&gt; (3 samples, 0.09%)</title><rect x="853.0" y="771.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="856.0" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableSet$SetBuilderImpl.&lt;init&gt; (1 samples, 0.03%)</title><rect x="853.0" y="755.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="856.0" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableSet.maxRunBeforeFallback (2 samples, 0.06%)</title><rect x="853.3" y="755.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="856.3" y="766.0"></text>
</g>
<g>
<title>com/google/common/math/IntMath.log2 (2 samples, 0.06%)</title><rect x="853.3" y="739.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="856.3" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableSet$RegularSetBuilderImpl.add (2 samples, 0.06%)</title><rect x="854.0" y="771.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="857.0" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Hashing.smear (1 samples, 0.03%)</title><rect x="854.4" y="755.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="857.4" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableSet$RegularSetBuilderImpl.review (4 samples, 0.11%)</title><rect x="854.7" y="771.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="857.7" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableSet.chooseTableSize (2 samples, 0.06%)</title><rect x="854.7" y="755.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="857.7" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableSet.hashFloodingDetected (2 samples, 0.06%)</title><rect x="855.4" y="755.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="858.4" y="766.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2 samples, 0.06%)</title><rect x="856.0" y="803.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="859.0" y="814.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.09%)</title><rect x="856.7" y="803.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="859.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.spliterator (2 samples, 0.06%)</title><rect x="856.7" y="787.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="859.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.getArray (2 samples, 0.06%)</title><rect x="856.7" y="771.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="859.7" y="782.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.03%)</title><rect x="857.4" y="787.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="860.4" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.03%)</title><rect x="857.4" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="860.4" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="857.4" y="755.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="860.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="857.4" y="739.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="860.4" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.count (1 samples, 0.03%)</title><rect x="857.7" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="860.7" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.03%)</title><rect x="857.7" y="787.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="860.7" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$5.evaluateSequential (1 samples, 0.03%)</title><rect x="857.7" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="860.7" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$5.evaluateSequential (1 samples, 0.03%)</title><rect x="857.7" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="860.7" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.03%)</title><rect x="857.7" y="739.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="860.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.03%)</title><rect x="857.7" y="723.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="860.7" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.03%)</title><rect x="857.7" y="707.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="860.7" y="718.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (1 samples, 0.03%)</title><rect x="857.7" y="691.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="860.7" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.03%)</title><rect x="857.7" y="675.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="860.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteArrayUtils.getArrayFromByteBuffer (3 samples, 0.09%)</title><rect x="858.1" y="803.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="861.1" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.09%)</title><rect x="858.1" y="787.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="861.1" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="858.7" y="771.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="861.7" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="858.7" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="861.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (3 samples, 0.09%)</title><rect x="859.1" y="899.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="862.1" y="910.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="859.4" y="883.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="862.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.getArray (1 samples, 0.03%)</title><rect x="859.7" y="883.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="862.7" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl$$Lambda$176/2068010095.accept (2 samples, 0.06%)</title><rect x="860.1" y="931.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="863.1" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.lambda$executeEntityRequest$2 (2 samples, 0.06%)</title><rect x="860.1" y="915.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="863.1" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/EntityWorker.makeResponse (2 samples, 0.06%)</title><rect x="860.1" y="899.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="863.1" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (2 samples, 0.06%)</title><rect x="860.1" y="883.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="863.1" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (2 samples, 0.06%)</title><rect x="860.1" y="867.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="863.1" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (2 samples, 0.06%)</title><rect x="860.1" y="851.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="863.1" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (2 samples, 0.06%)</title><rect x="860.1" y="835.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="863.1" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (2 samples, 0.06%)</title><rect x="860.1" y="819.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="863.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (6 samples, 0.17%)</title><rect x="860.8" y="947.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="863.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (4 samples, 0.11%)</title><rect x="861.1" y="931.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="864.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (4 samples, 0.11%)</title><rect x="861.1" y="915.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="864.1" y="926.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.06%)</title><rect x="861.1" y="899.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="864.1" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/EntityWorker$$Lambda$172/1747943695.apply (2 samples, 0.06%)</title><rect x="861.8" y="899.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="864.8" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/EntityWorker$$Lambda$172/1747943695.apply (1 samples, 0.03%)</title><rect x="862.4" y="931.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="865.4" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ResponseRepresentation.create (1 samples, 0.03%)</title><rect x="862.4" y="915.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="865.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (1 samples, 0.03%)</title><rect x="862.8" y="947.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="865.8" y="958.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="863.1" y="947.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="866.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.09%)</title><rect x="863.5" y="979.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="866.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.09%)</title><rect x="863.5" y="963.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="866.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.09%)</title><rect x="863.5" y="947.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="866.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.09%)</title><rect x="863.5" y="931.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="866.5" y="942.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (3 samples, 0.09%)</title><rect x="863.5" y="915.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="866.5" y="926.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (3 samples, 0.09%)</title><rect x="863.5" y="899.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="866.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (3 samples, 0.09%)</title><rect x="863.5" y="883.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="866.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$171/1581053258.accept (1 samples, 0.03%)</title><rect x="864.1" y="867.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="867.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (13 samples, 0.37%)</title><rect x="864.5" y="1043.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="867.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.37%)</title><rect x="864.5" y="1027.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="867.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.09%)</title><rect x="867.8" y="1011.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="870.8" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.03%)</title><rect x="867.8" y="995.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="870.8" y="1006.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="867.8" y="979.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="870.8" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.06%)</title><rect x="868.2" y="995.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="871.2" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="868.2" y="979.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="871.2" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.06%)</title><rect x="868.2" y="963.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="871.2" y="974.0"></text>
</g>
<g>
<title>__se_sys_futex (1 samples, 0.03%)</title><rect x="868.2" y="947.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="871.2" y="958.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="868.2" y="931.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="871.2" y="942.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="868.2" y="915.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="871.2" y="926.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="868.2" y="899.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="871.2" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="868.2" y="883.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="871.2" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="868.2" y="867.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="871.2" y="878.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.03%)</title><rect x="868.5" y="947.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="871.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.06%)</title><rect x="868.9" y="1059.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="871.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.06%)</title><rect x="868.9" y="1043.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="871.9" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.06%)</title><rect x="868.9" y="1027.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="871.9" y="1038.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.03%)</title><rect x="869.2" y="1011.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="872.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (30 samples, 0.86%)</title><rect x="869.5" y="1059.0" width="10.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="872.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (30 samples, 0.86%)</title><rect x="869.5" y="1043.0" width="10.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="872.5" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.14%)</title><rect x="869.5" y="1027.0" width="1.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="872.5" y="1038.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="869.5" y="1011.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="872.5" y="1022.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.09%)</title><rect x="869.9" y="1011.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="872.9" y="1022.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 0.06%)</title><rect x="870.2" y="995.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="873.2" y="1006.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.06%)</title><rect x="870.2" y="979.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="873.2" y="990.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.06%)</title><rect x="870.2" y="963.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="873.2" y="974.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.03%)</title><rect x="870.9" y="1011.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="873.9" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="870.9" y="995.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="873.9" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="870.9" y="979.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="873.9" y="990.0"></text>
</g>
<g>
<title>__se_sys_futex (1 samples, 0.03%)</title><rect x="870.9" y="963.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="873.9" y="974.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="870.9" y="947.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="873.9" y="958.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="870.9" y="931.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="873.9" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.03%)</title><rect x="870.9" y="915.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="873.9" y="926.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="870.9" y="899.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="873.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.71%)</title><rect x="871.2" y="1027.0" width="8.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="874.2" y="1038.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="871.2" y="1011.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="874.2" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (24 samples, 0.69%)</title><rect x="871.6" y="1011.0" width="8.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="874.6" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.69%)</title><rect x="871.6" y="995.0" width="8.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="874.6" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.69%)</title><rect x="871.6" y="979.0" width="8.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="874.6" y="990.0"></text>
</g>
<g>
<title>__se_sys_futex (19 samples, 0.54%)</title><rect x="872.2" y="963.0" width="6.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="875.2" y="974.0"></text>
</g>
<g>
<title>do_futex (18 samples, 0.51%)</title><rect x="872.2" y="947.0" width="6.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="875.2" y="958.0"></text>
</g>
<g>
<title>futex_wait (18 samples, 0.51%)</title><rect x="872.2" y="931.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="875.2" y="942.0"></text>
</g>
<g>
<title>futex_wait_queue_me (10 samples, 0.29%)</title><rect x="872.6" y="915.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="875.6" y="926.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (6 samples, 0.17%)</title><rect x="873.2" y="899.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="876.2" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.17%)</title><rect x="873.2" y="883.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="876.2" y="894.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.06%)</title><rect x="875.3" y="899.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="878.3" y="910.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.06%)</title><rect x="875.3" y="883.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="878.3" y="894.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.14%)</title><rect x="875.9" y="915.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="878.9" y="926.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="876.3" y="899.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="879.3" y="910.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.03%)</title><rect x="876.3" y="883.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="879.3" y="894.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.06%)</title><rect x="876.6" y="899.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="879.6" y="910.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="877.3" y="899.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="880.3" y="910.0"></text>
</g>
<g>
<title>hrtimer_init_sleeper (1 samples, 0.03%)</title><rect x="877.6" y="915.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="880.6" y="926.0"></text>
</g>
<g>
<title>ktime_add_safe (1 samples, 0.03%)</title><rect x="878.0" y="915.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="881.0" y="926.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.03%)</title><rect x="878.3" y="947.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="881.3" y="958.0"></text>
</g>
<g>
<title>syscall_trace_enter (3 samples, 0.09%)</title><rect x="878.6" y="963.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="881.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (592 samples, 16.92%)</title><rect x="879.7" y="1091.0" width="199.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="882.7" y="1102.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>java/util/ArrayList.clear (4 samples, 0.11%)</title><rect x="881.7" y="1075.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="884.7" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (243 samples, 6.95%)</title><rect x="883.0" y="1075.0" width="82.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="886.0" y="1086.0">java/util..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$268/623398300.accept (234 samples, 6.69%)</title><rect x="883.0" y="1059.0" width="79.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="886.0" y="1070.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (234 samples, 6.69%)</title><rect x="883.0" y="1043.0" width="79.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="886.0" y="1054.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (234 samples, 6.69%)</title><rect x="883.0" y="1027.0" width="79.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="886.0" y="1038.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (234 samples, 6.69%)</title><rect x="883.0" y="1011.0" width="79.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="886.0" y="1022.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (234 samples, 6.69%)</title><rect x="883.0" y="995.0" width="79.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="886.0" y="1006.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.09%)</title><rect x="883.0" y="979.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="886.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.06%)</title><rect x="883.4" y="963.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="886.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.03%)</title><rect x="883.4" y="947.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="886.4" y="958.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.03%)</title><rect x="883.4" y="931.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="886.4" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.03%)</title><rect x="883.4" y="915.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="886.4" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.03%)</title><rect x="883.4" y="899.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="886.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.channel (1 samples, 0.03%)</title><rect x="883.7" y="947.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="886.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (231 samples, 6.60%)</title><rect x="884.0" y="979.0" width="78.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="887.0" y="990.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (231 samples, 6.60%)</title><rect x="884.0" y="963.0" width="78.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="887.0" y="974.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (231 samples, 6.60%)</title><rect x="884.0" y="947.0" width="78.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="887.0" y="958.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (231 samples, 6.60%)</title><rect x="884.0" y="931.0" width="78.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="887.0" y="942.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (225 samples, 6.43%)</title><rect x="886.1" y="915.0" width="75.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="889.1" y="926.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$200/519588060.run (224 samples, 6.40%)</title><rect x="886.4" y="899.0" width="75.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="889.4" y="910.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (224 samples, 6.40%)</title><rect x="886.4" y="883.0" width="75.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="889.4" y="894.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (54 samples, 1.54%)</title><rect x="886.4" y="867.0" width="18.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="889.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (53 samples, 1.52%)</title><rect x="886.7" y="851.0" width="17.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="889.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (53 samples, 1.52%)</title><rect x="886.7" y="835.0" width="17.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="889.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (53 samples, 1.52%)</title><rect x="886.7" y="819.0" width="17.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="889.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (53 samples, 1.52%)</title><rect x="886.7" y="803.0" width="17.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="889.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (49 samples, 1.40%)</title><rect x="888.1" y="787.0" width="16.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="891.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (49 samples, 1.40%)</title><rect x="888.1" y="771.0" width="16.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="891.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (49 samples, 1.40%)</title><rect x="888.1" y="755.0" width="16.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="891.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (49 samples, 1.40%)</title><rect x="888.1" y="739.0" width="16.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="891.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (49 samples, 1.40%)</title><rect x="888.1" y="723.0" width="16.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="891.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (49 samples, 1.40%)</title><rect x="888.1" y="707.0" width="16.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="891.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (48 samples, 1.37%)</title><rect x="888.4" y="691.0" width="16.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="891.4" y="702.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.03%)</title><rect x="888.8" y="675.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="891.8" y="686.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.14%)</title><rect x="889.1" y="675.0" width="1.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="892.1" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="889.4" y="659.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="892.4" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="889.8" y="659.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="892.8" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="890.1" y="659.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="893.1" y="670.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.03%)</title><rect x="890.4" y="659.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="893.4" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (40 samples, 1.14%)</title><rect x="890.8" y="675.0" width="13.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="893.8" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 1.00%)</title><rect x="892.5" y="659.0" width="11.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="895.5" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (35 samples, 1.00%)</title><rect x="892.5" y="643.0" width="11.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="895.5" y="654.0"></text>
</g>
<g>
<title>__se_sys_futex (35 samples, 1.00%)</title><rect x="892.5" y="627.0" width="11.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="895.5" y="638.0"></text>
</g>
<g>
<title>do_futex (35 samples, 1.00%)</title><rect x="892.5" y="611.0" width="11.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="895.5" y="622.0"></text>
</g>
<g>
<title>futex_wake (35 samples, 1.00%)</title><rect x="892.5" y="595.0" width="11.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="895.5" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.06%)</title><rect x="894.2" y="579.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="897.2" y="590.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="894.5" y="563.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="897.5" y="574.0"></text>
</g>
<g>
<title>wake_up_q (28 samples, 0.80%)</title><rect x="894.8" y="579.0" width="9.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="897.8" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (28 samples, 0.80%)</title><rect x="894.8" y="563.0" width="9.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="897.8" y="574.0"></text>
</g>
<g>
<title>___preempt_schedule (1 samples, 0.03%)</title><rect x="894.8" y="547.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="897.8" y="558.0"></text>
</g>
<g>
<title>preempt_schedule_common (1 samples, 0.03%)</title><rect x="894.8" y="531.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="897.8" y="542.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="894.8" y="515.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="897.8" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (27 samples, 0.77%)</title><rect x="895.2" y="547.0" width="9.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="898.2" y="558.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.03%)</title><rect x="904.3" y="675.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="907.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (2 samples, 0.06%)</title><rect x="904.6" y="867.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="907.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.06%)</title><rect x="905.3" y="867.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="908.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2 samples, 0.06%)</title><rect x="905.3" y="851.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="908.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.06%)</title><rect x="905.3" y="835.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="908.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.06%)</title><rect x="905.3" y="819.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="908.3" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.03%)</title><rect x="905.6" y="803.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="908.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (166 samples, 4.75%)</title><rect x="906.0" y="867.0" width="56.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="909.0" y="878.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (3 samples, 0.09%)</title><rect x="906.3" y="851.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="909.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$197/2052557092.get (1 samples, 0.03%)</title><rect x="907.0" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="910.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (1 samples, 0.03%)</title><rect x="907.0" y="819.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="910.0" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="907.0" y="803.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="910.0" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="907.0" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="910.0" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="907.0" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="910.0" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="907.0" y="755.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="910.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (162 samples, 4.63%)</title><rect x="907.3" y="851.0" width="54.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="910.3" y="862.0">sun/n..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="907.7" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="910.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="907.7" y="819.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="910.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="907.7" y="803.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="910.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.03%)</title><rect x="907.7" y="787.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="910.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.03%)</title><rect x="907.7" y="771.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="910.7" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (160 samples, 4.57%)</title><rect x="908.0" y="835.0" width="54.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="911.0" y="846.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (160 samples, 4.57%)</title><rect x="908.0" y="819.0" width="54.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="911.0" y="830.0">sun/n..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (7 samples, 0.20%)</title><rect x="908.0" y="803.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="911.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.20%)</title><rect x="908.0" y="787.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="911.0" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.20%)</title><rect x="908.0" y="771.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="911.0" y="782.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="908.7" y="755.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="911.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (3 samples, 0.09%)</title><rect x="909.0" y="755.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="912.0" y="766.0"></text>
</g>
<g>
<title>unsafe_arraycopy (1 samples, 0.03%)</title><rect x="910.0" y="755.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="913.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (152 samples, 4.35%)</title><rect x="910.3" y="803.0" width="51.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="913.3" y="814.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (152 samples, 4.35%)</title><rect x="910.3" y="787.0" width="51.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="913.3" y="798.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (143 samples, 4.09%)</title><rect x="913.4" y="771.0" width="48.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="916.4" y="782.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.03%)</title><rect x="913.7" y="755.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="916.7" y="766.0"></text>
</g>
<g>
<title>__errno_location (2 samples, 0.06%)</title><rect x="914.1" y="755.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="917.1" y="766.0"></text>
</g>
<g>
<title>__libc_read (136 samples, 3.89%)</title><rect x="914.7" y="755.0" width="45.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="917.7" y="766.0">__li..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="916.4" y="739.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="919.4" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (130 samples, 3.72%)</title><rect x="916.8" y="739.0" width="43.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="919.8" y="750.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (130 samples, 3.72%)</title><rect x="916.8" y="723.0" width="43.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="919.8" y="734.0">do_s..</text>
</g>
<g>
<title>ksys_read (118 samples, 3.37%)</title><rect x="919.5" y="707.0" width="39.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="922.5" y="718.0">ksy..</text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.09%)</title><rect x="919.8" y="691.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="922.8" y="702.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.09%)</title><rect x="919.8" y="675.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="922.8" y="686.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.06%)</title><rect x="920.1" y="659.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="923.1" y="670.0"></text>
</g>
<g>
<title>vfs_read (114 samples, 3.26%)</title><rect x="920.8" y="691.0" width="38.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="923.8" y="702.0">vfs..</text>
</g>
<g>
<title>new_sync_read (110 samples, 3.14%)</title><rect x="921.5" y="675.0" width="37.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="924.5" y="686.0">new..</text>
</g>
<g>
<title>sock_read_iter (109 samples, 3.12%)</title><rect x="921.8" y="659.0" width="36.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="924.8" y="670.0">soc..</text>
</g>
<g>
<title>inet6_recvmsg (107 samples, 3.06%)</title><rect x="922.5" y="643.0" width="36.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="925.5" y="654.0">ine..</text>
</g>
<g>
<title>tcp_recvmsg (107 samples, 3.06%)</title><rect x="922.5" y="627.0" width="36.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="925.5" y="638.0">tcp..</text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="923.8" y="611.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="926.8" y="622.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="923.8" y="595.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="926.8" y="606.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="923.8" y="579.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="926.8" y="590.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.03%)</title><rect x="923.8" y="563.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="926.8" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="924.2" y="611.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="927.2" y="622.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.03%)</title><rect x="924.2" y="595.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="927.2" y="606.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (3 samples, 0.09%)</title><rect x="924.5" y="611.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="927.5" y="622.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.09%)</title><rect x="924.5" y="595.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="927.5" y="606.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.03%)</title><rect x="924.9" y="579.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="927.9" y="590.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.03%)</title><rect x="924.9" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="927.9" y="574.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="925.2" y="579.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="928.2" y="590.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (88 samples, 2.52%)</title><rect x="925.5" y="611.0" width="29.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="928.5" y="622.0">__..</text>
</g>
<g>
<title>__ip_queue_xmit (80 samples, 2.29%)</title><rect x="928.2" y="595.0" width="27.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="931.2" y="606.0">_..</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.06%)</title><rect x="928.2" y="579.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="931.2" y="590.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="928.6" y="563.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="931.6" y="574.0"></text>
</g>
<g>
<title>ip_local_out (26 samples, 0.74%)</title><rect x="928.9" y="579.0" width="8.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="931.9" y="590.0"></text>
</g>
<g>
<title>__ip_local_out (26 samples, 0.74%)</title><rect x="928.9" y="563.0" width="8.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="931.9" y="574.0"></text>
</g>
<g>
<title>nf_hook_slow (25 samples, 0.71%)</title><rect x="929.2" y="547.0" width="8.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="932.2" y="558.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.17%)</title><rect x="929.9" y="531.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="932.9" y="542.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="931.6" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="934.6" y="526.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="931.6" y="499.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="934.6" y="510.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (1 samples, 0.03%)</title><rect x="931.9" y="531.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="934.9" y="542.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (15 samples, 0.43%)</title><rect x="932.3" y="531.0" width="5.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="935.3" y="542.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (3 samples, 0.09%)</title><rect x="933.6" y="515.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="936.6" y="526.0"></text>
</g>
<g>
<title>hash_conntrack_raw.isra.0	[nf_conntrack] (1 samples, 0.03%)</title><rect x="934.6" y="515.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="937.6" y="526.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (7 samples, 0.20%)</title><rect x="935.0" y="515.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="938.0" y="526.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="936.0" y="499.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="939.0" y="510.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="936.0" y="483.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="939.0" y="494.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (3 samples, 0.09%)</title><rect x="936.3" y="499.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="939.3" y="510.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (1 samples, 0.03%)</title><rect x="937.3" y="531.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="940.3" y="542.0"></text>
</g>
<g>
<title>ip_output (52 samples, 1.49%)</title><rect x="937.7" y="579.0" width="17.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="940.7" y="590.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.03%)</title><rect x="938.0" y="563.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="941.0" y="574.0"></text>
</g>
<g>
<title>ip_finish_output2 (48 samples, 1.37%)</title><rect x="938.3" y="563.0" width="16.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="941.3" y="574.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.14%)</title><rect x="939.0" y="547.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="942.0" y="558.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.09%)</title><rect x="939.0" y="531.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="942.0" y="542.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.06%)</title><rect x="939.4" y="515.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="942.4" y="526.0"></text>
</g>
<g>
<title>__sock_wfree (1 samples, 0.03%)</title><rect x="939.7" y="499.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="942.7" y="510.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.06%)</title><rect x="940.0" y="531.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="943.0" y="542.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="940.4" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="943.4" y="526.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (40 samples, 1.14%)</title><rect x="940.7" y="547.0" width="13.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="943.7" y="558.0"></text>
</g>
<g>
<title>do_softirq.part.0 (40 samples, 1.14%)</title><rect x="940.7" y="531.0" width="13.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="943.7" y="542.0"></text>
</g>
<g>
<title>do_softirq_own_stack (38 samples, 1.09%)</title><rect x="941.4" y="515.0" width="12.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="944.4" y="526.0"></text>
</g>
<g>
<title>__softirqentry_text_start (38 samples, 1.09%)</title><rect x="941.4" y="499.0" width="12.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="944.4" y="510.0"></text>
</g>
<g>
<title>net_rx_action (37 samples, 1.06%)</title><rect x="941.7" y="483.0" width="12.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="944.7" y="494.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="942.1" y="467.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="945.1" y="478.0"></text>
</g>
<g>
<title>process_backlog (35 samples, 1.00%)</title><rect x="942.4" y="467.0" width="11.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="945.4" y="478.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (34 samples, 0.97%)</title><rect x="942.7" y="451.0" width="11.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="945.7" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="942.7" y="435.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="945.7" y="446.0"></text>
</g>
<g>
<title>ip_rcv (33 samples, 0.94%)</title><rect x="943.1" y="435.0" width="11.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="946.1" y="446.0"></text>
</g>
<g>
<title>ip_local_deliver (27 samples, 0.77%)</title><rect x="943.1" y="419.0" width="9.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="946.1" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (23 samples, 0.66%)</title><rect x="943.1" y="403.0" width="7.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="946.1" y="414.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (23 samples, 0.66%)</title><rect x="943.1" y="387.0" width="7.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="946.1" y="398.0"></text>
</g>
<g>
<title>tcp_v4_rcv (23 samples, 0.66%)</title><rect x="943.1" y="371.0" width="7.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="946.1" y="382.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.09%)</title><rect x="943.1" y="355.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="946.1" y="366.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.06%)</title><rect x="943.1" y="339.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="946.1" y="350.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.03%)</title><rect x="943.7" y="339.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="946.7" y="350.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (20 samples, 0.57%)</title><rect x="944.1" y="355.0" width="6.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="947.1" y="366.0"></text>
</g>
<g>
<title>tcp_rcv_established (20 samples, 0.57%)</title><rect x="944.1" y="339.0" width="6.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="947.1" y="350.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="944.8" y="323.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="947.8" y="334.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="944.8" y="307.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="947.8" y="318.0"></text>
</g>
<g>
<title>tcp_ack (17 samples, 0.49%)</title><rect x="945.1" y="323.0" width="5.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="948.1" y="334.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.09%)</title><rect x="947.1" y="307.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="950.1" y="318.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="947.1" y="291.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="950.1" y="302.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.06%)</title><rect x="947.5" y="291.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="950.5" y="302.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.03%)</title><rect x="948.1" y="307.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="951.1" y="318.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (4 samples, 0.11%)</title><rect x="948.5" y="307.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="951.5" y="318.0"></text>
</g>
<g>
<title>jiffies_to_usecs (3 samples, 0.09%)</title><rect x="948.8" y="291.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="951.8" y="302.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.09%)</title><rect x="949.8" y="307.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="952.8" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.11%)</title><rect x="950.8" y="403.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="953.8" y="414.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.09%)</title><rect x="950.8" y="387.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="953.8" y="398.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (1 samples, 0.03%)</title><rect x="951.8" y="387.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="954.8" y="398.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="952.2" y="419.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="955.2" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.14%)</title><rect x="952.5" y="419.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="955.5" y="430.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (2 samples, 0.06%)</title><rect x="952.5" y="403.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="955.5" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack] (1 samples, 0.03%)</title><rect x="953.2" y="403.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="956.2" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (1 samples, 0.03%)</title><rect x="953.5" y="403.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="956.5" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (1 samples, 0.03%)</title><rect x="953.9" y="403.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="956.9" y="414.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (1 samples, 0.03%)</title><rect x="953.9" y="387.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="956.9" y="398.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="954.2" y="547.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="957.2" y="558.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.06%)</title><rect x="954.5" y="563.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="957.5" y="574.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (2 samples, 0.06%)</title><rect x="954.5" y="547.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="957.5" y="558.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (2 samples, 0.06%)</title><rect x="954.5" y="531.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="957.5" y="542.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="954.9" y="515.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="957.9" y="526.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.09%)</title><rect x="955.2" y="611.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="958.2" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.06%)</title><rect x="955.6" y="595.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="958.6" y="606.0"></text>
</g>
<g>
<title>preempt_count_add (2 samples, 0.06%)</title><rect x="955.6" y="579.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="958.6" y="590.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="956.2" y="611.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="959.2" y="622.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.14%)</title><rect x="956.6" y="611.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="959.6" y="622.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.11%)</title><rect x="956.9" y="595.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="959.9" y="606.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.03%)</title><rect x="956.9" y="579.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="959.9" y="590.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.03%)</title><rect x="956.9" y="563.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="959.9" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="956.9" y="547.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="959.9" y="558.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.09%)</title><rect x="957.2" y="579.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="960.2" y="590.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.09%)</title><rect x="957.2" y="563.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="960.2" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.06%)</title><rect x="957.6" y="547.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="960.6" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.03%)</title><rect x="958.3" y="611.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="961.3" y="622.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.06%)</title><rect x="958.6" y="675.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="961.6" y="686.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.06%)</title><rect x="958.6" y="659.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="961.6" y="670.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.03%)</title><rect x="959.3" y="707.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="962.3" y="718.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="959.3" y="691.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="962.3" y="702.0"></text>
</g>
<g>
<title>syscall_trace_enter (3 samples, 0.09%)</title><rect x="959.6" y="707.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="962.6" y="718.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.06%)</title><rect x="959.9" y="691.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="962.9" y="702.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="960.6" y="755.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="963.6" y="766.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.03%)</title><rect x="960.9" y="755.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="963.9" y="766.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="961.3" y="755.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="964.3" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="961.6" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="964.6" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="961.6" y="787.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="964.6" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.03%)</title><rect x="961.6" y="771.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="964.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.03%)</title><rect x="961.6" y="755.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="964.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$278/194861799.accept (9 samples, 0.26%)</title><rect x="962.0" y="1059.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="965.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (9 samples, 0.26%)</title><rect x="962.0" y="1043.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="965.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$267/1410556301.run (9 samples, 0.26%)</title><rect x="962.0" y="1027.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="965.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (9 samples, 0.26%)</title><rect x="962.0" y="1011.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="965.0" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.03%)</title><rect x="962.3" y="995.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="965.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (7 samples, 0.20%)</title><rect x="962.6" y="995.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="965.6" y="1006.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.03%)</title><rect x="963.6" y="979.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="966.6" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (2 samples, 0.06%)</title><rect x="964.0" y="979.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="967.0" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (2 samples, 0.06%)</title><rect x="964.0" y="963.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="967.0" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.interestOps (1 samples, 0.03%)</title><rect x="964.7" y="979.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="967.7" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.setEventOps (1 samples, 0.03%)</title><rect x="964.7" y="963.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="967.7" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (6 samples, 0.17%)</title><rect x="965.0" y="1075.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="968.0" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (6 samples, 0.17%)</title><rect x="965.0" y="1059.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="968.0" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (6 samples, 0.17%)</title><rect x="967.0" y="1075.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="970.0" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (6 samples, 0.17%)</title><rect x="967.0" y="1059.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="970.0" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (6 samples, 0.17%)</title><rect x="967.0" y="1043.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="970.0" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (6 samples, 0.17%)</title><rect x="967.0" y="1027.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="970.0" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (6 samples, 0.17%)</title><rect x="967.0" y="1011.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="970.0" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (6 samples, 0.17%)</title><rect x="967.0" y="995.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="970.0" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (4 samples, 0.11%)</title><rect x="967.0" y="979.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="970.0" y="990.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (2 samples, 0.06%)</title><rect x="968.4" y="979.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="971.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (172 samples, 4.92%)</title><rect x="969.0" y="1075.0" width="58.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="972.0" y="1086.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206/1023741285.run (83 samples, 2.37%)</title><rect x="969.0" y="1059.0" width="28.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="972.0" y="1070.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (83 samples, 2.37%)</title><rect x="969.0" y="1043.0" width="28.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="972.0" y="1054.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (82 samples, 2.34%)</title><rect x="969.4" y="1027.0" width="27.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="972.4" y="1038.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (82 samples, 2.34%)</title><rect x="969.4" y="1011.0" width="27.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="972.4" y="1022.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (81 samples, 2.32%)</title><rect x="969.7" y="995.0" width="27.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="972.7" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (80 samples, 2.29%)</title><rect x="970.1" y="979.0" width="26.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="973.1" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$200/519588060.run (78 samples, 2.23%)</title><rect x="970.7" y="963.0" width="26.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="973.7" y="974.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (78 samples, 2.23%)</title><rect x="970.7" y="947.0" width="26.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="973.7" y="958.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (74 samples, 2.12%)</title><rect x="970.7" y="931.0" width="25.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="973.7" y="942.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (72 samples, 2.06%)</title><rect x="971.4" y="915.0" width="24.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="974.4" y="926.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (2 samples, 0.06%)</title><rect x="972.1" y="899.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="975.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (2 samples, 0.06%)</title><rect x="972.1" y="883.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="975.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (2 samples, 0.06%)</title><rect x="972.1" y="867.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="975.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.06%)</title><rect x="972.1" y="851.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="975.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.03%)</title><rect x="972.4" y="835.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="975.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.03%)</title><rect x="972.4" y="819.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="975.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.03%)</title><rect x="972.4" y="803.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="975.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.03%)</title><rect x="972.4" y="787.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="975.4" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.03%)</title><rect x="972.4" y="771.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="975.4" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.03%)</title><rect x="972.4" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="975.4" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.03%)</title><rect x="972.4" y="739.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="975.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (68 samples, 1.94%)</title><rect x="972.8" y="899.0" width="22.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="975.8" y="910.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (68 samples, 1.94%)</title><rect x="972.8" y="883.0" width="22.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="975.8" y="894.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (68 samples, 1.94%)</title><rect x="972.8" y="867.0" width="22.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="975.8" y="878.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (64 samples, 1.83%)</title><rect x="974.1" y="851.0" width="21.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="977.1" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (64 samples, 1.83%)</title><rect x="974.1" y="835.0" width="21.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="977.1" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (64 samples, 1.83%)</title><rect x="974.1" y="819.0" width="21.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="977.1" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (64 samples, 1.83%)</title><rect x="974.1" y="803.0" width="21.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="977.1" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (64 samples, 1.83%)</title><rect x="974.1" y="787.0" width="21.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="977.1" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (64 samples, 1.83%)</title><rect x="974.1" y="771.0" width="21.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="977.1" y="782.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (62 samples, 1.77%)</title><rect x="974.8" y="755.0" width="20.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="977.8" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.17%)</title><rect x="974.8" y="739.0" width="2.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="977.8" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="974.8" y="723.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="977.8" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.06%)</title><rect x="975.1" y="723.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="978.1" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="975.8" y="723.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="978.8" y="734.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.03%)</title><rect x="976.1" y="723.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="979.1" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="976.5" y="723.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="979.5" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (55 samples, 1.57%)</title><rect x="976.8" y="739.0" width="18.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="979.8" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (50 samples, 1.43%)</title><rect x="978.5" y="723.0" width="16.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="981.5" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (50 samples, 1.43%)</title><rect x="978.5" y="707.0" width="16.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="981.5" y="718.0"></text>
</g>
<g>
<title>__se_sys_futex (44 samples, 1.26%)</title><rect x="979.8" y="691.0" width="14.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="982.8" y="702.0"></text>
</g>
<g>
<title>do_futex (44 samples, 1.26%)</title><rect x="979.8" y="675.0" width="14.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="982.8" y="686.0"></text>
</g>
<g>
<title>futex_wake (44 samples, 1.26%)</title><rect x="979.8" y="659.0" width="14.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="982.8" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="980.9" y="643.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="983.9" y="654.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.09%)</title><rect x="981.2" y="643.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="984.2" y="654.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.03%)</title><rect x="982.2" y="643.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="985.2" y="654.0"></text>
</g>
<g>
<title>wake_up_q (36 samples, 1.03%)</title><rect x="982.5" y="643.0" width="12.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="985.5" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (36 samples, 1.03%)</title><rect x="982.5" y="627.0" width="12.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="985.5" y="638.0"></text>
</g>
<g>
<title>___preempt_schedule (1 samples, 0.03%)</title><rect x="982.9" y="611.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="985.9" y="622.0"></text>
</g>
<g>
<title>preempt_schedule_common (1 samples, 0.03%)</title><rect x="982.9" y="595.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="985.9" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (34 samples, 0.97%)</title><rect x="983.2" y="611.0" width="11.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="986.2" y="622.0"></text>
</g>
<g>
<title>restore_regs_and_return_to_kernel (1 samples, 0.03%)</title><rect x="994.7" y="691.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="997.7" y="702.0"></text>
</g>
<g>
<title>preempt_schedule_irq (1 samples, 0.03%)</title><rect x="994.7" y="675.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="997.7" y="686.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.03%)</title><rect x="995.0" y="691.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="998.0" y="702.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="995.0" y="675.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="998.0" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="995.4" y="739.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="998.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (4 samples, 0.11%)</title><rect x="995.7" y="931.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="998.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (1 samples, 0.03%)</title><rect x="995.7" y="915.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="998.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$197/2052557092.get (1 samples, 0.03%)</title><rect x="995.7" y="899.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="998.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (1 samples, 0.03%)</title><rect x="995.7" y="883.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="998.7" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="995.7" y="867.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="998.7" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="995.7" y="851.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="998.7" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="995.7" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="998.7" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="995.7" y="819.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="998.7" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (3 samples, 0.09%)</title><rect x="996.0" y="915.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="999.0" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.09%)</title><rect x="996.0" y="899.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="999.0" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.09%)</title><rect x="996.0" y="883.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="999.0" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.06%)</title><rect x="996.0" y="867.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="999.0" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (2 samples, 0.06%)</title><rect x="996.0" y="851.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="999.0" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (1 samples, 0.03%)</title><rect x="996.4" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="999.4" y="846.0"></text>
</g>
<g>
<title>__libc_read (1 samples, 0.03%)</title><rect x="996.4" y="819.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="999.4" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="996.4" y="803.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="999.4" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="996.4" y="787.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="999.4" y="798.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.03%)</title><rect x="996.4" y="771.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="999.4" y="782.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.03%)</title><rect x="996.4" y="755.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="999.4" y="766.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.03%)</title><rect x="996.4" y="739.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="999.4" y="750.0"></text>
</g>
<g>
<title>sock_read_iter (1 samples, 0.03%)</title><rect x="996.4" y="723.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="999.4" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.03%)</title><rect x="996.4" y="707.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="999.4" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="996.7" y="867.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="999.7" y="878.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="996.7" y="851.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="999.7" y="862.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.03%)</title><rect x="996.7" y="835.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="999.7" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.03%)</title><rect x="996.7" y="819.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="999.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$211/1693754514.run (89 samples, 2.54%)</title><rect x="997.0" y="1059.0" width="30.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1000.0" y="1070.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (89 samples, 2.54%)</title><rect x="997.0" y="1043.0" width="30.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1000.0" y="1054.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (86 samples, 2.46%)</title><rect x="997.4" y="1027.0" width="29.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1000.4" y="1038.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (86 samples, 2.46%)</title><rect x="997.4" y="1011.0" width="29.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1000.4" y="1022.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (86 samples, 2.46%)</title><rect x="997.4" y="995.0" width="29.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1000.4" y="1006.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (86 samples, 2.46%)</title><rect x="997.4" y="979.0" width="29.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1000.4" y="990.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (85 samples, 2.43%)</title><rect x="997.7" y="963.0" width="28.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1000.7" y="974.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (85 samples, 2.43%)</title><rect x="997.7" y="947.0" width="28.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1000.7" y="958.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (84 samples, 2.40%)</title><rect x="998.1" y="931.0" width="28.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1001.1" y="942.0">jd..</text>
</g>
<g>
<title>Unsafe_Unpark (14 samples, 0.40%)</title><rect x="998.4" y="915.0" width="4.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1001.4" y="926.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="998.4" y="899.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1001.4" y="910.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.06%)</title><rect x="998.7" y="899.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1001.7" y="910.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.17%)</title><rect x="999.4" y="899.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1002.4" y="910.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="1001.4" y="899.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1004.4" y="910.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.03%)</title><rect x="1001.8" y="899.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1004.8" y="910.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.03%)</title><rect x="1002.1" y="899.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1005.1" y="910.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.06%)</title><rect x="1002.4" y="899.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1005.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1003.1" y="915.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1006.1" y="926.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.03%)</title><rect x="1003.1" y="899.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1006.1" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_signal (68 samples, 1.94%)</title><rect x="1003.5" y="915.0" width="22.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1006.5" y="926.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (59 samples, 1.69%)</title><rect x="1006.5" y="899.0" width="19.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1009.5" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (59 samples, 1.69%)</title><rect x="1006.5" y="883.0" width="19.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1009.5" y="894.0"></text>
</g>
<g>
<title>__se_sys_futex (55 samples, 1.57%)</title><rect x="1007.2" y="867.0" width="18.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1010.2" y="878.0"></text>
</g>
<g>
<title>do_futex (55 samples, 1.57%)</title><rect x="1007.2" y="851.0" width="18.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1010.2" y="862.0"></text>
</g>
<g>
<title>futex_wake (54 samples, 1.54%)</title><rect x="1007.5" y="835.0" width="18.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1010.5" y="846.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="1008.9" y="819.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1011.9" y="830.0"></text>
</g>
<g>
<title>wake_up_q (49 samples, 1.40%)</title><rect x="1009.2" y="819.0" width="16.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1012.2" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (49 samples, 1.40%)</title><rect x="1009.2" y="803.0" width="16.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1012.2" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (48 samples, 1.37%)</title><rect x="1009.2" y="787.0" width="16.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1012.2" y="798.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="1025.4" y="787.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1028.4" y="798.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.03%)</title><rect x="1025.7" y="867.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1028.7" y="878.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="1025.7" y="851.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1028.7" y="862.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.03%)</title><rect x="1026.1" y="867.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1029.1" y="878.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="1026.1" y="851.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1029.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.03%)</title><rect x="1026.4" y="1027.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1029.4" y="1038.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1026.7" y="1027.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1029.7" y="1038.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1026.7" y="1011.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1029.7" y="1022.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1026.7" y="995.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1029.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (6 samples, 0.17%)</title><rect x="1027.1" y="1075.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1030.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (6 samples, 0.17%)</title><rect x="1027.1" y="1059.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1030.1" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.11%)</title><rect x="1027.7" y="1043.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1030.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (1 samples, 0.03%)</title><rect x="1029.1" y="1075.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1032.1" y="1086.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.03%)</title><rect x="1029.1" y="1059.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1032.1" y="1070.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (1 samples, 0.03%)</title><rect x="1029.1" y="1043.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1032.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.06%)</title><rect x="1029.4" y="1075.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1032.4" y="1086.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.06%)</title><rect x="1029.4" y="1059.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1032.4" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.06%)</title><rect x="1029.4" y="1043.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1032.4" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.06%)</title><rect x="1029.4" y="1027.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1032.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isReferenced (1 samples, 0.03%)</title><rect x="1030.1" y="1075.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1033.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.03%)</title><rect x="1030.1" y="1059.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1033.1" y="1070.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="1030.1" y="1043.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1033.1" y="1054.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.03%)</title><rect x="1030.1" y="1027.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1033.1" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="1030.1" y="1011.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1033.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (10 samples, 0.29%)</title><rect x="1030.4" y="1075.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1033.4" y="1086.0"></text>
</g>
<g>
<title>java/time/Instant.now (5 samples, 0.14%)</title><rect x="1030.8" y="1059.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1033.8" y="1070.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (5 samples, 0.14%)</title><rect x="1030.8" y="1043.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1033.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (5 samples, 0.14%)</title><rect x="1030.8" y="1027.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1033.8" y="1038.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (4 samples, 0.11%)</title><rect x="1031.1" y="1011.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1034.1" y="1022.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="1031.5" y="995.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1034.5" y="1006.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.06%)</title><rect x="1031.8" y="995.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1034.8" y="1006.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="1032.1" y="979.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1035.1" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (1 samples, 0.03%)</title><rect x="1032.5" y="1059.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1035.5" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.03%)</title><rect x="1032.5" y="1043.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1035.5" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.03%)</title><rect x="1032.5" y="1027.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1035.5" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (3 samples, 0.09%)</title><rect x="1032.8" y="1059.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1035.8" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (3 samples, 0.09%)</title><rect x="1032.8" y="1043.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1035.8" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (3 samples, 0.09%)</title><rect x="1032.8" y="1027.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1035.8" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (3 samples, 0.09%)</title><rect x="1032.8" y="1011.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1035.8" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 0.03%)</title><rect x="1033.8" y="1075.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1036.8" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (119 samples, 3.40%)</title><rect x="1034.2" y="1075.0" width="40.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1037.2" y="1086.0">sun..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1 samples, 0.03%)</title><rect x="1034.2" y="1059.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1037.2" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (118 samples, 3.37%)</title><rect x="1034.5" y="1059.0" width="39.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1037.5" y="1070.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (116 samples, 3.32%)</title><rect x="1035.2" y="1043.0" width="39.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1038.2" y="1054.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (37 samples, 1.06%)</title><rect x="1035.8" y="1027.0" width="12.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1038.8" y="1038.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (2 samples, 0.06%)</title><rect x="1035.8" y="1011.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1038.8" y="1022.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="1036.5" y="1011.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1039.5" y="1022.0"></text>
</g>
<g>
<title>epoll_wait (34 samples, 0.97%)</title><rect x="1036.8" y="1011.0" width="11.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1039.8" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.91%)</title><rect x="1037.5" y="995.0" width="10.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1040.5" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 0.91%)</title><rect x="1037.5" y="979.0" width="10.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1040.5" y="990.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (27 samples, 0.77%)</title><rect x="1038.2" y="963.0" width="9.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1041.2" y="974.0"></text>
</g>
<g>
<title>do_epoll_wait (27 samples, 0.77%)</title><rect x="1038.2" y="947.0" width="9.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1041.2" y="958.0"></text>
</g>
<g>
<title>ep_poll (27 samples, 0.77%)</title><rect x="1038.2" y="931.0" width="9.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1041.2" y="942.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (17 samples, 0.49%)</title><rect x="1038.9" y="915.0" width="5.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1041.9" y="926.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (5 samples, 0.14%)</title><rect x="1038.9" y="899.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1041.9" y="910.0"></text>
</g>
<g>
<title>ep_send_events_proc (10 samples, 0.29%)</title><rect x="1040.6" y="899.0" width="3.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1043.6" y="910.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (7 samples, 0.20%)</title><rect x="1041.6" y="883.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1044.6" y="894.0"></text>
</g>
<g>
<title>pipe_poll (1 samples, 0.03%)</title><rect x="1041.9" y="867.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1044.9" y="878.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.14%)</title><rect x="1042.2" y="867.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1045.2" y="878.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.06%)</title><rect x="1043.3" y="851.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1046.3" y="862.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.06%)</title><rect x="1043.9" y="899.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1046.9" y="910.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (6 samples, 0.17%)</title><rect x="1044.6" y="915.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1047.6" y="926.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.03%)</title><rect x="1044.9" y="899.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1047.9" y="910.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (4 samples, 0.11%)</title><rect x="1045.3" y="899.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1048.3" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.09%)</title><rect x="1045.3" y="883.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1048.3" y="894.0"></text>
</g>
<g>
<title>lock_hrtimer_base.isra.0 (1 samples, 0.03%)</title><rect x="1046.3" y="883.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1049.3" y="894.0"></text>
</g>
<g>
<title>select_estimate_accuracy (2 samples, 0.06%)</title><rect x="1046.6" y="915.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1049.6" y="926.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.03%)</title><rect x="1047.0" y="899.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1050.0" y="910.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="1047.0" y="883.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1050.0" y="894.0"></text>
</g>
<g>
<title>syscall_trace_enter (3 samples, 0.09%)</title><rect x="1047.3" y="963.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1050.3" y="974.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="1048.0" y="947.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1051.0" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (71 samples, 2.03%)</title><rect x="1048.3" y="1027.0" width="24.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1051.3" y="1038.0">s..</text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.26%)</title><rect x="1048.3" y="1011.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1051.3" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (9 samples, 0.26%)</title><rect x="1048.3" y="995.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1051.3" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (51 samples, 1.46%)</title><rect x="1051.4" y="1011.0" width="17.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1054.4" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (51 samples, 1.46%)</title><rect x="1051.4" y="995.0" width="17.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1054.4" y="1006.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_drain (2 samples, 0.06%)</title><rect x="1051.7" y="979.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1054.7" y="990.0"></text>
</g>
<g>
<title>__libc_read (47 samples, 1.34%)</title><rect x="1052.4" y="979.0" width="15.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1055.4" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 1.17%)</title><rect x="1054.4" y="963.0" width="13.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1057.4" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 1.17%)</title><rect x="1054.4" y="947.0" width="13.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1057.4" y="958.0"></text>
</g>
<g>
<title>ksys_read (33 samples, 0.94%)</title><rect x="1055.4" y="931.0" width="11.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1058.4" y="942.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="1055.4" y="915.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1058.4" y="926.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="1055.4" y="899.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1058.4" y="910.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="1055.4" y="883.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1058.4" y="894.0"></text>
</g>
<g>
<title>vfs_read (32 samples, 0.91%)</title><rect x="1055.7" y="915.0" width="10.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1058.7" y="926.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="1056.1" y="899.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1059.1" y="910.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.09%)</title><rect x="1056.4" y="899.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1059.4" y="910.0"></text>
</g>
<g>
<title>new_sync_read (24 samples, 0.69%)</title><rect x="1057.4" y="899.0" width="8.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1060.4" y="910.0"></text>
</g>
<g>
<title>pipe_read (20 samples, 0.57%)</title><rect x="1058.8" y="883.0" width="6.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1061.8" y="894.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.09%)</title><rect x="1059.5" y="867.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1062.5" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.09%)</title><rect x="1059.5" y="851.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1062.5" y="862.0"></text>
</g>
<g>
<title>anon_pipe_buf_release (2 samples, 0.06%)</title><rect x="1060.5" y="867.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1063.5" y="878.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.11%)</title><rect x="1061.1" y="867.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1064.1" y="878.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.06%)</title><rect x="1061.8" y="851.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1064.8" y="862.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="1062.1" y="835.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1065.1" y="846.0"></text>
</g>
<g>
<title>kill_fasync (1 samples, 0.03%)</title><rect x="1062.5" y="867.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1065.5" y="878.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="1062.8" y="867.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1065.8" y="878.0"></text>
</g>
<g>
<title>mutex_unlock (3 samples, 0.09%)</title><rect x="1063.2" y="867.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1066.2" y="878.0"></text>
</g>
<g>
<title>touch_atime (4 samples, 0.11%)</title><rect x="1064.2" y="867.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1067.2" y="878.0"></text>
</g>
<g>
<title>__mnt_want_write (1 samples, 0.03%)</title><rect x="1064.2" y="851.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1067.2" y="862.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="1064.2" y="835.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1067.2" y="846.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.06%)</title><rect x="1064.5" y="851.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1067.5" y="862.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.03%)</title><rect x="1065.2" y="851.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1068.2" y="862.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.09%)</title><rect x="1065.5" y="899.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1068.5" y="910.0"></text>
</g>
<g>
<title>restore_regs_and_return_to_kernel (1 samples, 0.03%)</title><rect x="1066.5" y="931.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1069.5" y="942.0"></text>
</g>
<g>
<title>preempt_schedule_irq (1 samples, 0.03%)</title><rect x="1066.5" y="915.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1069.5" y="926.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.06%)</title><rect x="1066.9" y="931.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1069.9" y="942.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="1067.2" y="915.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1070.2" y="926.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.06%)</title><rect x="1067.5" y="931.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1070.5" y="942.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="1068.2" y="979.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1071.2" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (11 samples, 0.31%)</title><rect x="1068.6" y="1011.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1071.6" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.add (8 samples, 0.23%)</title><rect x="1068.6" y="995.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1071.6" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.09%)</title><rect x="1070.2" y="979.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1073.2" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.09%)</title><rect x="1070.2" y="963.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1073.2" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.03%)</title><rect x="1070.2" y="947.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1073.2" y="958.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.06%)</title><rect x="1070.6" y="947.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1073.6" y="958.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.03%)</title><rect x="1071.3" y="995.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1074.3" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.03%)</title><rect x="1071.3" y="979.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1074.3" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="1071.3" y="963.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1074.3" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (2 samples, 0.06%)</title><rect x="1071.6" y="995.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1074.6" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (2 samples, 0.06%)</title><rect x="1071.6" y="979.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1074.6" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (2 samples, 0.06%)</title><rect x="1071.6" y="963.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1074.6" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (4 samples, 0.11%)</title><rect x="1072.3" y="1027.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1075.3" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.03%)</title><rect x="1072.9" y="1011.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1075.9" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.elementAt (1 samples, 0.03%)</title><rect x="1072.9" y="995.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1075.9" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.ctl (1 samples, 0.03%)</title><rect x="1073.3" y="1011.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1076.3" y="1022.0"></text>
</g>
<g>
<title>__GI_epoll_ctl (1 samples, 0.03%)</title><rect x="1073.3" y="995.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1076.3" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (2 samples, 0.06%)</title><rect x="1073.6" y="1027.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1076.6" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.03%)</title><rect x="1074.0" y="1011.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1077.0" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.03%)</title><rect x="1074.0" y="995.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1077.0" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (12 samples, 0.34%)</title><rect x="1074.3" y="1075.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1077.3" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (12 samples, 0.34%)</title><rect x="1074.3" y="1059.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1077.3" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (12 samples, 0.34%)</title><rect x="1074.3" y="1043.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1077.3" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (11 samples, 0.31%)</title><rect x="1074.3" y="1027.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1077.3" y="1038.0"></text>
</g>
<g>
<title>epoll_wait (10 samples, 0.29%)</title><rect x="1074.6" y="1011.0" width="3.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1077.6" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.23%)</title><rect x="1075.3" y="995.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1078.3" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.23%)</title><rect x="1075.3" y="979.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1078.3" y="990.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (7 samples, 0.20%)</title><rect x="1075.6" y="963.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1078.6" y="974.0"></text>
</g>
<g>
<title>do_epoll_wait (6 samples, 0.17%)</title><rect x="1076.0" y="947.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1079.0" y="958.0"></text>
</g>
<g>
<title>ep_poll (5 samples, 0.14%)</title><rect x="1076.3" y="931.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1079.3" y="942.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (1 samples, 0.03%)</title><rect x="1076.3" y="915.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1079.3" y="926.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (4 samples, 0.11%)</title><rect x="1076.7" y="915.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1079.7" y="926.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (1 samples, 0.03%)</title><rect x="1076.7" y="899.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1079.7" y="910.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.06%)</title><rect x="1077.0" y="899.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1080.0" y="910.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.06%)</title><rect x="1077.0" y="883.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1080.0" y="894.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.06%)</title><rect x="1077.0" y="867.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1080.0" y="878.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="1077.3" y="851.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1080.3" y="862.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="1077.3" y="835.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1080.3" y="846.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="1077.7" y="899.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1080.7" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (1 samples, 0.03%)</title><rect x="1078.0" y="1027.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1081.0" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.03%)</title><rect x="1078.0" y="1011.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1081.0" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (3 samples, 0.09%)</title><rect x="1078.3" y="1075.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1081.3" y="1086.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (3 samples, 0.09%)</title><rect x="1078.3" y="1059.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1081.3" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (3 samples, 0.09%)</title><rect x="1078.3" y="1043.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1081.3" y="1054.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (305 samples, 8.72%)</title><rect x="1079.4" y="1091.0" width="102.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1082.4" y="1102.0">one/nio/serv..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.03%)</title><rect x="1079.7" y="1075.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1082.7" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (24 samples, 0.69%)</title><rect x="1080.0" y="1075.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1083.0" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (24 samples, 0.69%)</title><rect x="1080.0" y="1059.0" width="8.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1083.0" y="1070.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.06%)</title><rect x="1081.0" y="1043.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1084.0" y="1054.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.06%)</title><rect x="1081.7" y="1043.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1084.7" y="1054.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="1082.4" y="1043.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1085.4" y="1054.0"></text>
</g>
<g>
<title>_init (2 samples, 0.06%)</title><rect x="1082.7" y="1043.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1085.7" y="1054.0"></text>
</g>
<g>
<title>epoll_wait (14 samples, 0.40%)</title><rect x="1083.4" y="1043.0" width="4.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1086.4" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.37%)</title><rect x="1083.7" y="1027.0" width="4.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1086.7" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.37%)</title><rect x="1083.7" y="1011.0" width="4.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1086.7" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (9 samples, 0.26%)</title><rect x="1085.1" y="995.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1088.1" y="1006.0"></text>
</g>
<g>
<title>do_epoll_wait (9 samples, 0.26%)</title><rect x="1085.1" y="979.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1088.1" y="990.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="1085.4" y="963.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1088.4" y="974.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="1085.4" y="947.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1088.4" y="958.0"></text>
</g>
<g>
<title>ep_poll (7 samples, 0.20%)</title><rect x="1085.8" y="963.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1088.8" y="974.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (2 samples, 0.06%)</title><rect x="1086.8" y="947.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1089.8" y="958.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (1 samples, 0.03%)</title><rect x="1086.8" y="931.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1089.8" y="942.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.03%)</title><rect x="1087.1" y="931.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1090.1" y="942.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (1 samples, 0.03%)</title><rect x="1087.1" y="915.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1090.1" y="926.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.03%)</title><rect x="1087.1" y="899.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1090.1" y="910.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="1087.1" y="883.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1090.1" y="894.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="1087.1" y="867.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1090.1" y="878.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.06%)</title><rect x="1087.4" y="947.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1090.4" y="958.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="1087.8" y="931.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1090.8" y="942.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="1087.8" y="915.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1090.8" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (279 samples, 7.98%)</title><rect x="1088.1" y="1075.0" width="94.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1091.1" y="1086.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (275 samples, 7.86%)</title><rect x="1089.5" y="1059.0" width="92.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1092.5" y="1070.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (167 samples, 4.77%)</title><rect x="1090.1" y="1043.0" width="56.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1093.1" y="1054.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (140 samples, 4.00%)</title><rect x="1091.5" y="1027.0" width="47.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1094.5" y="1038.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (140 samples, 4.00%)</title><rect x="1091.5" y="1011.0" width="47.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1094.5" y="1022.0">one/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (128 samples, 3.66%)</title><rect x="1091.5" y="995.0" width="43.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1094.5" y="1006.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.29%)</title><rect x="1091.5" y="979.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1094.5" y="990.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="1094.5" y="963.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1097.5" y="974.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="1094.5" y="947.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1097.5" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="1094.5" y="931.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1097.5" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="1094.5" y="915.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1097.5" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.entity (118 samples, 3.37%)</title><rect x="1094.9" y="979.0" width="39.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1097.9" y="990.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/783836341.linkToTargetMethod (1 samples, 0.03%)</title><rect x="1094.9" y="963.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1097.9" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/976217259.invokeStatic (1 samples, 0.03%)</title><rect x="1094.9" y="947.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1097.9" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl$$Lambda$292/2012048222.get$Lambda (1 samples, 0.03%)</title><rect x="1094.9" y="931.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1097.9" y="942.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (107 samples, 3.06%)</title><rect x="1095.2" y="963.0" width="36.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1098.2" y="974.0">one..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (104 samples, 2.97%)</title><rect x="1096.2" y="947.0" width="35.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1099.2" y="958.0">jav..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (102 samples, 2.92%)</title><rect x="1096.9" y="931.0" width="34.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1099.9" y="942.0">on..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (102 samples, 2.92%)</title><rect x="1096.9" y="915.0" width="34.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1099.9" y="926.0">on..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (102 samples, 2.92%)</title><rect x="1096.9" y="899.0" width="34.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1099.9" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (98 samples, 2.80%)</title><rect x="1098.2" y="883.0" width="33.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1101.2" y="894.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (96 samples, 2.74%)</title><rect x="1098.6" y="867.0" width="32.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1101.6" y="878.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (96 samples, 2.74%)</title><rect x="1098.6" y="851.0" width="32.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1101.6" y="862.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (90 samples, 2.57%)</title><rect x="1100.6" y="835.0" width="30.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1103.6" y="846.0">jd..</text>
</g>
<g>
<title>Parker::unpark() (3 samples, 0.09%)</title><rect x="1100.9" y="819.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1103.9" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="1102.0" y="819.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1105.0" y="830.0"></text>
</g>
<g>
<title>Unsafe_Unpark (11 samples, 0.31%)</title><rect x="1102.3" y="819.0" width="3.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1105.3" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.09%)</title><rect x="1102.3" y="803.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1105.3" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.09%)</title><rect x="1103.3" y="803.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1106.3" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="1104.3" y="803.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1107.3" y="814.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.03%)</title><rect x="1104.7" y="803.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1107.7" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.03%)</title><rect x="1105.0" y="803.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1108.0" y="814.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.06%)</title><rect x="1105.3" y="803.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1108.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1106.0" y="819.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1109.0" y="830.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.03%)</title><rect x="1106.0" y="803.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1109.0" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (71 samples, 2.03%)</title><rect x="1106.3" y="819.0" width="24.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1109.3" y="830.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (69 samples, 1.97%)</title><rect x="1107.0" y="803.0" width="23.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1110.0" y="814.0">e..</text>
</g>
<g>
<title>do_syscall_64 (69 samples, 1.97%)</title><rect x="1107.0" y="787.0" width="23.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1110.0" y="798.0">d..</text>
</g>
<g>
<title>__se_sys_futex (64 samples, 1.83%)</title><rect x="1107.7" y="771.0" width="21.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1110.7" y="782.0">_..</text>
</g>
<g>
<title>do_futex (64 samples, 1.83%)</title><rect x="1107.7" y="755.0" width="21.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1110.7" y="766.0">d..</text>
</g>
<g>
<title>futex_wake (64 samples, 1.83%)</title><rect x="1107.7" y="739.0" width="21.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1110.7" y="750.0">f..</text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="1108.4" y="723.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1111.4" y="734.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.06%)</title><rect x="1108.7" y="723.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1111.7" y="734.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.03%)</title><rect x="1109.0" y="707.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1112.0" y="718.0"></text>
</g>
<g>
<title>wake_up_q (59 samples, 1.69%)</title><rect x="1109.4" y="723.0" width="19.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1112.4" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (59 samples, 1.69%)</title><rect x="1109.4" y="707.0" width="19.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1112.4" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (58 samples, 1.66%)</title><rect x="1109.4" y="691.0" width="19.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1112.4" y="702.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="1128.9" y="691.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1131.9" y="702.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (3 samples, 0.09%)</title><rect x="1129.3" y="771.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1132.3" y="782.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.06%)</title><rect x="1129.6" y="755.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1132.6" y="766.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="1130.0" y="739.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1133.0" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.06%)</title><rect x="1130.3" y="819.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1133.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="1131.0" y="867.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.0" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.getTimestamp (2 samples, 0.06%)</title><rect x="1131.3" y="963.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1134.3" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.06%)</title><rect x="1131.3" y="947.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1134.3" y="958.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.06%)</title><rect x="1131.3" y="931.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1134.3" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.06%)</title><rect x="1131.3" y="915.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1134.3" y="926.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1131.6" y="899.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1134.6" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.isSystemRequest (8 samples, 0.23%)</title><rect x="1132.0" y="963.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1135.0" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.23%)</title><rect x="1132.0" y="947.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1135.0" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.23%)</title><rect x="1132.0" y="931.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1135.0" y="942.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.17%)</title><rect x="1132.7" y="915.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1135.7" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.17%)</title><rect x="1132.7" y="899.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1135.7" y="910.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (10 samples, 0.29%)</title><rect x="1134.7" y="995.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1137.7" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.get (10 samples, 0.29%)</title><rect x="1134.7" y="979.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1137.7" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (8 samples, 0.23%)</title><rect x="1134.7" y="963.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1137.7" y="974.0"></text>
</g>
<g>
<title>java/lang/String.equals (8 samples, 0.23%)</title><rect x="1134.7" y="947.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1137.7" y="958.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2 samples, 0.06%)</title><rect x="1136.4" y="931.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1139.4" y="942.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="1137.0" y="931.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1140.0" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.06%)</title><rect x="1137.4" y="963.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1140.4" y="974.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.06%)</title><rect x="1137.4" y="947.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1140.4" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="1137.4" y="931.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1140.4" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="1137.7" y="931.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1140.7" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.06%)</title><rect x="1138.1" y="995.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1141.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.06%)</title><rect x="1138.1" y="979.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1141.1" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.06%)</title><rect x="1138.1" y="963.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1141.1" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1138.1" y="947.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1141.1" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="1138.4" y="947.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1141.4" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 0.26%)</title><rect x="1138.7" y="1027.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1141.7" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.11%)</title><rect x="1138.7" y="1011.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1141.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.09%)</title><rect x="1138.7" y="995.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1141.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.09%)</title><rect x="1138.7" y="979.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1141.7" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.09%)</title><rect x="1138.7" y="963.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1141.7" y="974.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1139.7" y="995.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1142.7" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.11%)</title><rect x="1140.1" y="1011.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1143.1" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.11%)</title><rect x="1140.1" y="995.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1143.1" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.03%)</title><rect x="1141.4" y="1011.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1144.4" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.03%)</title><rect x="1141.8" y="1027.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1144.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="1141.8" y="1011.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1144.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="1141.8" y="995.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1144.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="1141.8" y="979.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1144.8" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.03%)</title><rect x="1141.8" y="963.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1144.8" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.11%)</title><rect x="1142.1" y="1027.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1145.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.09%)</title><rect x="1142.4" y="1011.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1145.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.09%)</title><rect x="1142.4" y="995.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1145.4" y="1006.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="1142.8" y="979.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1145.8" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.26%)</title><rect x="1143.4" y="1027.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1146.4" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.23%)</title><rect x="1143.8" y="1011.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1146.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.09%)</title><rect x="1146.5" y="1043.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1149.5" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (103 samples, 2.94%)</title><rect x="1147.5" y="1043.0" width="34.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1150.5" y="1054.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (83 samples, 2.37%)</title><rect x="1149.5" y="1027.0" width="28.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1152.5" y="1038.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.06%)</title><rect x="1151.2" y="1011.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1154.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.34%)</title><rect x="1151.9" y="1011.0" width="4.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1154.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.34%)</title><rect x="1151.9" y="995.0" width="4.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1154.9" y="1006.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (8 samples, 0.23%)</title><rect x="1151.9" y="979.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1154.9" y="990.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="1152.6" y="963.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1155.6" y="974.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.03%)</title><rect x="1152.9" y="963.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.9" y="974.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.11%)</title><rect x="1153.2" y="963.0" width="1.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1156.2" y="974.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.06%)</title><rect x="1153.6" y="947.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1156.6" y="958.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.03%)</title><rect x="1154.2" y="947.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1157.2" y="958.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="1154.6" y="979.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1157.6" y="990.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="1154.9" y="979.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1157.9" y="990.0"></text>
</g>
<g>
<title>recv (2 samples, 0.06%)</title><rect x="1155.3" y="979.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1158.3" y="990.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="1155.9" y="1011.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1158.9" y="1022.0"></text>
</g>
<g>
<title>recv (63 samples, 1.80%)</title><rect x="1156.3" y="1011.0" width="21.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1159.3" y="1022.0">r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 1.66%)</title><rect x="1158.0" y="995.0" width="19.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1161.0" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (58 samples, 1.66%)</title><rect x="1158.0" y="979.0" width="19.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1161.0" y="990.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (45 samples, 1.29%)</title><rect x="1161.3" y="963.0" width="15.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1164.3" y="974.0"></text>
</g>
<g>
<title>__sys_recvfrom (42 samples, 1.20%)</title><rect x="1162.3" y="947.0" width="14.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1165.3" y="958.0"></text>
</g>
<g>
<title>inet6_recvmsg (32 samples, 0.91%)</title><rect x="1163.0" y="931.0" width="10.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1166.0" y="942.0"></text>
</g>
<g>
<title>tcp_recvmsg (32 samples, 0.91%)</title><rect x="1163.0" y="915.0" width="10.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1166.0" y="926.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.14%)</title><rect x="1165.4" y="899.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1168.4" y="910.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.11%)</title><rect x="1165.4" y="883.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1168.4" y="894.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.09%)</title><rect x="1165.7" y="867.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1168.7" y="878.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.06%)</title><rect x="1166.0" y="851.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1169.0" y="862.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="1166.7" y="883.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1169.7" y="894.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.09%)</title><rect x="1167.1" y="899.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1170.1" y="910.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (2 samples, 0.06%)</title><rect x="1167.4" y="883.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1170.4" y="894.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.06%)</title><rect x="1168.1" y="899.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1171.1" y="910.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="1168.7" y="899.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1171.7" y="910.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="1168.7" y="883.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1171.7" y="894.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="1169.1" y="899.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1172.1" y="910.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="1169.1" y="883.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1172.1" y="894.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="1169.1" y="867.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1172.1" y="878.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.17%)</title><rect x="1169.4" y="899.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1172.4" y="910.0"></text>
</g>
<g>
<title>__skb_datagram_iter (6 samples, 0.17%)</title><rect x="1169.4" y="883.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1172.4" y="894.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.06%)</title><rect x="1169.8" y="867.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1172.8" y="878.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.06%)</title><rect x="1169.8" y="851.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1172.8" y="862.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="1169.8" y="835.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1172.8" y="846.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="1170.1" y="835.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1173.1" y="846.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.09%)</title><rect x="1170.4" y="867.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1173.4" y="878.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.09%)</title><rect x="1170.4" y="851.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1173.4" y="862.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.09%)</title><rect x="1170.4" y="835.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1173.4" y="846.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.03%)</title><rect x="1171.4" y="899.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1174.4" y="910.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.11%)</title><rect x="1171.8" y="899.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1174.8" y="910.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.09%)</title><rect x="1172.1" y="883.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1175.1" y="894.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.06%)</title><rect x="1172.5" y="867.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1175.5" y="878.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="1172.8" y="851.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1175.8" y="862.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (2 samples, 0.06%)</title><rect x="1173.1" y="899.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1176.1" y="910.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.23%)</title><rect x="1173.8" y="931.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1176.8" y="942.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.20%)</title><rect x="1174.1" y="915.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1177.1" y="926.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.14%)</title><rect x="1174.8" y="899.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1177.8" y="910.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.03%)</title><rect x="1176.5" y="963.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1179.5" y="974.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.06%)</title><rect x="1176.8" y="963.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1179.8" y="974.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="1177.2" y="947.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1180.2" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (14 samples, 0.40%)</title><rect x="1177.5" y="1027.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1180.5" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.listen (14 samples, 0.40%)</title><rect x="1177.5" y="1011.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1180.5" y="1022.0"></text>
</g>
<g>
<title>start_thread (23 samples, 0.66%)</title><rect x="1182.2" y="1091.0" width="7.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1185.2" y="1102.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (23 samples, 0.66%)</title><rect x="1182.2" y="1075.0" width="7.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1185.2" y="1086.0"></text>
</g>
<g>
<title>GangWorker::loop() (22 samples, 0.63%)</title><rect x="1182.2" y="1059.0" width="7.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.2" y="1070.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (22 samples, 0.63%)</title><rect x="1182.2" y="1043.0" width="7.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.2" y="1054.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.09%)</title><rect x="1182.2" y="1027.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.2" y="1038.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.03%)</title><rect x="1182.2" y="1011.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.2" y="1022.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.06%)</title><rect x="1182.6" y="1011.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1185.6" y="1022.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (17 samples, 0.49%)</title><rect x="1183.3" y="1027.0" width="5.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.3" y="1038.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (17 samples, 0.49%)</title><rect x="1183.3" y="1011.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.3" y="1022.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (17 samples, 0.49%)</title><rect x="1183.3" y="995.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.3" y="1006.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (17 samples, 0.49%)</title><rect x="1183.3" y="979.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.3" y="990.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (17 samples, 0.49%)</title><rect x="1183.3" y="963.0" width="5.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.3" y="974.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (6 samples, 0.17%)</title><rect x="1183.3" y="947.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.3" y="958.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.03%)</title><rect x="1183.9" y="931.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.9" y="942.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (3 samples, 0.09%)</title><rect x="1184.3" y="931.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1187.3" y="942.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (11 samples, 0.31%)</title><rect x="1185.3" y="947.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.3" y="958.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (10 samples, 0.29%)</title><rect x="1185.3" y="931.0" width="3.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.3" y="942.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.03%)</title><rect x="1185.6" y="915.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.6" y="926.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.06%)</title><rect x="1186.0" y="915.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.0" y="926.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (4 samples, 0.11%)</title><rect x="1186.6" y="915.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.6" y="926.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (2 samples, 0.06%)</title><rect x="1188.0" y="915.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.0" y="926.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (1 samples, 0.03%)</title><rect x="1188.7" y="931.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.7" y="942.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.06%)</title><rect x="1189.0" y="1027.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.0" y="1038.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.03%)</title><rect x="1189.0" y="1011.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.0" y="1022.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="1189.0" y="995.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.0" y="1006.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="1189.0" y="979.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.0" y="990.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (1 samples, 0.03%)</title><rect x="1189.0" y="963.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.0" y="974.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (1 samples, 0.03%)</title><rect x="1189.0" y="947.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.0" y="958.0"></text>
</g>
<g>
<title>G1RootProcessor::process_vm_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.03%)</title><rect x="1189.3" y="1011.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.3" y="1022.0"></text>
</g>
<g>
<title>JvmtiObjectAllocEventCollector::oops_do_for_all_threads(OopClosure*) [clone .part.122] (1 samples, 0.03%)</title><rect x="1189.3" y="995.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.3" y="1006.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.03%)</title><rect x="1189.7" y="1059.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.7" y="1070.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.03%)</title><rect x="1189.7" y="1043.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.7" y="1054.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.54] (1 samples, 0.03%)</title><rect x="1189.7" y="1027.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.7" y="1038.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.03%)</title><rect x="1189.7" y="1011.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.7" y="1022.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.03%)</title><rect x="1189.7" y="995.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.7" y="1006.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.03%)</title><rect x="1189.7" y="979.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.7" y="990.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (1 samples, 0.03%)</title><rect x="1189.7" y="963.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.7" y="974.0"></text>
</g>
<g>
<title>DerivedPointerTable::update_pointers() (1 samples, 0.03%)</title><rect x="1189.7" y="947.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.7" y="958.0"></text>
</g>
</g>
</svg>

<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (214,023 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (149,555 samples, 69.88%)</title><rect x="10.2" y="691.0" width="824.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.2" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (149,555 samples, 69.88%)</title><rect x="10.2" y="675.0" width="824.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.2" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (149,555 samples, 69.88%)</title><rect x="10.2" y="659.0" width="824.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.2" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (68,643 samples, 32.07%)</title><rect x="10.2" y="643.0" width="378.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.2" y="654.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (68,643 samples, 32.07%)</title><rect x="10.2" y="627.0" width="378.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.2" y="638.0">java/util/concurrent/CompletableFuture.postComplete</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (68,643 samples, 32.07%)</title><rect x="10.2" y="611.0" width="378.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.2" y="622.0">java/util/concurrent/CompletableFuture$UniCompose.tr..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (283 samples, 0.13%)</title><rect x="10.2" y="595.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="13.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$136/665754590.apply (68,307 samples, 31.92%)</title><rect x="11.9" y="595.0" width="376.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="14.9" y="606.0">jdk/internal/net/http/MultiExchange$$Lambda$136/665..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (68,307 samples, 31.92%)</title><rect x="11.9" y="579.0" width="376.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.9" y="590.0">jdk/internal/net/http/MultiExchange.lambda$response..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (68,307 samples, 31.92%)</title><rect x="11.9" y="563.0" width="376.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.9" y="574.0">jdk/internal/net/http/MultiExchange.responseAsyncImpl</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (357 samples, 0.17%)</title><rect x="11.9" y="547.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (357 samples, 0.17%)</title><rect x="11.9" y="531.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$220/775820891.get$Lambda (216 samples, 0.10%)</title><rect x="11.9" y="515.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="14.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$220 (216 samples, 0.10%)</title><rect x="11.9" y="499.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="14.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$225/975822862.get$Lambda (141 samples, 0.07%)</title><rect x="13.1" y="515.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="16.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$225 (141 samples, 0.07%)</title><rect x="13.1" y="499.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="16.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (569 samples, 0.27%)</title><rect x="13.9" y="547.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="16.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (569 samples, 0.27%)</title><rect x="13.9" y="531.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="16.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (315 samples, 0.15%)</title><rect x="13.9" y="515.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="16.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (254 samples, 0.12%)</title><rect x="15.6" y="515.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (254 samples, 0.12%)</title><rect x="15.6" y="499.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (254 samples, 0.12%)</title><rect x="15.6" y="483.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="18.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,263 samples, 0.59%)</title><rect x="17.0" y="547.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,263 samples, 0.59%)</title><rect x="17.0" y="531.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (695 samples, 0.32%)</title><rect x="17.0" y="515.0" width="3.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="20.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (567 samples, 0.26%)</title><rect x="20.8" y="515.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (567 samples, 0.26%)</title><rect x="20.8" y="499.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="23.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (567 samples, 0.26%)</title><rect x="20.8" y="483.0" width="3.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="23.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (64,300 samples, 30.04%)</title><rect x="24.0" y="547.0" width="354.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.0" y="558.0">jdk/internal/net/http/Exchange.responseAsync</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (64,300 samples, 30.04%)</title><rect x="24.0" y="531.0" width="354.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="27.0" y="542.0">jdk/internal/net/http/Exchange.responseAsyncImpl</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (64,300 samples, 30.04%)</title><rect x="24.0" y="515.0" width="354.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.0" y="526.0">jdk/internal/net/http/Exchange.responseAsyncImpl0</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (575 samples, 0.27%)</title><rect x="24.0" y="499.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (575 samples, 0.27%)</title><rect x="24.0" y="483.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="27.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$153/448982412.get$Lambda (152 samples, 0.07%)</title><rect x="24.0" y="467.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="27.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$153 (152 samples, 0.07%)</title><rect x="24.0" y="451.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="27.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$154/1591917242.get$Lambda (221 samples, 0.10%)</title><rect x="24.8" y="467.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$154 (221 samples, 0.10%)</title><rect x="24.8" y="451.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="27.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$195/1163733914.get$Lambda (202 samples, 0.09%)</title><rect x="26.0" y="467.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="29.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$195 (202 samples, 0.09%)</title><rect x="26.0" y="451.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="29.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (43,326 samples, 20.24%)</title><rect x="27.1" y="499.0" width="238.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.1" y="510.0">java/util/concurrent/Completable..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (43,326 samples, 20.24%)</title><rect x="27.1" y="483.0" width="238.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.1" y="494.0">java/util/concurrent/Completable..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (43,009 samples, 20.10%)</title><rect x="27.1" y="467.0" width="237.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.1" y="478.0">java/util/concurrent/Completabl..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$195/1163733914.apply (43,009 samples, 20.10%)</title><rect x="27.1" y="451.0" width="237.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.1" y="462.0">jdk/internal/net/http/Exchange$..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (43,009 samples, 20.10%)</title><rect x="27.1" y="435.0" width="237.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="30.1" y="446.0">jdk/internal/net/http/Exchange...</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (43,009 samples, 20.10%)</title><rect x="27.1" y="419.0" width="237.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="30.1" y="430.0">jdk/internal/net/http/Exchange...</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$154/1591917242.apply (43,009 samples, 20.10%)</title><rect x="27.1" y="403.0" width="237.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.1" y="414.0">jdk/internal/net/http/Exchange$..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (43,009 samples, 20.10%)</title><rect x="27.1" y="387.0" width="237.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="30.1" y="398.0">jdk/internal/net/http/Exchange...</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (319 samples, 0.15%)</title><rect x="27.1" y="371.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="30.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (319 samples, 0.15%)</title><rect x="27.1" y="355.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$240/2066681415.get$Lambda (319 samples, 0.15%)</title><rect x="27.1" y="339.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$240 (319 samples, 0.15%)</title><rect x="27.1" y="323.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="30.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (998 samples, 0.47%)</title><rect x="28.9" y="371.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="31.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (998 samples, 0.47%)</title><rect x="28.9" y="355.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.9" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (522 samples, 0.24%)</title><rect x="28.9" y="339.0" width="2.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="31.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (431 samples, 0.20%)</title><rect x="32.0" y="339.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="35.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (431 samples, 0.20%)</title><rect x="32.0" y="323.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="35.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (431 samples, 0.20%)</title><rect x="32.0" y="307.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="35.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (717 samples, 0.34%)</title><rect x="34.4" y="371.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="37.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (717 samples, 0.34%)</title><rect x="34.4" y="355.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="37.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (430 samples, 0.20%)</title><rect x="34.4" y="339.0" width="2.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="37.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (286 samples, 0.13%)</title><rect x="36.8" y="339.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="39.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (286 samples, 0.13%)</title><rect x="36.8" y="323.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (286 samples, 0.13%)</title><rect x="36.8" y="307.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="39.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (40,975 samples, 19.15%)</title><rect x="38.4" y="371.0" width="225.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.4" y="382.0">jdk/internal/net/http/Http1Exc..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (313 samples, 0.15%)</title><rect x="38.4" y="355.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="41.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (313 samples, 0.15%)</title><rect x="38.4" y="339.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="41.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$231/917434589.get$Lambda (134 samples, 0.06%)</title><rect x="38.4" y="323.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="41.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$231 (134 samples, 0.06%)</title><rect x="38.4" y="307.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="41.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$236/1940682860.get$Lambda (179 samples, 0.08%)</title><rect x="39.1" y="323.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="42.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$236 (179 samples, 0.08%)</title><rect x="39.1" y="307.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="42.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (36,116 samples, 16.87%)</title><rect x="40.1" y="355.0" width="199.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="43.1" y="366.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (36,116 samples, 16.87%)</title><rect x="40.1" y="339.0" width="199.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="43.1" y="350.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (347 samples, 0.16%)</title><rect x="40.1" y="323.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="43.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$231/917434589.apply (35,108 samples, 16.40%)</title><rect x="42.0" y="323.0" width="193.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="45.0" y="334.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (35,108 samples, 16.40%)</title><rect x="42.0" y="307.0" width="193.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="45.0" y="318.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (122 samples, 0.06%)</title><rect x="42.0" y="291.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="45.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (122 samples, 0.06%)</title><rect x="42.0" y="275.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="45.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$277/749205255.get$Lambda (122 samples, 0.06%)</title><rect x="42.0" y="259.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="45.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$277 (122 samples, 0.06%)</title><rect x="42.0" y="243.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="45.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (578 samples, 0.27%)</title><rect x="42.7" y="291.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (578 samples, 0.27%)</title><rect x="42.7" y="275.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="45.7" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (336 samples, 0.16%)</title><rect x="42.7" y="259.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="45.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (242 samples, 0.11%)</title><rect x="44.5" y="259.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (242 samples, 0.11%)</title><rect x="44.5" y="243.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (242 samples, 0.11%)</title><rect x="44.5" y="227.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="47.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (267 samples, 0.12%)</title><rect x="45.8" y="291.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="48.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (530 samples, 0.25%)</title><rect x="47.3" y="291.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="50.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (249 samples, 0.12%)</title><rect x="47.3" y="275.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="50.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (281 samples, 0.13%)</title><rect x="48.7" y="275.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="51.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (231 samples, 0.11%)</title><rect x="48.7" y="259.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="51.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (231 samples, 0.11%)</title><rect x="48.7" y="243.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (231 samples, 0.11%)</title><rect x="48.7" y="227.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="51.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (231 samples, 0.11%)</title><rect x="48.7" y="211.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="51.7" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (231 samples, 0.11%)</title><rect x="48.7" y="195.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="51.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (50 samples, 0.02%)</title><rect x="50.0" y="259.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="53.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (50 samples, 0.02%)</title><rect x="50.0" y="243.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="53.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (50 samples, 0.02%)</title><rect x="50.0" y="227.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (50 samples, 0.02%)</title><rect x="50.0" y="211.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="53.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (50 samples, 0.02%)</title><rect x="50.0" y="195.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="53.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (50 samples, 0.02%)</title><rect x="50.0" y="179.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (710 samples, 0.33%)</title><rect x="50.2" y="291.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="53.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (710 samples, 0.33%)</title><rect x="50.2" y="275.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="53.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (226 samples, 0.11%)</title><rect x="50.2" y="259.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (226 samples, 0.11%)</title><rect x="50.2" y="243.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="53.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (226 samples, 0.11%)</title><rect x="50.2" y="227.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="53.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (226 samples, 0.11%)</title><rect x="50.2" y="211.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="53.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (484 samples, 0.23%)</title><rect x="51.5" y="259.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="54.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (484 samples, 0.23%)</title><rect x="51.5" y="243.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (351 samples, 0.16%)</title><rect x="51.5" y="227.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="54.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (133 samples, 0.06%)</title><rect x="53.4" y="227.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="56.4" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (133 samples, 0.06%)</title><rect x="53.4" y="211.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="56.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (32,901 samples, 15.37%)</title><rect x="54.2" y="291.0" width="181.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.2" y="302.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>java.lang.StringBuilder (216 samples, 0.10%)</title><rect x="54.2" y="275.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="57.2" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4,248 samples, 1.98%)</title><rect x="55.3" y="275.0" width="23.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="58.3" y="286.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (4,248 samples, 1.98%)</title><rect x="55.3" y="259.0" width="23.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.3" y="270.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (4,248 samples, 1.98%)</title><rect x="55.3" y="243.0" width="23.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="58.3" y="254.0">j..</text>
</g>
<g>
<title>byte[] (3,568 samples, 1.67%)</title><rect x="55.3" y="227.0" width="19.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="58.3" y="238.0"></text>
</g>
<g>
<title>byte[] (680 samples, 0.32%)</title><rect x="75.0" y="227.0" width="3.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="78.0" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (748 samples, 0.35%)</title><rect x="78.8" y="275.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="81.8" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (748 samples, 0.35%)</title><rect x="78.8" y="259.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="81.8" y="270.0"></text>
</g>
<g>
<title>byte[] (737 samples, 0.34%)</title><rect x="78.8" y="243.0" width="4.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="81.8" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3,046 samples, 1.42%)</title><rect x="82.9" y="275.0" width="16.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="85.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,046 samples, 1.42%)</title><rect x="82.9" y="259.0" width="16.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.9" y="270.0"></text>
</g>
<g>
<title>java.lang.String (193 samples, 0.09%)</title><rect x="82.9" y="243.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="85.9" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,853 samples, 1.33%)</title><rect x="84.0" y="243.0" width="15.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.0" y="254.0"></text>
</g>
<g>
<title>byte[] (2,427 samples, 1.13%)</title><rect x="84.0" y="227.0" width="13.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="87.0" y="238.0"></text>
</g>
<g>
<title>byte[] (426 samples, 0.20%)</title><rect x="97.3" y="227.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="100.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (441 samples, 0.21%)</title><rect x="99.7" y="275.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.7" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (441 samples, 0.21%)</title><rect x="99.7" y="259.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="102.7" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (441 samples, 0.21%)</title><rect x="99.7" y="243.0" width="2.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="102.7" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (234 samples, 0.11%)</title><rect x="102.1" y="275.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.1" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (234 samples, 0.11%)</title><rect x="102.1" y="259.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="105.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (21,184 samples, 9.90%)</title><rect x="103.4" y="275.0" width="116.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="106.4" y="286.0">jdk/internal/n..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (206 samples, 0.10%)</title><rect x="103.4" y="259.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (206 samples, 0.10%)</title><rect x="103.4" y="243.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="106.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (206 samples, 0.10%)</title><rect x="103.4" y="227.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="106.4" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$287/2026177118.get$Lambda (206 samples, 0.10%)</title><rect x="103.4" y="211.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="106.4" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$287 (206 samples, 0.10%)</title><rect x="103.4" y="195.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="106.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (12,595 samples, 5.88%)</title><rect x="104.5" y="259.0" width="69.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="107.5" y="270.0">jdk/int..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (8,865 samples, 4.14%)</title><rect x="104.5" y="243.0" width="48.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="107.5" y="254.0">java..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8,865 samples, 4.14%)</title><rect x="104.5" y="227.0" width="48.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="107.5" y="238.0">java..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (8,865 samples, 4.14%)</title><rect x="104.5" y="211.0" width="48.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.5" y="222.0">java..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (8,865 samples, 4.14%)</title><rect x="104.5" y="195.0" width="48.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="107.5" y="206.0">java..</text>
</g>
<g>
<title>byte[] (7,034 samples, 3.29%)</title><rect x="104.5" y="179.0" width="38.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="107.5" y="190.0">byt..</text>
</g>
<g>
<title>byte[] (1,831 samples, 0.86%)</title><rect x="143.3" y="179.0" width="10.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="146.3" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (569 samples, 0.27%)</title><rect x="153.4" y="243.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.4" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (569 samples, 0.27%)</title><rect x="153.4" y="227.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.4" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (569 samples, 0.27%)</title><rect x="153.4" y="211.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.4" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (569 samples, 0.27%)</title><rect x="153.4" y="195.0" width="3.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="156.4" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (577 samples, 0.27%)</title><rect x="156.6" y="243.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="159.6" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (296 samples, 0.14%)</title><rect x="156.6" y="227.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="159.6" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (281 samples, 0.13%)</title><rect x="158.2" y="227.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="161.2" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (281 samples, 0.13%)</title><rect x="158.2" y="211.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="161.2" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$287/2026177118.test (2,584 samples, 1.21%)</title><rect x="159.7" y="243.0" width="14.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="162.7" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (2,584 samples, 1.21%)</title><rect x="159.7" y="227.0" width="14.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$81/910091170.test (2,584 samples, 1.21%)</title><rect x="159.7" y="211.0" width="14.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="162.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (2,584 samples, 1.21%)</title><rect x="159.7" y="195.0" width="14.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="162.7" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$70/2061347276.test (2,584 samples, 1.21%)</title><rect x="159.7" y="179.0" width="14.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="162.7" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (2,584 samples, 1.21%)</title><rect x="159.7" y="163.0" width="14.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="162.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/1219161283.test (2,584 samples, 1.21%)</title><rect x="159.7" y="147.0" width="14.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="162.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (2,584 samples, 1.21%)</title><rect x="159.7" y="131.0" width="14.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,584 samples, 1.21%)</title><rect x="159.7" y="115.0" width="14.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="162.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,584 samples, 1.21%)</title><rect x="159.7" y="99.0" width="14.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="162.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String (1,226 samples, 0.57%)</title><rect x="159.7" y="83.0" width="6.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="162.7" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,358 samples, 0.63%)</title><rect x="166.5" y="83.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="169.5" y="94.0"></text>
</g>
<g>
<title>byte[] (1,358 samples, 0.63%)</title><rect x="166.5" y="67.0" width="7.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="169.5" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (8,383 samples, 3.92%)</title><rect x="174.0" y="259.0" width="46.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.0" y="270.0">jdk/..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (8,383 samples, 3.92%)</title><rect x="174.0" y="243.0" width="46.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.0" y="254.0">java..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (8,383 samples, 3.92%)</title><rect x="174.0" y="227.0" width="46.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="177.0" y="238.0">java..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (146 samples, 0.07%)</title><rect x="174.0" y="211.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="177.0" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (197 samples, 0.09%)</title><rect x="174.8" y="211.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="177.8" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (437 samples, 0.20%)</title><rect x="175.9" y="211.0" width="2.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="178.9" y="222.0"></text>
</g>
<g>
<title>java.util.TreeSet (142 samples, 0.07%)</title><rect x="178.3" y="211.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="181.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (308 samples, 0.14%)</title><rect x="179.1" y="211.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="182.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (308 samples, 0.14%)</title><rect x="179.1" y="195.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="182.1" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/2110400372.get$Lambda (308 samples, 0.14%)</title><rect x="179.1" y="179.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="182.1" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$120 (308 samples, 0.14%)</title><rect x="179.1" y="163.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="182.1" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (275 samples, 0.13%)</title><rect x="180.8" y="211.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="183.8" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (275 samples, 0.13%)</title><rect x="180.8" y="195.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="183.8" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (6,436 samples, 3.01%)</title><rect x="182.3" y="211.0" width="35.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="185.3" y="222.0">jav..</text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/2110400372.accept (6,436 samples, 3.01%)</title><rect x="182.3" y="195.0" width="35.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="185.3" y="206.0">jav..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (6,436 samples, 3.01%)</title><rect x="182.3" y="179.0" width="35.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="185.3" y="190.0">jav..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,272 samples, 0.59%)</title><rect x="182.3" y="163.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="185.3" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,272 samples, 0.59%)</title><rect x="182.3" y="147.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="185.3" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1592266976.get$Lambda (1,272 samples, 0.59%)</title><rect x="182.3" y="131.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="185.3" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$123 (1,272 samples, 0.59%)</title><rect x="182.3" y="115.0" width="7.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="185.3" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (525 samples, 0.25%)</title><rect x="189.3" y="163.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="192.3" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1592266976.accept (525 samples, 0.25%)</title><rect x="189.3" y="147.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.3" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (525 samples, 0.25%)</title><rect x="189.3" y="131.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.3" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (525 samples, 0.25%)</title><rect x="189.3" y="115.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="192.3" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (525 samples, 0.25%)</title><rect x="189.3" y="99.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="192.3" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (525 samples, 0.25%)</title><rect x="189.3" y="83.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="192.3" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (525 samples, 0.25%)</title><rect x="189.3" y="67.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="192.3" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (525 samples, 0.25%)</title><rect x="189.3" y="51.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.3" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (520 samples, 0.24%)</title><rect x="189.3" y="35.0" width="2.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="192.3" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2,455 samples, 1.15%)</title><rect x="192.2" y="163.0" width="13.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="195.2" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2,455 samples, 1.15%)</title><rect x="192.2" y="147.0" width="13.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="195.2" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1,205 samples, 0.56%)</title><rect x="192.2" y="131.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="195.2" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,205 samples, 0.56%)</title><rect x="192.2" y="115.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="195.2" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,205 samples, 0.56%)</title><rect x="192.2" y="99.0" width="6.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="195.2" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (1,250 samples, 0.58%)</title><rect x="198.8" y="131.0" width="6.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="201.8" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,250 samples, 0.58%)</title><rect x="198.8" y="115.0" width="6.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="201.8" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2,184 samples, 1.02%)</title><rect x="205.7" y="163.0" width="12.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="208.7" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2,184 samples, 1.02%)</title><rect x="205.7" y="147.0" width="12.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="208.7" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (442 samples, 0.21%)</title><rect x="217.8" y="211.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.8" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (442 samples, 0.21%)</title><rect x="217.8" y="195.0" width="2.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="220.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (694 samples, 0.32%)</title><rect x="220.2" y="275.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="223.2" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (177 samples, 0.08%)</title><rect x="220.2" y="259.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="223.2" y="270.0"></text>
</g>
<g>
<title>byte[] (177 samples, 0.08%)</title><rect x="220.2" y="243.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="223.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (517 samples, 0.24%)</title><rect x="221.2" y="259.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="224.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (517 samples, 0.24%)</title><rect x="221.2" y="243.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="224.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1218593486.invoke (517 samples, 0.24%)</title><rect x="221.2" y="227.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="224.2" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (517 samples, 0.24%)</title><rect x="221.2" y="211.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="224.2" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (219 samples, 0.10%)</title><rect x="221.2" y="195.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="224.2" y="206.0"></text>
</g>
<g>
<title>java.lang.String (219 samples, 0.10%)</title><rect x="221.2" y="179.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="224.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (298 samples, 0.14%)</title><rect x="222.4" y="195.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="225.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (298 samples, 0.14%)</title><rect x="222.4" y="179.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="225.4" y="190.0"></text>
</g>
<g>
<title>byte[] (298 samples, 0.14%)</title><rect x="222.4" y="163.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="225.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (538 samples, 0.25%)</title><rect x="224.0" y="275.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="227.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (538 samples, 0.25%)</title><rect x="224.0" y="259.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="227.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (538 samples, 0.25%)</title><rect x="224.0" y="243.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="227.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (538 samples, 0.25%)</title><rect x="224.0" y="227.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="227.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1218593486.invoke (538 samples, 0.25%)</title><rect x="224.0" y="211.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="227.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (538 samples, 0.25%)</title><rect x="224.0" y="195.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="227.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (190 samples, 0.09%)</title><rect x="224.0" y="179.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="227.0" y="190.0"></text>
</g>
<g>
<title>java.lang.String (190 samples, 0.09%)</title><rect x="224.0" y="163.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="227.0" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (348 samples, 0.16%)</title><rect x="225.1" y="179.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="228.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (348 samples, 0.16%)</title><rect x="225.1" y="163.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="228.1" y="174.0"></text>
</g>
<g>
<title>byte[] (348 samples, 0.16%)</title><rect x="225.1" y="147.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="228.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1,552 samples, 0.73%)</title><rect x="227.0" y="275.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="230.0" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (421 samples, 0.20%)</title><rect x="227.0" y="259.0" width="2.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="230.0" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (427 samples, 0.20%)</title><rect x="229.3" y="259.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="232.3" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (427 samples, 0.20%)</title><rect x="229.3" y="243.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="232.3" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (704 samples, 0.33%)</title><rect x="231.7" y="259.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="234.7" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (704 samples, 0.33%)</title><rect x="231.7" y="243.0" width="3.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="234.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (661 samples, 0.31%)</title><rect x="235.6" y="323.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="238.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (661 samples, 0.31%)</title><rect x="235.6" y="307.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="238.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (661 samples, 0.31%)</title><rect x="235.6" y="291.0" width="3.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="238.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (767 samples, 0.36%)</title><rect x="239.2" y="355.0" width="4.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="242.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (268 samples, 0.13%)</title><rect x="243.4" y="355.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="246.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (3,509 samples, 1.64%)</title><rect x="244.9" y="355.0" width="19.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="247.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (288 samples, 0.13%)</title><rect x="244.9" y="339.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="247.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (288 samples, 0.13%)</title><rect x="244.9" y="323.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="247.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$199/111999895.get$Lambda (139 samples, 0.06%)</title><rect x="244.9" y="307.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="247.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$199 (139 samples, 0.06%)</title><rect x="244.9" y="291.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="247.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$200/1476302196.get$Lambda (149 samples, 0.07%)</title><rect x="245.7" y="307.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="248.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$200 (149 samples, 0.07%)</title><rect x="245.7" y="291.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="248.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (342 samples, 0.16%)</title><rect x="246.5" y="339.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="249.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (283 samples, 0.13%)</title><rect x="248.4" y="339.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="251.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (375 samples, 0.18%)</title><rect x="249.9" y="339.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="252.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1,026 samples, 0.48%)</title><rect x="252.0" y="339.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="255.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,026 samples, 0.48%)</title><rect x="252.0" y="323.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="255.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,026 samples, 0.48%)</title><rect x="252.0" y="307.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="255.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,026 samples, 0.48%)</title><rect x="252.0" y="291.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,026 samples, 0.48%)</title><rect x="252.0" y="275.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="255.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,026 samples, 0.48%)</title><rect x="252.0" y="259.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="255.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$183/290094249.run (1,026 samples, 0.48%)</title><rect x="252.0" y="243.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="255.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,026 samples, 0.48%)</title><rect x="252.0" y="227.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="255.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1,026 samples, 0.48%)</title><rect x="252.0" y="211.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="255.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (358 samples, 0.17%)</title><rect x="252.0" y="195.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="255.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (358 samples, 0.17%)</title><rect x="252.0" y="179.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="255.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/384609738.get$Lambda (139 samples, 0.06%)</title><rect x="252.0" y="163.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="255.0" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$204 (139 samples, 0.06%)</title><rect x="252.0" y="147.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="255.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$209/405487975.get$Lambda (219 samples, 0.10%)</title><rect x="252.8" y="163.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="255.8" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$209 (219 samples, 0.10%)</title><rect x="252.8" y="147.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="255.8" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (309 samples, 0.14%)</title><rect x="254.0" y="195.0" width="1.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="257.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (359 samples, 0.17%)</title><rect x="255.7" y="195.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="258.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (359 samples, 0.17%)</title><rect x="255.7" y="179.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="258.7" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (139 samples, 0.06%)</title><rect x="255.7" y="163.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="258.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (220 samples, 0.10%)</title><rect x="256.5" y="163.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="259.5" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (220 samples, 0.10%)</title><rect x="256.5" y="147.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="259.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (903 samples, 0.42%)</title><rect x="257.7" y="339.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="260.7" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (205 samples, 0.10%)</title><rect x="257.7" y="323.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="260.7" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (416 samples, 0.19%)</title><rect x="258.8" y="323.0" width="2.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="261.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (282 samples, 0.13%)</title><rect x="261.1" y="323.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="264.1" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (282 samples, 0.13%)</title><rect x="261.1" y="307.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="264.1" y="318.0"></text>
</g>
<g>
<title>byte[] (282 samples, 0.13%)</title><rect x="261.1" y="291.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="264.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (292 samples, 0.14%)</title><rect x="262.7" y="339.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="265.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (292 samples, 0.14%)</title><rect x="262.7" y="323.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="265.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (317 samples, 0.15%)</title><rect x="264.3" y="467.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="267.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (317 samples, 0.15%)</title><rect x="264.3" y="451.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="267.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (317 samples, 0.15%)</title><rect x="264.3" y="435.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="267.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (555 samples, 0.26%)</title><rect x="266.0" y="499.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="269.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (555 samples, 0.26%)</title><rect x="266.0" y="483.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="269.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (285 samples, 0.13%)</title><rect x="266.0" y="467.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="269.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (270 samples, 0.13%)</title><rect x="267.6" y="467.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="270.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (270 samples, 0.13%)</title><rect x="267.6" y="451.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="270.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (270 samples, 0.13%)</title><rect x="267.6" y="435.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="270.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (19,844 samples, 9.27%)</title><rect x="269.1" y="499.0" width="109.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="272.1" y="510.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (348 samples, 0.16%)</title><rect x="269.1" y="483.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="272.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (348 samples, 0.16%)</title><rect x="269.1" y="467.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="272.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$190/73408929.get$Lambda (205 samples, 0.10%)</title><rect x="269.1" y="451.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="272.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$190 (205 samples, 0.10%)</title><rect x="269.1" y="435.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="272.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$193/6272501.get$Lambda (143 samples, 0.07%)</title><rect x="270.2" y="451.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="273.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$193 (143 samples, 0.07%)</title><rect x="270.2" y="435.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="273.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (546 samples, 0.26%)</title><rect x="271.0" y="483.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="274.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (546 samples, 0.26%)</title><rect x="271.0" y="467.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="274.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$193/6272501.apply (263 samples, 0.12%)</title><rect x="271.0" y="451.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="274.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (263 samples, 0.12%)</title><rect x="271.0" y="435.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="274.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (263 samples, 0.12%)</title><rect x="271.0" y="419.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="274.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (263 samples, 0.12%)</title><rect x="271.0" y="403.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="274.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (283 samples, 0.13%)</title><rect x="272.4" y="451.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="275.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (283 samples, 0.13%)</title><rect x="272.4" y="435.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="275.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (283 samples, 0.13%)</title><rect x="272.4" y="419.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="275.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (281 samples, 0.13%)</title><rect x="274.0" y="483.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="277.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (281 samples, 0.13%)</title><rect x="274.0" y="467.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="277.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (281 samples, 0.13%)</title><rect x="274.0" y="451.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="277.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (281 samples, 0.13%)</title><rect x="274.0" y="435.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="277.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (281 samples, 0.13%)</title><rect x="274.0" y="419.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="277.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (18,669 samples, 8.72%)</title><rect x="275.5" y="483.0" width="103.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.5" y="494.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (198 samples, 0.09%)</title><rect x="275.5" y="467.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="278.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (198 samples, 0.09%)</title><rect x="275.5" y="451.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="278.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$157/923359233.get$Lambda (198 samples, 0.09%)</title><rect x="275.5" y="435.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="278.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$157 (198 samples, 0.09%)</title><rect x="275.5" y="419.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="278.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (17,384 samples, 8.12%)</title><rect x="276.6" y="467.0" width="95.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="279.6" y="478.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (17,384 samples, 8.12%)</title><rect x="276.6" y="451.0" width="95.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="279.6" y="462.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (17,123 samples, 8.00%)</title><rect x="276.6" y="435.0" width="94.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="279.6" y="446.0">java/util/c..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$157/923359233.apply (17,123 samples, 8.00%)</title><rect x="276.6" y="419.0" width="94.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="279.6" y="430.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (17,123 samples, 8.00%)</title><rect x="276.6" y="403.0" width="94.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="279.6" y="414.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (17,123 samples, 8.00%)</title><rect x="276.6" y="387.0" width="94.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="279.6" y="398.0">jdk/interna..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (159 samples, 0.07%)</title><rect x="276.6" y="371.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="279.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (159 samples, 0.07%)</title><rect x="276.6" y="355.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="279.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$188/1803635543.get$Lambda (159 samples, 0.07%)</title><rect x="276.6" y="339.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="279.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$188 (159 samples, 0.07%)</title><rect x="276.6" y="323.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="279.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (7,117 samples, 3.33%)</title><rect x="277.5" y="371.0" width="39.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="280.5" y="382.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (7,117 samples, 3.33%)</title><rect x="277.5" y="355.0" width="39.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="280.5" y="366.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (7,117 samples, 3.33%)</title><rect x="277.5" y="339.0" width="39.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="280.5" y="350.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$188/1803635543.apply (6,811 samples, 3.18%)</title><rect x="277.5" y="323.0" width="37.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="280.5" y="334.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (6,811 samples, 3.18%)</title><rect x="277.5" y="307.0" width="37.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="280.5" y="318.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (6,811 samples, 3.18%)</title><rect x="277.5" y="291.0" width="37.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="280.5" y="302.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (6,811 samples, 3.18%)</title><rect x="277.5" y="275.0" width="37.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="280.5" y="286.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (4,393 samples, 2.05%)</title><rect x="277.5" y="259.0" width="24.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="280.5" y="270.0">j..</text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (1,254 samples, 0.59%)</title><rect x="277.5" y="243.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="280.5" y="254.0"></text>
</g>
<g>
<title>java.lang.String (205 samples, 0.10%)</title><rect x="277.5" y="227.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="280.5" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (504 samples, 0.24%)</title><rect x="278.6" y="227.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="281.6" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (504 samples, 0.24%)</title><rect x="278.6" y="211.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="281.6" y="222.0"></text>
</g>
<g>
<title>byte[] (504 samples, 0.24%)</title><rect x="278.6" y="195.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="281.6" y="206.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (545 samples, 0.25%)</title><rect x="281.4" y="227.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="284.4" y="238.0"></text>
</g>
<g>
<title>byte[] (545 samples, 0.25%)</title><rect x="281.4" y="211.0" width="3.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="284.4" y="222.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (210 samples, 0.10%)</title><rect x="284.4" y="243.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="287.4" y="254.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (210 samples, 0.10%)</title><rect x="284.4" y="227.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="287.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (2,066 samples, 0.97%)</title><rect x="285.6" y="243.0" width="11.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="288.6" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (223 samples, 0.10%)</title><rect x="285.6" y="227.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="288.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (1,505 samples, 0.70%)</title><rect x="286.8" y="227.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="289.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (1,505 samples, 0.70%)</title><rect x="286.8" y="211.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="289.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/158199555.linkToTargetMethod (1,098 samples, 0.51%)</title><rect x="286.8" y="195.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,098 samples, 0.51%)</title><rect x="286.8" y="179.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/517052730.get$Lambda (1,098 samples, 0.51%)</title><rect x="286.8" y="163.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.8" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$65 (1,098 samples, 0.51%)</title><rect x="286.8" y="147.0" width="6.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="289.8" y="158.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (407 samples, 0.19%)</title><rect x="292.9" y="195.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="295.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/517052730.run (407 samples, 0.19%)</title><rect x="292.9" y="179.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (407 samples, 0.19%)</title><rect x="292.9" y="163.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.9" y="174.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (407 samples, 0.19%)</title><rect x="292.9" y="147.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="295.9" y="158.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (407 samples, 0.19%)</title><rect x="292.9" y="131.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="295.9" y="142.0"></text>
</g>
<g>
<title>java.lang.Integer (407 samples, 0.19%)</title><rect x="292.9" y="115.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="295.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (338 samples, 0.16%)</title><rect x="295.1" y="227.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="298.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (338 samples, 0.16%)</title><rect x="295.1" y="211.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="298.1" y="222.0"></text>
</g>
<g>
<title>int[] (338 samples, 0.16%)</title><rect x="295.1" y="195.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="298.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (863 samples, 0.40%)</title><rect x="297.0" y="243.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="300.0" y="254.0"></text>
</g>
<g>
<title>byte[] (453 samples, 0.21%)</title><rect x="297.0" y="227.0" width="2.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="300.0" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (410 samples, 0.19%)</title><rect x="299.5" y="227.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="302.5" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (410 samples, 0.19%)</title><rect x="299.5" y="211.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.5" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (410 samples, 0.19%)</title><rect x="299.5" y="195.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="302.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2,418 samples, 1.13%)</title><rect x="301.7" y="259.0" width="13.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="304.7" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (689 samples, 0.32%)</title><rect x="301.7" y="243.0" width="3.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="304.7" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (644 samples, 0.30%)</title><rect x="305.5" y="243.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="308.5" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (644 samples, 0.30%)</title><rect x="305.5" y="227.0" width="3.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="308.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,085 samples, 0.51%)</title><rect x="309.1" y="243.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="312.1" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,085 samples, 0.51%)</title><rect x="309.1" y="227.0" width="6.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="312.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (306 samples, 0.14%)</title><rect x="315.1" y="323.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="318.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (306 samples, 0.14%)</title><rect x="315.1" y="307.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="318.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (306 samples, 0.14%)</title><rect x="315.1" y="291.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="318.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (9,847 samples, 4.60%)</title><rect x="316.8" y="371.0" width="54.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="319.8" y="382.0">jdk/i..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (776 samples, 0.36%)</title><rect x="316.8" y="355.0" width="4.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="319.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (8,805 samples, 4.11%)</title><rect x="321.1" y="355.0" width="48.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="324.1" y="366.0">jdk/..</text>
</g>
<g>
<title>java.lang.Object (135 samples, 0.06%)</title><rect x="321.1" y="339.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="324.1" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList (269 samples, 0.13%)</title><rect x="321.8" y="339.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="324.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (230 samples, 0.11%)</title><rect x="323.3" y="339.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="326.3" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (413 samples, 0.19%)</title><rect x="324.6" y="339.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="327.6" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (413 samples, 0.19%)</title><rect x="324.6" y="323.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="327.6" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (413 samples, 0.19%)</title><rect x="324.6" y="307.0" width="2.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="327.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (221 samples, 0.10%)</title><rect x="326.8" y="339.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="329.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (221 samples, 0.10%)</title><rect x="326.8" y="323.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="329.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (614 samples, 0.29%)</title><rect x="328.0" y="339.0" width="3.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="331.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (410 samples, 0.19%)</title><rect x="331.4" y="339.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="334.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (465 samples, 0.22%)</title><rect x="333.7" y="339.0" width="2.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="336.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (583 samples, 0.27%)</title><rect x="336.3" y="339.0" width="3.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="339.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (2,622 samples, 1.23%)</title><rect x="339.5" y="339.0" width="14.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="342.5" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (205 samples, 0.10%)</title><rect x="339.5" y="323.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="342.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (138 samples, 0.06%)</title><rect x="340.6" y="323.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="343.6" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (242 samples, 0.11%)</title><rect x="341.4" y="323.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="344.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (130 samples, 0.06%)</title><rect x="342.7" y="323.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="345.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (143 samples, 0.07%)</title><rect x="343.4" y="323.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="346.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (143 samples, 0.07%)</title><rect x="343.4" y="307.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="346.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$183/290094249.get$Lambda (143 samples, 0.07%)</title><rect x="343.4" y="291.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="346.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$183 (143 samples, 0.07%)</title><rect x="343.4" y="275.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="346.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (199 samples, 0.09%)</title><rect x="344.2" y="323.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (199 samples, 0.09%)</title><rect x="344.2" y="307.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="347.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (209 samples, 0.10%)</title><rect x="345.3" y="323.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="348.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (281 samples, 0.13%)</title><rect x="346.5" y="323.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="349.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1,075 samples, 0.50%)</title><rect x="348.0" y="323.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="351.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (214 samples, 0.10%)</title><rect x="348.0" y="307.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="351.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (289 samples, 0.14%)</title><rect x="349.2" y="307.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="352.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (144 samples, 0.07%)</title><rect x="350.8" y="307.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="353.8" y="318.0"></text>
</g>
<g>
<title>java.lang.Object (144 samples, 0.07%)</title><rect x="350.8" y="291.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="353.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (428 samples, 0.20%)</title><rect x="351.6" y="307.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="354.6" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (134 samples, 0.06%)</title><rect x="351.6" y="291.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="354.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (128 samples, 0.06%)</title><rect x="352.3" y="291.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="355.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (166 samples, 0.08%)</title><rect x="353.0" y="291.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="356.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (1,634 samples, 0.76%)</title><rect x="353.9" y="339.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="356.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (128 samples, 0.06%)</title><rect x="353.9" y="323.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="356.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (132 samples, 0.06%)</title><rect x="354.6" y="323.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="357.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (146 samples, 0.07%)</title><rect x="355.4" y="323.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="358.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (203 samples, 0.09%)</title><rect x="356.2" y="323.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="359.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (203 samples, 0.09%)</title><rect x="356.2" y="307.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="359.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1,025 samples, 0.48%)</title><rect x="357.3" y="323.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="360.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (209 samples, 0.10%)</title><rect x="357.3" y="307.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="360.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (291 samples, 0.14%)</title><rect x="358.5" y="307.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="361.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (145 samples, 0.07%)</title><rect x="360.1" y="307.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="363.1" y="318.0"></text>
</g>
<g>
<title>java.lang.Object (145 samples, 0.07%)</title><rect x="360.1" y="291.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="363.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (380 samples, 0.18%)</title><rect x="360.9" y="307.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="363.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (120 samples, 0.06%)</title><rect x="360.9" y="291.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="363.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (131 samples, 0.06%)</title><rect x="361.5" y="291.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="364.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (129 samples, 0.06%)</title><rect x="362.2" y="291.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="365.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (450 samples, 0.21%)</title><rect x="363.0" y="339.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="366.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (447 samples, 0.21%)</title><rect x="363.0" y="323.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="366.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (210 samples, 0.10%)</title><rect x="363.0" y="307.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="366.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (237 samples, 0.11%)</title><rect x="364.1" y="307.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="367.1" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (237 samples, 0.11%)</title><rect x="364.1" y="291.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="367.1" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (237 samples, 0.11%)</title><rect x="364.1" y="275.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="367.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (237 samples, 0.11%)</title><rect x="364.1" y="259.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="367.1" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (237 samples, 0.11%)</title><rect x="364.1" y="243.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="367.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (756 samples, 0.35%)</title><rect x="365.4" y="339.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="368.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/158199555.linkToTargetMethod (216 samples, 0.10%)</title><rect x="365.4" y="323.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="368.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (216 samples, 0.10%)</title><rect x="365.4" y="307.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="368.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$160/158727963.get$Lambda (216 samples, 0.10%)</title><rect x="365.4" y="291.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="368.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$160 (216 samples, 0.10%)</title><rect x="365.4" y="275.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="368.4" y="286.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (540 samples, 0.25%)</title><rect x="366.6" y="323.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="369.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$160/158727963.run (540 samples, 0.25%)</title><rect x="366.6" y="307.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="369.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (540 samples, 0.25%)</title><rect x="366.6" y="291.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="369.6" y="302.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (148 samples, 0.07%)</title><rect x="366.6" y="275.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="369.6" y="286.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (392 samples, 0.18%)</title><rect x="367.4" y="275.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="370.4" y="286.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (205 samples, 0.10%)</title><rect x="367.4" y="259.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="370.4" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (187 samples, 0.09%)</title><rect x="368.6" y="259.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="371.6" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (187 samples, 0.09%)</title><rect x="368.6" y="243.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="371.6" y="254.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (187 samples, 0.09%)</title><rect x="368.6" y="227.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="371.6" y="238.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (187 samples, 0.09%)</title><rect x="368.6" y="211.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="371.6" y="222.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (187 samples, 0.09%)</title><rect x="368.6" y="195.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="371.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (262 samples, 0.12%)</title><rect x="369.6" y="355.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="372.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (262 samples, 0.12%)</title><rect x="369.6" y="339.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="372.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (261 samples, 0.12%)</title><rect x="371.0" y="435.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="374.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (261 samples, 0.12%)</title><rect x="371.0" y="419.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="374.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (261 samples, 0.12%)</title><rect x="371.0" y="403.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="374.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (264 samples, 0.12%)</title><rect x="372.5" y="467.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="375.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (264 samples, 0.12%)</title><rect x="372.5" y="451.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="375.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (264 samples, 0.12%)</title><rect x="372.5" y="435.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="375.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (264 samples, 0.12%)</title><rect x="372.5" y="419.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="375.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (264 samples, 0.12%)</title><rect x="372.5" y="403.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="375.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (823 samples, 0.38%)</title><rect x="373.9" y="467.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="376.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (525 samples, 0.25%)</title><rect x="373.9" y="451.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="376.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (525 samples, 0.25%)</title><rect x="373.9" y="435.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="376.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/131929771.linkToTargetMethod (525 samples, 0.25%)</title><rect x="373.9" y="419.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="376.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1881566527.invoke (525 samples, 0.25%)</title><rect x="373.9" y="403.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="376.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1897663661.invoke (525 samples, 0.25%)</title><rect x="373.9" y="387.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="376.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (525 samples, 0.25%)</title><rect x="373.9" y="371.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="376.9" y="382.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (190 samples, 0.09%)</title><rect x="373.9" y="355.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="376.9" y="366.0"></text>
</g>
<g>
<title>java.lang.String (190 samples, 0.09%)</title><rect x="373.9" y="339.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="376.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (335 samples, 0.16%)</title><rect x="375.0" y="355.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="378.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (335 samples, 0.16%)</title><rect x="375.0" y="339.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="378.0" y="350.0"></text>
</g>
<g>
<title>byte[] (335 samples, 0.16%)</title><rect x="375.0" y="323.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="378.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (298 samples, 0.14%)</title><rect x="376.8" y="451.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="379.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (298 samples, 0.14%)</title><rect x="376.8" y="435.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="379.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (351 samples, 0.16%)</title><rect x="378.5" y="547.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="381.5" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (351 samples, 0.16%)</title><rect x="378.5" y="531.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="381.5" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (351 samples, 0.16%)</title><rect x="378.5" y="515.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="381.5" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (351 samples, 0.16%)</title><rect x="378.5" y="499.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="381.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (1,467 samples, 0.69%)</title><rect x="380.4" y="547.0" width="8.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="383.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (1,050 samples, 0.49%)</title><rect x="380.4" y="531.0" width="5.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="383.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (417 samples, 0.19%)</title><rect x="386.2" y="531.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="389.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (417 samples, 0.19%)</title><rect x="386.2" y="515.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="389.2" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.now (205 samples, 0.10%)</title><rect x="386.2" y="499.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="389.2" y="510.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (205 samples, 0.10%)</title><rect x="386.2" y="483.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="389.2" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (205 samples, 0.10%)</title><rect x="386.2" y="467.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="389.2" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.create (205 samples, 0.10%)</title><rect x="386.2" y="451.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="389.2" y="462.0"></text>
</g>
<g>
<title>java.time.Instant (205 samples, 0.10%)</title><rect x="386.2" y="435.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="389.2" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (212 samples, 0.10%)</title><rect x="387.3" y="499.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.3" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (212 samples, 0.10%)</title><rect x="387.3" y="483.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="390.3" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (212 samples, 0.10%)</title><rect x="387.3" y="467.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="390.3" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (212 samples, 0.10%)</title><rect x="387.3" y="451.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="390.3" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (212 samples, 0.10%)</title><rect x="387.3" y="435.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="390.3" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (212 samples, 0.10%)</title><rect x="387.3" y="419.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="390.3" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (212 samples, 0.10%)</title><rect x="387.3" y="403.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="390.3" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.create (212 samples, 0.10%)</title><rect x="387.3" y="387.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="390.3" y="398.0"></text>
</g>
<g>
<title>java.time.Instant (212 samples, 0.10%)</title><rect x="387.3" y="371.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="390.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,753 samples, 0.82%)</title><rect x="388.7" y="643.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="391.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (1,753 samples, 0.82%)</title><rect x="388.7" y="627.0" width="9.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="391.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1,753 samples, 0.82%)</title><rect x="388.7" y="611.0" width="9.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="391.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1,753 samples, 0.82%)</title><rect x="388.7" y="595.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="391.7" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (1,753 samples, 0.82%)</title><rect x="388.7" y="579.0" width="9.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="391.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$291/1350458117.run (5,153 samples, 2.41%)</title><rect x="398.4" y="643.0" width="28.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="401.4" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (5,153 samples, 2.41%)</title><rect x="398.4" y="627.0" width="28.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="401.4" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (5,153 samples, 2.41%)</title><rect x="398.4" y="611.0" width="28.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="401.4" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (5,153 samples, 2.41%)</title><rect x="398.4" y="595.0" width="28.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="401.4" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5,153 samples, 2.41%)</title><rect x="398.4" y="579.0" width="28.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="401.4" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5,153 samples, 2.41%)</title><rect x="398.4" y="563.0" width="28.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="401.4" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5,153 samples, 2.41%)</title><rect x="398.4" y="547.0" width="28.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.4" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5,153 samples, 2.41%)</title><rect x="398.4" y="531.0" width="28.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="401.4" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5,153 samples, 2.41%)</title><rect x="398.4" y="515.0" width="28.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="401.4" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5,153 samples, 2.41%)</title><rect x="398.4" y="499.0" width="28.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="401.4" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (5,153 samples, 2.41%)</title><rect x="398.4" y="483.0" width="28.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="401.4" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (4,743 samples, 2.22%)</title><rect x="398.4" y="467.0" width="26.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="401.4" y="478.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (780 samples, 0.36%)</title><rect x="398.4" y="451.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="401.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (780 samples, 0.36%)</title><rect x="398.4" y="435.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="401.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$293/1718221436.get$Lambda (646 samples, 0.30%)</title><rect x="398.4" y="419.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="401.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$293 (646 samples, 0.30%)</title><rect x="398.4" y="403.0" width="3.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="401.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$301/678961063.get$Lambda (134 samples, 0.06%)</title><rect x="401.9" y="419.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="404.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$301 (134 samples, 0.06%)</title><rect x="401.9" y="403.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="404.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (3,963 samples, 1.85%)</title><rect x="402.7" y="451.0" width="21.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="405.7" y="462.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (365 samples, 0.17%)</title><rect x="402.7" y="435.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="405.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3,598 samples, 1.68%)</title><rect x="404.7" y="435.0" width="19.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="407.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (3,598 samples, 1.68%)</title><rect x="404.7" y="419.0" width="19.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="407.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,598 samples, 1.68%)</title><rect x="404.7" y="403.0" width="19.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="407.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,354 samples, 0.63%)</title><rect x="404.7" y="387.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="407.7" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (479 samples, 0.22%)</title><rect x="404.7" y="371.0" width="2.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="407.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$297/1191880831.apply (818 samples, 0.38%)</title><rect x="407.3" y="371.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="410.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (818 samples, 0.38%)</title><rect x="407.3" y="355.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="410.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (818 samples, 0.38%)</title><rect x="407.3" y="339.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="410.3" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (177 samples, 0.08%)</title><rect x="407.3" y="323.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="410.3" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (177 samples, 0.08%)</title><rect x="407.3" y="307.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="410.3" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (177 samples, 0.08%)</title><rect x="407.3" y="291.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="410.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (641 samples, 0.30%)</title><rect x="408.3" y="323.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="411.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (123 samples, 0.06%)</title><rect x="408.3" y="307.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="411.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (123 samples, 0.06%)</title><rect x="408.3" y="291.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="411.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$303/1726288971.get$Lambda (123 samples, 0.06%)</title><rect x="408.3" y="275.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="411.3" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$303 (123 samples, 0.06%)</title><rect x="408.3" y="259.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="411.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (518 samples, 0.24%)</title><rect x="409.0" y="307.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="412.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (518 samples, 0.24%)</title><rect x="409.0" y="291.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="412.0" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (290 samples, 0.14%)</title><rect x="409.0" y="275.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="412.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (222 samples, 0.10%)</title><rect x="410.6" y="275.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="413.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (222 samples, 0.10%)</title><rect x="410.6" y="259.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="413.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (222 samples, 0.10%)</title><rect x="410.6" y="243.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="413.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$141/422005947.apply (55 samples, 0.03%)</title><rect x="411.8" y="371.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="414.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (55 samples, 0.03%)</title><rect x="411.8" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="414.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (53 samples, 0.02%)</title><rect x="411.8" y="339.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="414.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (52 samples, 0.02%)</title><rect x="411.8" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="414.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (49 samples, 0.02%)</title><rect x="411.9" y="307.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="414.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2,244 samples, 1.05%)</title><rect x="412.1" y="387.0" width="12.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="415.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2,244 samples, 1.05%)</title><rect x="412.1" y="371.0" width="12.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="415.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$240/2066681415.apply (2,242 samples, 1.05%)</title><rect x="412.1" y="355.0" width="12.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="415.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (2,242 samples, 1.05%)</title><rect x="412.1" y="339.0" width="12.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="415.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2,242 samples, 1.05%)</title><rect x="412.1" y="323.0" width="12.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="415.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$153/448982412.apply (2,242 samples, 1.05%)</title><rect x="412.1" y="307.0" width="12.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="415.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (2,242 samples, 1.05%)</title><rect x="412.1" y="291.0" width="12.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (142 samples, 0.07%)</title><rect x="412.1" y="275.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (142 samples, 0.07%)</title><rect x="412.1" y="259.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="415.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$297/1191880831.get$Lambda (142 samples, 0.07%)</title><rect x="412.1" y="243.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="415.1" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$297 (142 samples, 0.07%)</title><rect x="412.1" y="227.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="415.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (549 samples, 0.26%)</title><rect x="412.9" y="275.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="415.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (549 samples, 0.26%)</title><rect x="412.9" y="259.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="415.9" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (292 samples, 0.14%)</title><rect x="412.9" y="243.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="415.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (257 samples, 0.12%)</title><rect x="414.5" y="243.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="417.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (257 samples, 0.12%)</title><rect x="414.5" y="227.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="417.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (257 samples, 0.12%)</title><rect x="414.5" y="211.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="417.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (681 samples, 0.32%)</title><rect x="416.0" y="275.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="419.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (136 samples, 0.06%)</title><rect x="416.0" y="259.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="419.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (136 samples, 0.06%)</title><rect x="416.0" y="243.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="419.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$298/1270726878.get$Lambda (136 samples, 0.06%)</title><rect x="416.0" y="227.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="419.0" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$298 (136 samples, 0.06%)</title><rect x="416.0" y="211.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="419.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (545 samples, 0.25%)</title><rect x="416.7" y="259.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="419.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (545 samples, 0.25%)</title><rect x="416.7" y="243.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="419.7" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (296 samples, 0.14%)</title><rect x="416.7" y="227.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="419.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (249 samples, 0.12%)</title><rect x="418.3" y="227.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="421.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (249 samples, 0.12%)</title><rect x="418.3" y="211.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="421.3" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (249 samples, 0.12%)</title><rect x="418.3" y="195.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="421.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (870 samples, 0.41%)</title><rect x="419.7" y="275.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (474 samples, 0.22%)</title><rect x="419.7" y="259.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="422.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (261 samples, 0.12%)</title><rect x="419.7" y="243.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="422.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (213 samples, 0.10%)</title><rect x="421.1" y="243.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="424.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (213 samples, 0.10%)</title><rect x="421.1" y="227.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="424.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (213 samples, 0.10%)</title><rect x="421.1" y="211.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="424.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (396 samples, 0.19%)</title><rect x="422.3" y="259.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="425.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (192 samples, 0.09%)</title><rect x="422.3" y="243.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="425.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (204 samples, 0.10%)</title><rect x="423.4" y="243.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="426.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (204 samples, 0.10%)</title><rect x="423.4" y="227.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="426.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (204 samples, 0.10%)</title><rect x="423.4" y="211.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="426.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (204 samples, 0.10%)</title><rect x="423.4" y="195.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="426.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (204 samples, 0.10%)</title><rect x="423.4" y="179.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="426.4" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (204 samples, 0.10%)</title><rect x="423.4" y="163.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="426.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (410 samples, 0.19%)</title><rect x="424.5" y="467.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="427.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (410 samples, 0.19%)</title><rect x="424.5" y="451.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="427.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (410 samples, 0.19%)</title><rect x="424.5" y="435.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="427.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (410 samples, 0.19%)</title><rect x="424.5" y="419.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="427.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (410 samples, 0.19%)</title><rect x="424.5" y="403.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="427.5" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (410 samples, 0.19%)</title><rect x="424.5" y="387.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="427.5" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (200 samples, 0.09%)</title><rect x="424.5" y="371.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="427.5" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (200 samples, 0.09%)</title><rect x="424.5" y="355.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="427.5" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (210 samples, 0.10%)</title><rect x="425.6" y="371.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="428.6" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (210 samples, 0.10%)</title><rect x="425.6" y="355.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="428.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (31,770 samples, 14.84%)</title><rect x="426.8" y="643.0" width="175.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="429.8" y="654.0">jdk/internal/net/http/c..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (31,770 samples, 14.84%)</title><rect x="426.8" y="627.0" width="175.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="429.8" y="638.0">jdk/internal/net/http/c..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (25,985 samples, 12.14%)</title><rect x="426.8" y="611.0" width="143.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="429.8" y="622.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$183/290094249.run (25,985 samples, 12.14%)</title><rect x="426.8" y="595.0" width="143.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="429.8" y="606.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (25,985 samples, 12.14%)</title><rect x="426.8" y="579.0" width="143.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="429.8" y="590.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (687 samples, 0.32%)</title><rect x="426.8" y="563.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="429.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (687 samples, 0.32%)</title><rect x="426.8" y="547.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="429.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (687 samples, 0.32%)</title><rect x="426.8" y="531.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="429.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (687 samples, 0.32%)</title><rect x="426.8" y="515.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="429.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1524960486.linkToTargetMethod (317 samples, 0.15%)</title><rect x="426.8" y="499.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="429.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1990160809.invoke (317 samples, 0.15%)</title><rect x="426.8" y="483.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="429.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (317 samples, 0.15%)</title><rect x="426.8" y="467.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="429.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (317 samples, 0.15%)</title><rect x="426.8" y="451.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="429.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (317 samples, 0.15%)</title><rect x="426.8" y="435.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="429.8" y="446.0"></text>
</g>
<g>
<title>byte[] (317 samples, 0.15%)</title><rect x="426.8" y="419.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="429.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (370 samples, 0.17%)</title><rect x="428.6" y="499.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="431.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (370 samples, 0.17%)</title><rect x="428.6" y="483.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="431.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (370 samples, 0.17%)</title><rect x="428.6" y="467.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="431.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$285/131615096.get$Lambda (370 samples, 0.17%)</title><rect x="428.6" y="451.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="431.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$285 (370 samples, 0.17%)</title><rect x="428.6" y="435.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="431.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (25,288 samples, 11.82%)</title><rect x="430.6" y="563.0" width="139.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="433.6" y="574.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (25,288 samples, 11.82%)</title><rect x="430.6" y="547.0" width="139.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="433.6" y="558.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (25,288 samples, 11.82%)</title><rect x="430.6" y="531.0" width="139.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="433.6" y="542.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (25,288 samples, 11.82%)</title><rect x="430.6" y="515.0" width="139.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="433.6" y="526.0">jdk/internal/net/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (12,353 samples, 5.77%)</title><rect x="430.6" y="499.0" width="68.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="433.6" y="510.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12,353 samples, 5.77%)</title><rect x="430.6" y="483.0" width="68.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="433.6" y="494.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (12,353 samples, 5.77%)</title><rect x="430.6" y="467.0" width="68.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="433.6" y="478.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (12,353 samples, 5.77%)</title><rect x="430.6" y="451.0" width="68.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="433.6" y="462.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (12,353 samples, 5.77%)</title><rect x="430.6" y="435.0" width="68.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="433.6" y="446.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (12,353 samples, 5.77%)</title><rect x="430.6" y="419.0" width="68.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="433.6" y="430.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (12,353 samples, 5.77%)</title><rect x="430.6" y="403.0" width="68.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="433.6" y="414.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (11,989 samples, 5.60%)</title><rect x="430.6" y="387.0" width="66.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="433.6" y="398.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (11,989 samples, 5.60%)</title><rect x="430.6" y="371.0" width="66.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="433.6" y="382.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (11,774 samples, 5.50%)</title><rect x="430.6" y="355.0" width="64.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="433.6" y="366.0">java/ut..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (245 samples, 0.11%)</title><rect x="430.6" y="339.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="433.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$298/1270726878.apply (247 samples, 0.12%)</title><rect x="432.0" y="339.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="435.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (247 samples, 0.12%)</title><rect x="432.0" y="323.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="435.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (247 samples, 0.12%)</title><rect x="432.0" y="307.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="435.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (247 samples, 0.12%)</title><rect x="432.0" y="291.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="435.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (247 samples, 0.12%)</title><rect x="432.0" y="275.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="435.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$141/422005947.apply (10,779 samples, 5.04%)</title><rect x="433.3" y="339.0" width="59.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="436.3" y="350.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (10,779 samples, 5.04%)</title><rect x="433.3" y="323.0" width="59.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="436.3" y="334.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (165 samples, 0.08%)</title><rect x="433.3" y="307.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="436.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (165 samples, 0.08%)</title><rect x="433.3" y="291.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="436.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$327/837206861.get$Lambda (165 samples, 0.08%)</title><rect x="433.3" y="275.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="436.3" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$327 (165 samples, 0.08%)</title><rect x="433.3" y="259.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="436.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (566 samples, 0.26%)</title><rect x="434.2" y="307.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="437.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (566 samples, 0.26%)</title><rect x="434.2" y="291.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="437.2" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (323 samples, 0.15%)</title><rect x="434.2" y="275.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="437.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (243 samples, 0.11%)</title><rect x="436.0" y="275.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="439.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (243 samples, 0.11%)</title><rect x="436.0" y="259.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="439.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (243 samples, 0.11%)</title><rect x="436.0" y="243.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="439.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (10,048 samples, 4.69%)</title><rect x="437.4" y="307.0" width="55.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="440.4" y="318.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (127 samples, 0.06%)</title><rect x="437.4" y="291.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="440.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (127 samples, 0.06%)</title><rect x="437.4" y="275.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="440.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$326/924321155.get$Lambda (127 samples, 0.06%)</title><rect x="437.4" y="259.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="440.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$326 (127 samples, 0.06%)</title><rect x="437.4" y="243.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="440.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (554 samples, 0.26%)</title><rect x="438.1" y="291.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="441.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (554 samples, 0.26%)</title><rect x="438.1" y="275.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="441.1" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (305 samples, 0.14%)</title><rect x="438.1" y="259.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="441.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (249 samples, 0.12%)</title><rect x="439.7" y="259.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="442.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (249 samples, 0.12%)</title><rect x="439.7" y="243.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="442.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (249 samples, 0.12%)</title><rect x="439.7" y="227.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="442.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (9,367 samples, 4.38%)</title><rect x="441.1" y="291.0" width="51.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="444.1" y="302.0">jdk/i..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$126/407885674.apply (670 samples, 0.31%)</title><rect x="441.1" y="275.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="444.1" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (670 samples, 0.31%)</title><rect x="441.1" y="259.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="444.1" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (670 samples, 0.31%)</title><rect x="441.1" y="243.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="444.1" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (257 samples, 0.12%)</title><rect x="441.1" y="227.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="444.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (413 samples, 0.19%)</title><rect x="442.5" y="227.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="445.5" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (164 samples, 0.08%)</title><rect x="442.5" y="211.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="445.5" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (249 samples, 0.12%)</title><rect x="443.4" y="211.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="446.4" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseInfoImpl (188 samples, 0.09%)</title><rect x="444.8" y="275.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="447.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (8,509 samples, 3.98%)</title><rect x="445.8" y="275.0" width="47.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="448.8" y="286.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (236 samples, 0.11%)</title><rect x="445.8" y="259.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="448.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (236 samples, 0.11%)</title><rect x="445.8" y="243.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="448.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$324/1017895259.get$Lambda (114 samples, 0.05%)</title><rect x="445.8" y="227.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="448.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$324 (114 samples, 0.05%)</title><rect x="445.8" y="211.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="448.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$325/1556724864.get$Lambda (122 samples, 0.06%)</title><rect x="446.5" y="227.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="449.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$325 (122 samples, 0.06%)</title><rect x="446.5" y="211.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="449.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1103159731.linkToTargetMethod (299 samples, 0.14%)</title><rect x="447.1" y="259.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="450.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1857965983.invokeStatic (299 samples, 0.14%)</title><rect x="447.1" y="243.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="450.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$315/806523735.get$Lambda (299 samples, 0.14%)</title><rect x="447.1" y="227.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="450.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$315 (299 samples, 0.14%)</title><rect x="447.1" y="211.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="450.1" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (1,709 samples, 0.80%)</title><rect x="448.8" y="259.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="451.8" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (655 samples, 0.31%)</title><rect x="448.8" y="243.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.8" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (213 samples, 0.10%)</title><rect x="448.8" y="227.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="451.8" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (213 samples, 0.10%)</title><rect x="448.8" y="211.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="451.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (442 samples, 0.21%)</title><rect x="450.0" y="227.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="453.0" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (442 samples, 0.21%)</title><rect x="450.0" y="211.0" width="2.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="453.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (560 samples, 0.26%)</title><rect x="452.4" y="243.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="455.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (560 samples, 0.26%)</title><rect x="452.4" y="227.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="455.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (560 samples, 0.26%)</title><rect x="452.4" y="211.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="455.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (181 samples, 0.08%)</title><rect x="452.4" y="195.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="455.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (181 samples, 0.08%)</title><rect x="452.4" y="179.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="455.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (181 samples, 0.08%)</title><rect x="452.4" y="163.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="455.4" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (181 samples, 0.08%)</title><rect x="452.4" y="147.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="455.4" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$312/1315271981.get (200 samples, 0.09%)</title><rect x="453.4" y="195.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="456.4" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (200 samples, 0.09%)</title><rect x="453.4" y="179.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="456.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (179 samples, 0.08%)</title><rect x="454.5" y="195.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="457.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (179 samples, 0.08%)</title><rect x="454.5" y="179.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="457.5" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (179 samples, 0.08%)</title><rect x="454.5" y="163.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="457.5" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (179 samples, 0.08%)</title><rect x="454.5" y="147.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="457.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (494 samples, 0.23%)</title><rect x="455.5" y="243.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="458.5" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (494 samples, 0.23%)</title><rect x="455.5" y="227.0" width="2.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="458.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,062 samples, 0.50%)</title><rect x="458.2" y="259.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (536 samples, 0.25%)</title><rect x="458.2" y="243.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="461.2" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (289 samples, 0.14%)</title><rect x="458.2" y="227.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="461.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (247 samples, 0.12%)</title><rect x="459.8" y="227.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="462.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (247 samples, 0.12%)</title><rect x="459.8" y="211.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="462.8" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (247 samples, 0.12%)</title><rect x="459.8" y="195.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="462.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (526 samples, 0.25%)</title><rect x="461.2" y="243.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="464.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (526 samples, 0.25%)</title><rect x="461.2" y="227.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="464.2" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (286 samples, 0.13%)</title><rect x="461.2" y="211.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="464.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (240 samples, 0.11%)</title><rect x="462.8" y="211.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="465.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (240 samples, 0.11%)</title><rect x="462.8" y="195.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="465.8" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (240 samples, 0.11%)</title><rect x="462.8" y="179.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="465.8" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (170 samples, 0.08%)</title><rect x="464.1" y="259.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="467.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (229 samples, 0.11%)</title><rect x="465.0" y="259.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="468.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (210 samples, 0.10%)</title><rect x="466.3" y="259.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="469.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (116 samples, 0.05%)</title><rect x="467.4" y="259.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="470.4" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (116 samples, 0.05%)</title><rect x="467.4" y="243.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="470.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4,478 samples, 2.09%)</title><rect x="468.1" y="259.0" width="24.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="471.1" y="270.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$315/806523735.run (4,478 samples, 2.09%)</title><rect x="468.1" y="243.0" width="24.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="471.1" y="254.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (4,478 samples, 2.09%)</title><rect x="468.1" y="227.0" width="24.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="471.1" y="238.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (566 samples, 0.26%)</title><rect x="468.1" y="211.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="471.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (566 samples, 0.26%)</title><rect x="468.1" y="195.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$318/909570881.get$Lambda (122 samples, 0.06%)</title><rect x="468.1" y="179.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="471.1" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$318 (122 samples, 0.06%)</title><rect x="468.1" y="163.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="471.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$320/2039870922.get$Lambda (186 samples, 0.09%)</title><rect x="468.7" y="179.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="471.7" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$320 (186 samples, 0.09%)</title><rect x="468.7" y="163.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="471.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$322/665793741.get$Lambda (258 samples, 0.12%)</title><rect x="469.8" y="179.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="472.8" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$322 (258 samples, 0.12%)</title><rect x="469.8" y="163.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="472.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (582 samples, 0.27%)</title><rect x="471.2" y="211.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="474.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (582 samples, 0.27%)</title><rect x="471.2" y="195.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="474.2" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (340 samples, 0.16%)</title><rect x="471.2" y="179.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="474.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (242 samples, 0.11%)</title><rect x="473.1" y="179.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="476.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (242 samples, 0.11%)</title><rect x="473.1" y="163.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="476.1" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (242 samples, 0.11%)</title><rect x="473.1" y="147.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="476.1" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (281 samples, 0.13%)</title><rect x="474.4" y="211.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="477.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (255 samples, 0.12%)</title><rect x="476.0" y="211.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="479.0" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (255 samples, 0.12%)</title><rect x="476.0" y="195.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="479.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (699 samples, 0.33%)</title><rect x="477.4" y="211.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (699 samples, 0.33%)</title><rect x="477.4" y="195.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="480.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (182 samples, 0.09%)</title><rect x="477.4" y="179.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="480.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (182 samples, 0.09%)</title><rect x="477.4" y="163.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="480.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$323/1485242558.get$Lambda (182 samples, 0.09%)</title><rect x="477.4" y="147.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.4" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$323 (182 samples, 0.09%)</title><rect x="477.4" y="131.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="480.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (515 samples, 0.24%)</title><rect x="478.4" y="179.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="481.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (515 samples, 0.24%)</title><rect x="478.4" y="163.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="481.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (515 samples, 0.24%)</title><rect x="478.4" y="147.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="481.4" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (296 samples, 0.14%)</title><rect x="478.4" y="131.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="481.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (219 samples, 0.10%)</title><rect x="480.0" y="131.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="483.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (219 samples, 0.10%)</title><rect x="480.0" y="115.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="483.0" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (219 samples, 0.10%)</title><rect x="480.0" y="99.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="483.0" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (763 samples, 0.36%)</title><rect x="481.2" y="211.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="484.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (763 samples, 0.36%)</title><rect x="481.2" y="195.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="484.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/940553268.invoke (763 samples, 0.36%)</title><rect x="481.2" y="179.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="484.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (763 samples, 0.36%)</title><rect x="481.2" y="163.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="484.2" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (187 samples, 0.09%)</title><rect x="481.2" y="147.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="484.2" y="158.0"></text>
</g>
<g>
<title>java.lang.String (187 samples, 0.09%)</title><rect x="481.2" y="131.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="484.2" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (576 samples, 0.27%)</title><rect x="482.2" y="147.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="485.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (576 samples, 0.27%)</title><rect x="482.2" y="131.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="485.2" y="142.0"></text>
</g>
<g>
<title>byte[] (576 samples, 0.27%)</title><rect x="482.2" y="115.0" width="3.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="485.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (1,332 samples, 0.62%)</title><rect x="485.4" y="211.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="488.4" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (390 samples, 0.18%)</title><rect x="485.4" y="195.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="488.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (942 samples, 0.44%)</title><rect x="487.6" y="195.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (942 samples, 0.44%)</title><rect x="487.6" y="179.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/940553268.invoke (942 samples, 0.44%)</title><rect x="487.6" y="163.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.6" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (942 samples, 0.44%)</title><rect x="487.6" y="147.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="490.6" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (206 samples, 0.10%)</title><rect x="487.6" y="131.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.6" y="142.0"></text>
</g>
<g>
<title>java.lang.String (206 samples, 0.10%)</title><rect x="487.6" y="115.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="490.6" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (736 samples, 0.34%)</title><rect x="488.7" y="131.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="491.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (736 samples, 0.34%)</title><rect x="488.7" y="115.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="491.7" y="126.0"></text>
</g>
<g>
<title>byte[] (728 samples, 0.34%)</title><rect x="488.7" y="99.0" width="4.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="491.7" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$220/775820891.apply (503 samples, 0.24%)</title><rect x="492.8" y="339.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="495.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (503 samples, 0.24%)</title><rect x="492.8" y="323.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="495.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (240 samples, 0.11%)</title><rect x="492.8" y="307.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="495.8" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (240 samples, 0.11%)</title><rect x="492.8" y="291.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="495.8" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (240 samples, 0.11%)</title><rect x="492.8" y="275.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="495.8" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (240 samples, 0.11%)</title><rect x="492.8" y="259.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="495.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (263 samples, 0.12%)</title><rect x="494.1" y="307.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="497.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (263 samples, 0.12%)</title><rect x="494.1" y="291.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="497.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (215 samples, 0.10%)</title><rect x="495.5" y="355.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="498.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (215 samples, 0.10%)</title><rect x="495.5" y="339.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="498.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$225/975822862.apply (215 samples, 0.10%)</title><rect x="495.5" y="323.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="498.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (215 samples, 0.10%)</title><rect x="495.5" y="307.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="498.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (215 samples, 0.10%)</title><rect x="495.5" y="291.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="498.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (215 samples, 0.10%)</title><rect x="495.5" y="275.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="498.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$303/1726288971.apply (364 samples, 0.17%)</title><rect x="496.7" y="387.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="499.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (364 samples, 0.17%)</title><rect x="496.7" y="371.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="499.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (364 samples, 0.17%)</title><rect x="496.7" y="355.0" width="2.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="499.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (12,935 samples, 6.04%)</title><rect x="498.7" y="499.0" width="71.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.7" y="510.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (888 samples, 0.41%)</title><rect x="498.7" y="483.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (888 samples, 0.41%)</title><rect x="498.7" y="467.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="501.7" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (888 samples, 0.41%)</title><rect x="498.7" y="451.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="501.7" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (888 samples, 0.41%)</title><rect x="498.7" y="435.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="501.7" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (888 samples, 0.41%)</title><rect x="498.7" y="419.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.7" y="430.0"></text>
</g>
<g>
<title>byte[] (888 samples, 0.41%)</title><rect x="498.7" y="403.0" width="4.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="501.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (1,035 samples, 0.48%)</title><rect x="503.6" y="483.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="506.6" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (183 samples, 0.09%)</title><rect x="503.6" y="467.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="506.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (174 samples, 0.08%)</title><rect x="504.6" y="467.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="507.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (174 samples, 0.08%)</title><rect x="504.6" y="451.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="507.6" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (174 samples, 0.08%)</title><rect x="504.6" y="435.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="507.6" y="446.0"></text>
</g>
<g>
<title>byte[] (174 samples, 0.08%)</title><rect x="504.6" y="419.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="507.6" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (222 samples, 0.10%)</title><rect x="505.6" y="467.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="508.6" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (222 samples, 0.10%)</title><rect x="505.6" y="451.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="508.6" y="462.0"></text>
</g>
<g>
<title>byte[] (222 samples, 0.10%)</title><rect x="505.6" y="435.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="508.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (456 samples, 0.21%)</title><rect x="506.8" y="467.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="509.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (456 samples, 0.21%)</title><rect x="506.8" y="451.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="509.8" y="462.0"></text>
</g>
<g>
<title>java.lang.String (216 samples, 0.10%)</title><rect x="506.8" y="435.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="509.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (240 samples, 0.11%)</title><rect x="508.0" y="435.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="511.0" y="446.0"></text>
</g>
<g>
<title>byte[] (240 samples, 0.11%)</title><rect x="508.0" y="419.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="511.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (3,739 samples, 1.75%)</title><rect x="509.3" y="483.0" width="20.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="512.3" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3,739 samples, 1.75%)</title><rect x="509.3" y="467.0" width="20.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="512.3" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3,739 samples, 1.75%)</title><rect x="509.3" y="451.0" width="20.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="512.3" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (129 samples, 0.06%)</title><rect x="509.3" y="435.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="512.3" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (187 samples, 0.09%)</title><rect x="510.0" y="435.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="513.0" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (386 samples, 0.18%)</title><rect x="511.1" y="435.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="514.1" y="446.0"></text>
</g>
<g>
<title>java.util.TreeSet (131 samples, 0.06%)</title><rect x="513.2" y="435.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="516.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (224 samples, 0.10%)</title><rect x="513.9" y="435.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="516.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (224 samples, 0.10%)</title><rect x="513.9" y="419.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="516.9" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/2110400372.get$Lambda (224 samples, 0.10%)</title><rect x="513.9" y="403.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="516.9" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$120 (224 samples, 0.10%)</title><rect x="513.9" y="387.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="516.9" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (223 samples, 0.10%)</title><rect x="515.2" y="435.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="518.2" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (223 samples, 0.10%)</title><rect x="515.2" y="419.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="518.2" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (2,082 samples, 0.97%)</title><rect x="516.4" y="435.0" width="11.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="519.4" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/2110400372.accept (2,082 samples, 0.97%)</title><rect x="516.4" y="419.0" width="11.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="519.4" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2,082 samples, 0.97%)</title><rect x="516.4" y="403.0" width="11.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (368 samples, 0.17%)</title><rect x="516.4" y="387.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="519.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (368 samples, 0.17%)</title><rect x="516.4" y="371.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="519.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1592266976.get$Lambda (368 samples, 0.17%)</title><rect x="516.4" y="355.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="519.4" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$123 (368 samples, 0.17%)</title><rect x="516.4" y="339.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="519.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (431 samples, 0.20%)</title><rect x="518.4" y="387.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="521.4" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1592266976.accept (431 samples, 0.20%)</title><rect x="518.4" y="371.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="521.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (431 samples, 0.20%)</title><rect x="518.4" y="355.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="521.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (431 samples, 0.20%)</title><rect x="518.4" y="339.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="521.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (431 samples, 0.20%)</title><rect x="518.4" y="323.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="521.4" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (431 samples, 0.20%)</title><rect x="518.4" y="307.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.4" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (431 samples, 0.20%)</title><rect x="518.4" y="291.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="521.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (431 samples, 0.20%)</title><rect x="518.4" y="275.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="521.4" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (431 samples, 0.20%)</title><rect x="518.4" y="259.0" width="2.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="521.4" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (723 samples, 0.34%)</title><rect x="520.8" y="387.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="523.8" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (723 samples, 0.34%)</title><rect x="520.8" y="371.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="523.8" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (343 samples, 0.16%)</title><rect x="520.8" y="355.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="523.8" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (343 samples, 0.16%)</title><rect x="520.8" y="339.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="523.8" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (343 samples, 0.16%)</title><rect x="520.8" y="323.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="523.8" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (380 samples, 0.18%)</title><rect x="522.7" y="355.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="525.7" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (380 samples, 0.18%)</title><rect x="522.7" y="339.0" width="2.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="525.7" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (560 samples, 0.26%)</title><rect x="524.8" y="387.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="527.8" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (560 samples, 0.26%)</title><rect x="524.8" y="371.0" width="3.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="527.8" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (377 samples, 0.18%)</title><rect x="527.9" y="435.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="530.9" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (377 samples, 0.18%)</title><rect x="527.9" y="419.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="530.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (7,273 samples, 3.40%)</title><rect x="529.9" y="483.0" width="40.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="532.9" y="494.0">jdk..</text>
</g>
<g>
<title>java.lang.StringBuilder (356 samples, 0.17%)</title><rect x="529.9" y="467.0" width="2.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="532.9" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (456 samples, 0.21%)</title><rect x="531.9" y="467.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="534.9" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (456 samples, 0.21%)</title><rect x="531.9" y="451.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="534.9" y="462.0"></text>
</g>
<g>
<title>byte[] (456 samples, 0.21%)</title><rect x="531.9" y="435.0" width="2.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="534.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (961 samples, 0.45%)</title><rect x="534.4" y="467.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="537.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (961 samples, 0.45%)</title><rect x="534.4" y="451.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="537.4" y="462.0"></text>
</g>
<g>
<title>java.lang.String (356 samples, 0.17%)</title><rect x="534.4" y="435.0" width="2.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="537.4" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (605 samples, 0.28%)</title><rect x="536.4" y="435.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="539.4" y="446.0"></text>
</g>
<g>
<title>byte[] (605 samples, 0.28%)</title><rect x="536.4" y="419.0" width="3.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="539.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (5,500 samples, 2.57%)</title><rect x="539.7" y="467.0" width="30.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="542.7" y="478.0">jd..</text>
</g>
<g>
<title>java/lang/String.substring (1,662 samples, 0.78%)</title><rect x="539.7" y="451.0" width="9.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="542.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,662 samples, 0.78%)</title><rect x="539.7" y="435.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="542.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String (734 samples, 0.34%)</title><rect x="539.7" y="419.0" width="4.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="542.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (928 samples, 0.43%)</title><rect x="543.8" y="419.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="546.8" y="430.0"></text>
</g>
<g>
<title>byte[] (928 samples, 0.43%)</title><rect x="543.8" y="403.0" width="5.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="546.8" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (816 samples, 0.38%)</title><rect x="548.9" y="451.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="551.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (816 samples, 0.38%)</title><rect x="548.9" y="435.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="551.9" y="446.0"></text>
</g>
<g>
<title>byte[] (469 samples, 0.22%)</title><rect x="548.9" y="419.0" width="2.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="551.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (347 samples, 0.16%)</title><rect x="551.5" y="419.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="554.5" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (740 samples, 0.35%)</title><rect x="553.4" y="451.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="556.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (740 samples, 0.35%)</title><rect x="553.4" y="435.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="556.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (740 samples, 0.35%)</title><rect x="553.4" y="419.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="556.4" y="430.0"></text>
</g>
<g>
<title>java.lang.String (347 samples, 0.16%)</title><rect x="553.4" y="403.0" width="1.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="556.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (393 samples, 0.18%)</title><rect x="555.3" y="403.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="558.3" y="414.0"></text>
</g>
<g>
<title>byte[] (393 samples, 0.18%)</title><rect x="555.3" y="387.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="558.3" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (870 samples, 0.41%)</title><rect x="557.5" y="451.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="560.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (870 samples, 0.41%)</title><rect x="557.5" y="435.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="560.5" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (870 samples, 0.41%)</title><rect x="557.5" y="419.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="560.5" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (870 samples, 0.41%)</title><rect x="557.5" y="403.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="560.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (870 samples, 0.41%)</title><rect x="557.5" y="387.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="560.5" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (870 samples, 0.41%)</title><rect x="557.5" y="371.0" width="4.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="560.5" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1,412 samples, 0.66%)</title><rect x="562.3" y="451.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="565.3" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (482 samples, 0.23%)</title><rect x="562.3" y="435.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="565.3" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (482 samples, 0.23%)</title><rect x="562.3" y="419.0" width="2.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="565.3" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (576 samples, 0.27%)</title><rect x="564.9" y="435.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.9" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (574 samples, 0.27%)</title><rect x="564.9" y="419.0" width="3.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="567.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$307/1938387015.apply (354 samples, 0.17%)</title><rect x="568.1" y="435.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="571.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (354 samples, 0.17%)</title><rect x="568.1" y="419.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="571.1" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (354 samples, 0.17%)</title><rect x="568.1" y="403.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="571.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (5,785 samples, 2.70%)</title><rect x="570.0" y="611.0" width="31.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="573.0" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5,785 samples, 2.70%)</title><rect x="570.0" y="595.0" width="31.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="573.0" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5,785 samples, 2.70%)</title><rect x="570.0" y="579.0" width="31.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.0" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$183/290094249.run (5,785 samples, 2.70%)</title><rect x="570.0" y="563.0" width="31.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="573.0" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5,785 samples, 2.70%)</title><rect x="570.0" y="547.0" width="31.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="573.0" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (831 samples, 0.39%)</title><rect x="570.0" y="531.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="573.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (292 samples, 0.14%)</title><rect x="570.0" y="515.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="573.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (292 samples, 0.14%)</title><rect x="570.0" y="499.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/384609738.get$Lambda (125 samples, 0.06%)</title><rect x="570.0" y="483.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="573.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$204 (125 samples, 0.06%)</title><rect x="570.0" y="467.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="573.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$209/405487975.get$Lambda (167 samples, 0.08%)</title><rect x="570.7" y="483.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="573.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$209 (167 samples, 0.08%)</title><rect x="570.7" y="467.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="573.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (234 samples, 0.11%)</title><rect x="571.7" y="515.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="574.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (305 samples, 0.14%)</title><rect x="572.9" y="515.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="575.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (305 samples, 0.14%)</title><rect x="572.9" y="499.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="575.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (123 samples, 0.06%)</title><rect x="572.9" y="483.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="575.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (182 samples, 0.09%)</title><rect x="573.6" y="483.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="576.6" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (182 samples, 0.09%)</title><rect x="573.6" y="467.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="576.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (4,918 samples, 2.30%)</title><rect x="574.6" y="531.0" width="27.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="577.6" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (4,918 samples, 2.30%)</title><rect x="574.6" y="515.0" width="27.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="577.6" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (4,918 samples, 2.30%)</title><rect x="574.6" y="499.0" width="27.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="577.6" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (4,918 samples, 2.30%)</title><rect x="574.6" y="483.0" width="27.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="577.6" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (4,918 samples, 2.30%)</title><rect x="574.6" y="467.0" width="27.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="577.6" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (4,918 samples, 2.30%)</title><rect x="574.6" y="451.0" width="27.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="577.6" y="462.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (348 samples, 0.16%)</title><rect x="574.6" y="435.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="577.6" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (348 samples, 0.16%)</title><rect x="574.6" y="419.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="577.6" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (348 samples, 0.16%)</title><rect x="574.6" y="403.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="577.6" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (151 samples, 0.07%)</title><rect x="576.5" y="435.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="579.5" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (151 samples, 0.07%)</title><rect x="576.5" y="419.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="579.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$318/909570881.run (3,046 samples, 1.42%)</title><rect x="577.4" y="435.0" width="16.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="580.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (3,046 samples, 1.42%)</title><rect x="577.4" y="419.0" width="16.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="580.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (3,046 samples, 1.42%)</title><rect x="577.4" y="403.0" width="16.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="580.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (939 samples, 0.44%)</title><rect x="577.4" y="387.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="580.4" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (640 samples, 0.30%)</title><rect x="577.4" y="371.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="580.4" y="382.0"></text>
</g>
<g>
<title>java/util/List.spliterator (210 samples, 0.10%)</title><rect x="577.4" y="355.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="580.4" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (210 samples, 0.10%)</title><rect x="577.4" y="339.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="580.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (430 samples, 0.20%)</title><rect x="578.5" y="355.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="581.5" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (424 samples, 0.20%)</title><rect x="578.5" y="339.0" width="2.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="581.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (299 samples, 0.14%)</title><rect x="580.9" y="371.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="583.9" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (299 samples, 0.14%)</title><rect x="580.9" y="355.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="583.9" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (299 samples, 0.14%)</title><rect x="580.9" y="339.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="583.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$57/1095293768.get (194 samples, 0.09%)</title><rect x="580.9" y="323.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="583.9" y="334.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (194 samples, 0.09%)</title><rect x="580.9" y="307.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="583.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (105 samples, 0.05%)</title><rect x="582.0" y="323.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="585.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (105 samples, 0.05%)</title><rect x="582.0" y="307.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="585.0" y="318.0"></text>
</g>
<g>
<title>java/util/Optional.of (105 samples, 0.05%)</title><rect x="582.0" y="291.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="585.0" y="302.0"></text>
</g>
<g>
<title>java.util.Optional (105 samples, 0.05%)</title><rect x="582.0" y="275.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="585.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2,107 samples, 0.98%)</title><rect x="582.6" y="387.0" width="11.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.6" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.now (188 samples, 0.09%)</title><rect x="582.6" y="371.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="585.6" y="382.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (188 samples, 0.09%)</title><rect x="582.6" y="355.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="585.6" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (188 samples, 0.09%)</title><rect x="582.6" y="339.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="585.6" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (188 samples, 0.09%)</title><rect x="582.6" y="323.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="585.6" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (188 samples, 0.09%)</title><rect x="582.6" y="307.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="585.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1,919 samples, 0.90%)</title><rect x="583.6" y="371.0" width="10.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="586.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (752 samples, 0.35%)</title><rect x="583.6" y="355.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="586.6" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (180 samples, 0.08%)</title><rect x="583.6" y="339.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="586.6" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (180 samples, 0.08%)</title><rect x="583.6" y="323.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="586.6" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (180 samples, 0.08%)</title><rect x="583.6" y="307.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="586.6" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (180 samples, 0.08%)</title><rect x="583.6" y="291.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="586.6" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (180 samples, 0.08%)</title><rect x="583.6" y="275.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="586.6" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (180 samples, 0.08%)</title><rect x="583.6" y="259.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="586.6" y="270.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (181 samples, 0.08%)</title><rect x="584.6" y="339.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="587.6" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (181 samples, 0.08%)</title><rect x="584.6" y="323.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="587.6" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (181 samples, 0.08%)</title><rect x="584.6" y="307.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="587.6" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (181 samples, 0.08%)</title><rect x="584.6" y="291.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="587.6" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (181 samples, 0.08%)</title><rect x="584.6" y="275.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="587.6" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (181 samples, 0.08%)</title><rect x="584.6" y="259.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="587.6" y="270.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (177 samples, 0.08%)</title><rect x="585.6" y="339.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="588.6" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (177 samples, 0.08%)</title><rect x="585.6" y="323.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="588.6" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (177 samples, 0.08%)</title><rect x="585.6" y="307.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="588.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (209 samples, 0.10%)</title><rect x="586.6" y="339.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="589.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (381 samples, 0.18%)</title><rect x="587.7" y="355.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="590.7" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (182 samples, 0.09%)</title><rect x="587.7" y="339.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="590.7" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (182 samples, 0.09%)</title><rect x="587.7" y="323.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="590.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (182 samples, 0.09%)</title><rect x="587.7" y="307.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="590.7" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (182 samples, 0.09%)</title><rect x="587.7" y="291.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="590.7" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (199 samples, 0.09%)</title><rect x="588.7" y="339.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="591.7" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (199 samples, 0.09%)</title><rect x="588.7" y="323.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="591.7" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (199 samples, 0.09%)</title><rect x="588.7" y="307.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="591.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (786 samples, 0.37%)</title><rect x="589.8" y="355.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="592.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (180 samples, 0.08%)</title><rect x="589.8" y="339.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="592.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (606 samples, 0.28%)</title><rect x="590.8" y="339.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="593.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (190 samples, 0.09%)</title><rect x="590.8" y="323.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="593.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (190 samples, 0.09%)</title><rect x="590.8" y="307.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="593.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (190 samples, 0.09%)</title><rect x="590.8" y="291.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="593.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (190 samples, 0.09%)</title><rect x="590.8" y="275.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="593.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (416 samples, 0.19%)</title><rect x="591.9" y="323.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="594.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (416 samples, 0.19%)</title><rect x="591.9" y="307.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="594.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (309 samples, 0.14%)</title><rect x="591.9" y="291.0" width="1.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="594.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (107 samples, 0.05%)</title><rect x="593.6" y="291.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.6" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (107 samples, 0.05%)</title><rect x="593.6" y="275.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="596.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (749 samples, 0.35%)</title><rect x="594.2" y="435.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="597.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (749 samples, 0.35%)</title><rect x="594.2" y="419.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="597.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (749 samples, 0.35%)</title><rect x="594.2" y="403.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="597.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (469 samples, 0.22%)</title><rect x="594.2" y="387.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="597.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (469 samples, 0.22%)</title><rect x="594.2" y="371.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="597.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (469 samples, 0.22%)</title><rect x="594.2" y="355.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="597.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (469 samples, 0.22%)</title><rect x="594.2" y="339.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="597.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$324/1017895259.accept (469 samples, 0.22%)</title><rect x="594.2" y="323.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="597.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (469 samples, 0.22%)</title><rect x="594.2" y="307.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="597.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (469 samples, 0.22%)</title><rect x="594.2" y="291.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="597.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (469 samples, 0.22%)</title><rect x="594.2" y="275.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="597.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (469 samples, 0.22%)</title><rect x="594.2" y="259.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="597.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$327/837206861.apply (469 samples, 0.22%)</title><rect x="594.2" y="243.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="597.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (469 samples, 0.22%)</title><rect x="594.2" y="227.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="597.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (467 samples, 0.22%)</title><rect x="594.2" y="211.0" width="2.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="597.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (280 samples, 0.13%)</title><rect x="596.8" y="387.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="599.8" y="398.0"></text>
</g>
<g>
<title>byte[] (280 samples, 0.13%)</title><rect x="596.8" y="371.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="599.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (624 samples, 0.29%)</title><rect x="598.3" y="435.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="601.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (624 samples, 0.29%)</title><rect x="598.3" y="419.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="601.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (624 samples, 0.29%)</title><rect x="598.3" y="403.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="601.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (624 samples, 0.29%)</title><rect x="598.3" y="387.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="601.3" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (624 samples, 0.29%)</title><rect x="598.3" y="371.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="601.3" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (165 samples, 0.08%)</title><rect x="598.3" y="355.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="601.3" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (165 samples, 0.08%)</title><rect x="598.3" y="339.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="601.3" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (459 samples, 0.21%)</title><rect x="599.2" y="355.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="602.2" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (459 samples, 0.21%)</title><rect x="599.2" y="339.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="602.2" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (446 samples, 0.21%)</title><rect x="599.2" y="323.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="602.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl$$Lambda$109/1485885249.run (37,082 samples, 17.33%)</title><rect x="601.9" y="643.0" width="204.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="604.9" y="654.0">ru/mail/polis/service/temno..</text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.lambda$entity$3 (37,082 samples, 17.33%)</title><rect x="601.9" y="627.0" width="204.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="604.9" y="638.0">ru/mail/polis/service/temno..</text>
</g>
<g>
<title>java.util.ArrayList (91 samples, 0.04%)</title><rect x="601.9" y="611.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="604.9" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (108 samples, 0.05%)</title><rect x="602.4" y="611.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="605.4" y="622.0"></text>
</g>
<g>
<title>java/lang/Long.toString (475 samples, 0.22%)</title><rect x="603.0" y="611.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="606.0" y="622.0"></text>
</g>
<g>
<title>byte[] (279 samples, 0.13%)</title><rect x="603.0" y="595.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="606.0" y="606.0"></text>
</g>
<g>
<title>java.lang.String (196 samples, 0.09%)</title><rect x="604.6" y="595.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="607.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (940 samples, 0.44%)</title><rect x="605.7" y="611.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="608.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (707 samples, 0.33%)</title><rect x="605.7" y="595.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="608.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1218593486.invoke (707 samples, 0.33%)</title><rect x="605.7" y="579.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="608.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (707 samples, 0.33%)</title><rect x="605.7" y="563.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="608.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (204 samples, 0.10%)</title><rect x="605.7" y="547.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="608.7" y="558.0"></text>
</g>
<g>
<title>java.lang.String (204 samples, 0.10%)</title><rect x="605.7" y="531.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="608.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (503 samples, 0.24%)</title><rect x="606.8" y="547.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="609.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (503 samples, 0.24%)</title><rect x="606.8" y="531.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="609.8" y="542.0"></text>
</g>
<g>
<title>byte[] (503 samples, 0.24%)</title><rect x="606.8" y="515.0" width="2.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="609.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (233 samples, 0.11%)</title><rect x="609.6" y="595.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl$$Lambda$151/1647313403.get$Lambda (123 samples, 0.06%)</title><rect x="609.6" y="579.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="612.6" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.temnovochka.ServiceImpl$$Lambda$151 (123 samples, 0.06%)</title><rect x="609.6" y="563.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="612.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl$$Lambda$152/724793533.get$Lambda (110 samples, 0.05%)</title><rect x="610.2" y="579.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="613.2" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.temnovochka.ServiceImpl$$Lambda$152 (110 samples, 0.05%)</title><rect x="610.2" y="563.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="613.2" y="574.0"></text>
</g>
<g>
<title>java/net/URI.create (3,216 samples, 1.50%)</title><rect x="610.8" y="611.0" width="17.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="613.8" y="622.0"></text>
</g>
<g>
<title>java.net.URI (710 samples, 0.33%)</title><rect x="610.8" y="595.0" width="4.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="613.8" y="606.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (2,506 samples, 1.17%)</title><rect x="614.8" y="595.0" width="13.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="617.8" y="606.0"></text>
</g>
<g>
<title>java.net.URI$Parser (269 samples, 0.13%)</title><rect x="614.8" y="579.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="617.8" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (2,237 samples, 1.05%)</title><rect x="616.2" y="579.0" width="12.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="619.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (398 samples, 0.19%)</title><rect x="616.2" y="563.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (398 samples, 0.19%)</title><rect x="616.2" y="547.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="619.2" y="558.0"></text>
</g>
<g>
<title>java.lang.String (196 samples, 0.09%)</title><rect x="616.2" y="531.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="619.2" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (202 samples, 0.09%)</title><rect x="617.3" y="531.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="620.3" y="542.0"></text>
</g>
<g>
<title>byte[] (202 samples, 0.09%)</title><rect x="617.3" y="515.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="620.3" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (1,839 samples, 0.86%)</title><rect x="618.4" y="563.0" width="10.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="621.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (878 samples, 0.41%)</title><rect x="618.4" y="547.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="621.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (878 samples, 0.41%)</title><rect x="618.4" y="531.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="621.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (428 samples, 0.20%)</title><rect x="618.4" y="515.0" width="2.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="621.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (450 samples, 0.21%)</title><rect x="620.8" y="515.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.8" y="526.0"></text>
</g>
<g>
<title>byte[] (450 samples, 0.21%)</title><rect x="620.8" y="499.0" width="2.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="623.8" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (961 samples, 0.45%)</title><rect x="623.3" y="547.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="626.3" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (485 samples, 0.23%)</title><rect x="623.3" y="531.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="626.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (485 samples, 0.23%)</title><rect x="623.3" y="515.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="626.3" y="526.0"></text>
</g>
<g>
<title>java.lang.String (220 samples, 0.10%)</title><rect x="623.3" y="499.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="626.3" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (265 samples, 0.12%)</title><rect x="624.5" y="499.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="627.5" y="510.0"></text>
</g>
<g>
<title>byte[] (265 samples, 0.12%)</title><rect x="624.5" y="483.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="627.5" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (476 samples, 0.22%)</title><rect x="625.9" y="531.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.9" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (476 samples, 0.22%)</title><rect x="625.9" y="515.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.9" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (476 samples, 0.22%)</title><rect x="625.9" y="499.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.9" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (476 samples, 0.22%)</title><rect x="625.9" y="483.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="628.9" y="494.0"></text>
</g>
<g>
<title>java.lang.String (198 samples, 0.09%)</title><rect x="625.9" y="467.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="628.9" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (278 samples, 0.13%)</title><rect x="627.0" y="467.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="630.0" y="478.0"></text>
</g>
<g>
<title>byte[] (278 samples, 0.13%)</title><rect x="627.0" y="451.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="630.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (853 samples, 0.40%)</title><rect x="628.6" y="611.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.6" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (324 samples, 0.15%)</title><rect x="628.6" y="595.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="631.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (529 samples, 0.25%)</title><rect x="630.4" y="595.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="633.4" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (131 samples, 0.06%)</title><rect x="630.4" y="579.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="633.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (398 samples, 0.19%)</title><rect x="631.1" y="579.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="634.1" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (398 samples, 0.19%)</title><rect x="631.1" y="563.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="634.1" y="574.0"></text>
</g>
<g>
<title>java/time/Duration.ofMillis (210 samples, 0.10%)</title><rect x="633.3" y="611.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="636.3" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.create (210 samples, 0.10%)</title><rect x="633.3" y="595.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="636.3" y="606.0"></text>
</g>
<g>
<title>java.time.Duration (210 samples, 0.10%)</title><rect x="633.3" y="579.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="636.3" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (236 samples, 0.11%)</title><rect x="634.4" y="611.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="637.4" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (236 samples, 0.11%)</title><rect x="634.4" y="595.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="637.4" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (236 samples, 0.11%)</title><rect x="634.4" y="579.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="637.4" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (236 samples, 0.11%)</title><rect x="634.4" y="563.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="637.4" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (236 samples, 0.11%)</title><rect x="634.4" y="547.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="637.4" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (236 samples, 0.11%)</title><rect x="634.4" y="531.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="637.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (313 samples, 0.15%)</title><rect x="635.7" y="611.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="638.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (313 samples, 0.15%)</title><rect x="635.7" y="595.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="638.7" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (181 samples, 0.08%)</title><rect x="635.7" y="579.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="638.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (132 samples, 0.06%)</title><rect x="636.7" y="579.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="639.7" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (132 samples, 0.06%)</title><rect x="636.7" y="563.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="639.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (313 samples, 0.15%)</title><rect x="637.5" y="611.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="640.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (313 samples, 0.15%)</title><rect x="637.5" y="595.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="640.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (156 samples, 0.07%)</title><rect x="637.5" y="579.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="640.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (109 samples, 0.05%)</title><rect x="638.3" y="579.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="641.3" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (109 samples, 0.05%)</title><rect x="638.3" y="563.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="641.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (48 samples, 0.02%)</title><rect x="638.9" y="579.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="641.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl$$Lambda$151/1647313403.accept (46 samples, 0.02%)</title><rect x="638.9" y="563.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="641.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.lambda$entity$1 (46 samples, 0.02%)</title><rect x="638.9" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="641.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (585 samples, 0.27%)</title><rect x="639.2" y="611.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (585 samples, 0.27%)</title><rect x="639.2" y="595.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="642.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (294 samples, 0.14%)</title><rect x="639.2" y="579.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="642.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (291 samples, 0.14%)</title><rect x="640.8" y="579.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="643.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (291 samples, 0.14%)</title><rect x="640.8" y="563.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="643.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (291 samples, 0.14%)</title><rect x="640.8" y="547.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="643.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (18,550 samples, 8.67%)</title><rect x="642.4" y="611.0" width="102.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="645.4" y="622.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (18,550 samples, 8.67%)</title><rect x="642.4" y="595.0" width="102.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.4" y="606.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (18,550 samples, 8.67%)</title><rect x="642.4" y="579.0" width="102.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="645.4" y="590.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (18,550 samples, 8.67%)</title><rect x="642.4" y="563.0" width="102.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="645.4" y="574.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (149 samples, 0.07%)</title><rect x="642.4" y="547.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="645.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (149 samples, 0.07%)</title><rect x="642.4" y="531.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="645.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$145/118859250.get$Lambda (149 samples, 0.07%)</title><rect x="642.4" y="515.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="645.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$145 (149 samples, 0.07%)</title><rect x="642.4" y="499.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="645.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (649 samples, 0.30%)</title><rect x="643.2" y="547.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (649 samples, 0.30%)</title><rect x="643.2" y="531.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="646.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (367 samples, 0.17%)</title><rect x="643.2" y="515.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="646.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (282 samples, 0.13%)</title><rect x="645.3" y="515.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="648.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (282 samples, 0.13%)</title><rect x="645.3" y="499.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="648.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (282 samples, 0.13%)</title><rect x="645.3" y="483.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="648.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (616 samples, 0.29%)</title><rect x="646.8" y="547.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="649.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (616 samples, 0.29%)</title><rect x="646.8" y="531.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="649.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (337 samples, 0.16%)</title><rect x="646.8" y="515.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="649.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (279 samples, 0.13%)</title><rect x="648.7" y="515.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="651.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (279 samples, 0.13%)</title><rect x="648.7" y="499.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="651.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (279 samples, 0.13%)</title><rect x="648.7" y="483.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="651.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (512 samples, 0.24%)</title><rect x="650.2" y="547.0" width="2.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="653.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (823 samples, 0.38%)</title><rect x="653.0" y="547.0" width="4.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="656.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (9,652 samples, 4.51%)</title><rect x="657.6" y="547.0" width="53.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.6" y="558.0">jdk/i..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (943 samples, 0.44%)</title><rect x="657.6" y="531.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="660.6" y="542.0"></text>
</g>
<g>
<title>java/util/Collection.stream (733 samples, 0.34%)</title><rect x="657.6" y="515.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.6" y="526.0"></text>
</g>
<g>
<title>java/util/List.spliterator (275 samples, 0.13%)</title><rect x="657.6" y="499.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.6" y="510.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (275 samples, 0.13%)</title><rect x="657.6" y="483.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="660.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (458 samples, 0.21%)</title><rect x="659.1" y="499.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="662.1" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (458 samples, 0.21%)</title><rect x="659.1" y="483.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="662.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (210 samples, 0.10%)</title><rect x="661.6" y="515.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="664.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (210 samples, 0.10%)</title><rect x="661.6" y="499.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="664.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (210 samples, 0.10%)</title><rect x="661.6" y="483.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="664.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$57/1095293768.get (210 samples, 0.10%)</title><rect x="661.6" y="467.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="664.6" y="478.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (210 samples, 0.10%)</title><rect x="661.6" y="451.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="664.6" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (4,279 samples, 2.00%)</title><rect x="662.8" y="531.0" width="23.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="665.8" y="542.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (4,279 samples, 2.00%)</title><rect x="662.8" y="515.0" width="23.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="665.8" y="526.0">j..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (124 samples, 0.06%)</title><rect x="662.8" y="499.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="665.8" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (212 samples, 0.10%)</title><rect x="663.5" y="499.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="666.5" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (393 samples, 0.18%)</title><rect x="664.6" y="499.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="667.6" y="510.0"></text>
</g>
<g>
<title>java.util.TreeSet (151 samples, 0.07%)</title><rect x="666.8" y="499.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="669.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (290 samples, 0.14%)</title><rect x="667.6" y="499.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="670.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (290 samples, 0.14%)</title><rect x="667.6" y="483.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="670.6" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/2110400372.get$Lambda (290 samples, 0.14%)</title><rect x="667.6" y="467.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="670.6" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$120 (290 samples, 0.14%)</title><rect x="667.6" y="451.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="670.6" y="462.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (2,461 samples, 1.15%)</title><rect x="669.2" y="499.0" width="13.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="672.2" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2,461 samples, 1.15%)</title><rect x="669.2" y="483.0" width="13.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="672.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/2110400372.accept (2,461 samples, 1.15%)</title><rect x="669.2" y="467.0" width="13.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="672.2" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2,461 samples, 1.15%)</title><rect x="669.2" y="451.0" width="13.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="672.2" y="462.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (480 samples, 0.22%)</title><rect x="669.2" y="435.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="672.2" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1592266976.accept (480 samples, 0.22%)</title><rect x="669.2" y="419.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="672.2" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (480 samples, 0.22%)</title><rect x="669.2" y="403.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="672.2" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (480 samples, 0.22%)</title><rect x="669.2" y="387.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="672.2" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (480 samples, 0.22%)</title><rect x="669.2" y="371.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="672.2" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (480 samples, 0.22%)</title><rect x="669.2" y="355.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="672.2" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (480 samples, 0.22%)</title><rect x="669.2" y="339.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="672.2" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (480 samples, 0.22%)</title><rect x="669.2" y="323.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="672.2" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (480 samples, 0.22%)</title><rect x="669.2" y="307.0" width="2.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="672.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (415 samples, 0.19%)</title><rect x="671.9" y="435.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="674.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (415 samples, 0.19%)</title><rect x="671.9" y="419.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="674.9" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1592266976.get$Lambda (415 samples, 0.19%)</title><rect x="671.9" y="403.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="674.9" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$123 (415 samples, 0.19%)</title><rect x="671.9" y="387.0" width="2.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="674.9" y="398.0"></text>
</g>
<g>
<title>java/util/List.copyOf (841 samples, 0.39%)</title><rect x="674.2" y="435.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.2" y="446.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (841 samples, 0.39%)</title><rect x="674.2" y="419.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="677.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (455 samples, 0.21%)</title><rect x="674.2" y="403.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="677.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (455 samples, 0.21%)</title><rect x="674.2" y="387.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="677.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (455 samples, 0.21%)</title><rect x="674.2" y="371.0" width="2.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="677.2" y="382.0"></text>
</g>
<g>
<title>java/util/List.of (386 samples, 0.18%)</title><rect x="676.7" y="403.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="679.7" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (386 samples, 0.18%)</title><rect x="676.7" y="387.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="679.7" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (725 samples, 0.34%)</title><rect x="678.8" y="435.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="681.8" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (725 samples, 0.34%)</title><rect x="678.8" y="419.0" width="4.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="681.8" y="430.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (267 samples, 0.12%)</title><rect x="682.8" y="499.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="685.8" y="510.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (267 samples, 0.12%)</title><rect x="682.8" y="483.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="685.8" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (381 samples, 0.18%)</title><rect x="684.3" y="499.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="687.3" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (381 samples, 0.18%)</title><rect x="684.3" y="483.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="687.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (156 samples, 0.07%)</title><rect x="686.4" y="531.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="689.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (3,061 samples, 1.43%)</title><rect x="687.2" y="531.0" width="16.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="690.2" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (3,061 samples, 1.43%)</title><rect x="687.2" y="515.0" width="16.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.2" y="526.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2,785 samples, 1.30%)</title><rect x="687.2" y="499.0" width="15.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="690.2" y="510.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2,785 samples, 1.30%)</title><rect x="687.2" y="483.0" width="15.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="690.2" y="494.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2,785 samples, 1.30%)</title><rect x="687.2" y="467.0" width="15.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="690.2" y="478.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (599 samples, 0.28%)</title><rect x="687.2" y="451.0" width="3.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="690.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (814 samples, 0.38%)</title><rect x="690.5" y="451.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="693.5" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (814 samples, 0.38%)</title><rect x="690.5" y="435.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="693.5" y="446.0"></text>
</g>
<g>
<title>byte[] (814 samples, 0.38%)</title><rect x="690.5" y="419.0" width="4.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="693.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,372 samples, 0.64%)</title><rect x="695.0" y="451.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="698.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,372 samples, 0.64%)</title><rect x="695.0" y="435.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="698.0" y="446.0"></text>
</g>
<g>
<title>java.lang.String (588 samples, 0.27%)</title><rect x="695.0" y="419.0" width="3.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="698.0" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (784 samples, 0.37%)</title><rect x="698.3" y="419.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="701.3" y="430.0"></text>
</g>
<g>
<title>byte[] (784 samples, 0.37%)</title><rect x="698.3" y="403.0" width="4.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="701.3" y="414.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (276 samples, 0.13%)</title><rect x="702.6" y="499.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="705.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (444 samples, 0.21%)</title><rect x="704.1" y="531.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="707.1" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (444 samples, 0.21%)</title><rect x="704.1" y="515.0" width="2.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="707.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (769 samples, 0.36%)</title><rect x="706.5" y="531.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.5" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (221 samples, 0.10%)</title><rect x="706.5" y="515.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="709.5" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (193 samples, 0.09%)</title><rect x="707.8" y="515.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="710.8" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (193 samples, 0.09%)</title><rect x="707.8" y="499.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="710.8" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (355 samples, 0.17%)</title><rect x="708.8" y="515.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="711.8" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (355 samples, 0.17%)</title><rect x="708.8" y="499.0" width="2.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="711.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (3,940 samples, 1.84%)</title><rect x="710.8" y="547.0" width="21.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="713.8" y="558.0">j..</text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (143 samples, 0.07%)</title><rect x="710.8" y="531.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="713.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (634 samples, 0.30%)</title><rect x="711.6" y="531.0" width="3.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="714.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (123 samples, 0.06%)</title><rect x="715.1" y="531.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="718.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (123 samples, 0.06%)</title><rect x="715.1" y="515.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="718.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (3,040 samples, 1.42%)</title><rect x="715.7" y="531.0" width="16.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="718.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (3,040 samples, 1.42%)</title><rect x="715.7" y="515.0" width="16.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="718.7" y="526.0"></text>
</g>
<g>
<title>java.lang.Class[] (264 samples, 0.12%)</title><rect x="715.7" y="499.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="718.7" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (303 samples, 0.14%)</title><rect x="717.2" y="499.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="720.2" y="510.0"></text>
</g>
<g>
<title>java.util.LinkedList (299 samples, 0.14%)</title><rect x="718.9" y="499.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="721.9" y="510.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (1,268 samples, 0.59%)</title><rect x="720.5" y="499.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="723.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (1,268 samples, 0.59%)</title><rect x="720.5" y="483.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="723.5" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (1,268 samples, 0.59%)</title><rect x="720.5" y="467.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="723.5" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (1,268 samples, 0.59%)</title><rect x="720.5" y="451.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="723.5" y="462.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (1,268 samples, 0.59%)</title><rect x="720.5" y="435.0" width="7.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="723.5" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (499 samples, 0.23%)</title><rect x="727.5" y="499.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="730.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (499 samples, 0.23%)</title><rect x="727.5" y="483.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="730.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor11.newInstance (133 samples, 0.06%)</title><rect x="727.5" y="467.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="730.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (133 samples, 0.06%)</title><rect x="727.5" y="451.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="730.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor13.newInstance (366 samples, 0.17%)</title><rect x="728.2" y="467.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (366 samples, 0.17%)</title><rect x="728.2" y="451.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="731.2" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (407 samples, 0.19%)</title><rect x="730.3" y="499.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="733.3" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (407 samples, 0.19%)</title><rect x="730.3" y="483.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="733.3" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (407 samples, 0.19%)</title><rect x="730.3" y="467.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="733.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (2,208 samples, 1.03%)</title><rect x="732.5" y="547.0" width="12.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="735.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (473 samples, 0.22%)</title><rect x="732.5" y="531.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="735.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (188 samples, 0.09%)</title><rect x="732.5" y="515.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="735.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (285 samples, 0.13%)</title><rect x="733.5" y="515.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="736.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (285 samples, 0.13%)</title><rect x="733.5" y="499.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="736.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (285 samples, 0.13%)</title><rect x="733.5" y="483.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="736.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (285 samples, 0.13%)</title><rect x="733.5" y="467.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.5" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (285 samples, 0.13%)</title><rect x="733.5" y="451.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="736.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (287 samples, 0.13%)</title><rect x="735.1" y="531.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="738.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (1,448 samples, 0.68%)</title><rect x="736.7" y="531.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="739.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (260 samples, 0.12%)</title><rect x="736.7" y="515.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="739.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (260 samples, 0.12%)</title><rect x="736.7" y="499.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="739.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$136/665754590.get$Lambda (129 samples, 0.06%)</title><rect x="736.7" y="483.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="739.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$136 (129 samples, 0.06%)</title><rect x="736.7" y="467.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="739.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$141/422005947.get$Lambda (131 samples, 0.06%)</title><rect x="737.4" y="483.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="740.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$141 (131 samples, 0.06%)</title><rect x="737.4" y="467.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="740.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,188 samples, 0.56%)</title><rect x="738.1" y="515.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="741.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,188 samples, 0.56%)</title><rect x="738.1" y="499.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="741.1" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (697 samples, 0.33%)</title><rect x="738.1" y="483.0" width="3.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="741.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (491 samples, 0.23%)</title><rect x="742.0" y="483.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="745.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (491 samples, 0.23%)</title><rect x="742.0" y="467.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="745.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (491 samples, 0.23%)</title><rect x="742.0" y="451.0" width="2.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="745.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (4,606 samples, 2.15%)</title><rect x="744.7" y="611.0" width="25.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="747.7" y="622.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (335 samples, 0.16%)</title><rect x="744.7" y="595.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="747.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (4,271 samples, 2.00%)</title><rect x="746.5" y="595.0" width="23.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="749.5" y="606.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (4,119 samples, 1.92%)</title><rect x="746.5" y="579.0" width="22.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="749.5" y="590.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (4,119 samples, 1.92%)</title><rect x="746.5" y="563.0" width="22.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="749.5" y="574.0">j..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (111 samples, 0.05%)</title><rect x="746.5" y="547.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="749.5" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (207 samples, 0.10%)</title><rect x="747.1" y="547.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="750.1" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (420 samples, 0.20%)</title><rect x="748.3" y="547.0" width="2.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="751.3" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (143 samples, 0.07%)</title><rect x="750.6" y="547.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="753.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (252 samples, 0.12%)</title><rect x="751.4" y="547.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (252 samples, 0.12%)</title><rect x="751.4" y="531.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="754.4" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/2110400372.get$Lambda (252 samples, 0.12%)</title><rect x="751.4" y="515.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="754.4" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$120 (252 samples, 0.12%)</title><rect x="751.4" y="499.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="754.4" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (236 samples, 0.11%)</title><rect x="752.8" y="547.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="755.8" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (236 samples, 0.11%)</title><rect x="752.8" y="531.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="755.8" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2,348 samples, 1.10%)</title><rect x="754.1" y="547.0" width="12.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="757.1" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/2110400372.accept (2,348 samples, 1.10%)</title><rect x="754.1" y="531.0" width="12.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="757.1" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2,348 samples, 1.10%)</title><rect x="754.1" y="515.0" width="12.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="757.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (424 samples, 0.20%)</title><rect x="754.1" y="499.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="757.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (424 samples, 0.20%)</title><rect x="754.1" y="483.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="757.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1592266976.get$Lambda (424 samples, 0.20%)</title><rect x="754.1" y="467.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="757.1" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$123 (424 samples, 0.20%)</title><rect x="754.1" y="451.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="757.1" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (447 samples, 0.21%)</title><rect x="756.4" y="499.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="759.4" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1592266976.accept (447 samples, 0.21%)</title><rect x="756.4" y="483.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="759.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (447 samples, 0.21%)</title><rect x="756.4" y="467.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="759.4" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (447 samples, 0.21%)</title><rect x="756.4" y="451.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="759.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (447 samples, 0.21%)</title><rect x="756.4" y="435.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="759.4" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (447 samples, 0.21%)</title><rect x="756.4" y="419.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="759.4" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (447 samples, 0.21%)</title><rect x="756.4" y="403.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="759.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (447 samples, 0.21%)</title><rect x="756.4" y="387.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="759.4" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (447 samples, 0.21%)</title><rect x="756.4" y="371.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="759.4" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (784 samples, 0.37%)</title><rect x="758.9" y="499.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="761.9" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (784 samples, 0.37%)</title><rect x="758.9" y="483.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="761.9" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (413 samples, 0.19%)</title><rect x="758.9" y="467.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="761.9" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (413 samples, 0.19%)</title><rect x="758.9" y="451.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="761.9" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (413 samples, 0.19%)</title><rect x="758.9" y="435.0" width="2.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="761.9" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (371 samples, 0.17%)</title><rect x="761.2" y="467.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="764.2" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (371 samples, 0.17%)</title><rect x="761.2" y="451.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="764.2" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (693 samples, 0.32%)</title><rect x="763.2" y="499.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="766.2" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (693 samples, 0.32%)</title><rect x="763.2" y="483.0" width="3.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="766.2" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (402 samples, 0.19%)</title><rect x="767.0" y="547.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="770.0" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (402 samples, 0.19%)</title><rect x="767.0" y="531.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="770.0" y="542.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (152 samples, 0.07%)</title><rect x="769.2" y="579.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="772.2" y="590.0"></text>
</g>
<g>
<title>java/util/Optional.of (152 samples, 0.07%)</title><rect x="769.2" y="563.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="772.2" y="574.0"></text>
</g>
<g>
<title>java.util.Optional (152 samples, 0.07%)</title><rect x="769.2" y="547.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="772.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (1,489 samples, 0.70%)</title><rect x="770.1" y="611.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="773.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (1,489 samples, 0.70%)</title><rect x="770.1" y="595.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="773.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1,489 samples, 0.70%)</title><rect x="770.1" y="579.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="773.1" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (410 samples, 0.19%)</title><rect x="770.1" y="563.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="773.1" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (430 samples, 0.20%)</title><rect x="772.3" y="563.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="775.3" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (430 samples, 0.20%)</title><rect x="772.3" y="547.0" width="2.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="775.3" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (649 samples, 0.30%)</title><rect x="774.7" y="563.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="777.7" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (649 samples, 0.30%)</title><rect x="774.7" y="547.0" width="3.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="777.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/CompletableFutureHelper.whenComplete (2,507 samples, 1.17%)</title><rect x="778.3" y="611.0" width="13.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="781.3" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (111 samples, 0.05%)</title><rect x="778.3" y="595.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="781.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (106 samples, 0.05%)</title><rect x="778.9" y="595.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="781.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (52 samples, 0.02%)</title><rect x="779.5" y="595.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="782.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (277 samples, 0.13%)</title><rect x="779.8" y="595.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="782.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (277 samples, 0.13%)</title><rect x="779.8" y="579.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="782.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/CompletableFutureHelper$$Lambda$150/1945585599.get$Lambda (277 samples, 0.13%)</title><rect x="779.8" y="563.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.8" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.temnovochka.CompletableFutureHelper$$Lambda$150 (277 samples, 0.13%)</title><rect x="779.8" y="547.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="782.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1518899899.linkToTargetMethod (327 samples, 0.15%)</title><rect x="781.3" y="595.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="784.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/815541954.invokeStatic (327 samples, 0.15%)</title><rect x="781.3" y="579.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="784.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/CompletableFutureHelper$$Lambda$149/2098073442.get$Lambda (327 samples, 0.15%)</title><rect x="781.3" y="563.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="784.3" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.temnovochka.CompletableFutureHelper$$Lambda$149 (327 samples, 0.15%)</title><rect x="781.3" y="547.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="784.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (705 samples, 0.33%)</title><rect x="783.1" y="595.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="786.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (705 samples, 0.33%)</title><rect x="783.1" y="579.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="786.1" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (334 samples, 0.16%)</title><rect x="783.1" y="563.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="786.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (103 samples, 0.05%)</title><rect x="784.9" y="563.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="787.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (103 samples, 0.05%)</title><rect x="784.9" y="547.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="787.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (268 samples, 0.13%)</title><rect x="785.5" y="563.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="788.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (268 samples, 0.13%)</title><rect x="785.5" y="547.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="788.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (268 samples, 0.13%)</title><rect x="785.5" y="531.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="788.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (815 samples, 0.38%)</title><rect x="787.0" y="595.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="790.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (815 samples, 0.38%)</title><rect x="787.0" y="579.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="790.0" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (342 samples, 0.16%)</title><rect x="787.0" y="563.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="790.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (206 samples, 0.10%)</title><rect x="788.9" y="563.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="791.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (89 samples, 0.04%)</title><rect x="788.9" y="547.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="791.9" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (89 samples, 0.04%)</title><rect x="788.9" y="531.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="791.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/CompletableFutureHelper$$Lambda$149/2098073442.accept (116 samples, 0.05%)</title><rect x="789.4" y="547.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="792.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/CompletableFutureHelper.lambda$whenComplete$0 (116 samples, 0.05%)</title><rect x="789.4" y="531.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="792.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (116 samples, 0.05%)</title><rect x="789.4" y="515.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="792.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (116 samples, 0.05%)</title><rect x="789.4" y="499.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="792.4" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (116 samples, 0.05%)</title><rect x="789.4" y="483.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="792.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (267 samples, 0.12%)</title><rect x="790.0" y="563.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="793.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (267 samples, 0.12%)</title><rect x="790.0" y="547.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="793.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (267 samples, 0.12%)</title><rect x="790.0" y="531.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="793.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (114 samples, 0.05%)</title><rect x="791.5" y="595.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="794.5" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (50 samples, 0.02%)</title><rect x="791.5" y="579.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="794.5" y="590.0"></text>
</g>
<g>
<title>java.lang.Object (64 samples, 0.03%)</title><rect x="791.8" y="579.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="794.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/EntityWorker.responseProcessEntity (1,635 samples, 0.76%)</title><rect x="792.1" y="611.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="795.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (498 samples, 0.23%)</title><rect x="792.1" y="595.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="795.1" y="606.0"></text>
</g>
<g>
<title>one.nio.http.Response (98 samples, 0.05%)</title><rect x="792.1" y="579.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="795.1" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (400 samples, 0.19%)</title><rect x="792.6" y="579.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="795.6" y="590.0"></text>
</g>
<g>
<title>byte[] (175 samples, 0.08%)</title><rect x="792.6" y="563.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="795.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (133 samples, 0.06%)</title><rect x="793.6" y="563.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="796.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (92 samples, 0.04%)</title><rect x="794.3" y="563.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="797.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.getRecord (580 samples, 0.27%)</title><rect x="794.9" y="595.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="797.9" y="606.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (128 samples, 0.06%)</title><rect x="794.9" y="579.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="797.9" y="590.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (128 samples, 0.06%)</title><rect x="794.9" y="563.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="797.9" y="574.0"></text>
</g>
<g>
<title>byte[] (128 samples, 0.06%)</title><rect x="794.9" y="547.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="797.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteArrayUtils.packingKey (92 samples, 0.04%)</title><rect x="795.6" y="579.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="798.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteArrayUtils.getArrayFromByteBuffer (92 samples, 0.04%)</title><rect x="795.6" y="563.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="798.6" y="574.0"></text>
</g>
<g>
<title>byte[] (92 samples, 0.04%)</title><rect x="795.6" y="547.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="798.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORecord.fromBytes (360 samples, 0.17%)</title><rect x="796.1" y="579.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="799.1" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (246 samples, 0.11%)</title><rect x="796.1" y="563.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="799.1" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (246 samples, 0.11%)</title><rect x="796.1" y="547.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="799.1" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (246 samples, 0.11%)</title><rect x="796.1" y="531.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="799.1" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.DAORecord (114 samples, 0.05%)</title><rect x="797.4" y="563.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="800.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORecord.toBytes (557 samples, 0.26%)</title><rect x="798.1" y="595.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="801.1" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (341 samples, 0.16%)</title><rect x="798.1" y="579.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="801.1" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (216 samples, 0.10%)</title><rect x="798.1" y="563.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="801.1" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (125 samples, 0.06%)</title><rect x="799.2" y="563.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="802.2" y="574.0"></text>
</g>
<g>
<title>byte[] (125 samples, 0.06%)</title><rect x="799.2" y="547.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="802.2" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (216 samples, 0.10%)</title><rect x="799.9" y="579.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="802.9" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (216 samples, 0.10%)</title><rect x="799.9" y="563.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="802.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ResponseRepresentation.create (127 samples, 0.06%)</title><rect x="801.1" y="611.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="804.1" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.temnovochka.ResponseRepresentation (127 samples, 0.06%)</title><rect x="801.1" y="595.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="804.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.addHeaders (828 samples, 0.39%)</title><rect x="801.8" y="611.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1524960486.linkToTargetMethod (828 samples, 0.39%)</title><rect x="801.8" y="595.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="804.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/481760725.invoke (828 samples, 0.39%)</title><rect x="801.8" y="579.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="804.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (828 samples, 0.39%)</title><rect x="801.8" y="563.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="804.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (119 samples, 0.06%)</title><rect x="801.8" y="547.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="804.8" y="558.0"></text>
</g>
<g>
<title>java.lang.String (119 samples, 0.06%)</title><rect x="801.8" y="531.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="804.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (709 samples, 0.33%)</title><rect x="802.5" y="547.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="805.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (709 samples, 0.33%)</title><rect x="802.5" y="531.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="805.5" y="542.0"></text>
</g>
<g>
<title>byte[] (709 samples, 0.33%)</title><rect x="802.5" y="515.0" width="3.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="805.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl$$Lambda$302/1732130861.run (5,152 samples, 2.41%)</title><rect x="806.4" y="643.0" width="28.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="809.4" y="654.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.lambda$entity$0 (5,152 samples, 2.41%)</title><rect x="806.4" y="627.0" width="28.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="809.4" y="638.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,711 samples, 0.80%)</title><rect x="806.4" y="611.0" width="9.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="809.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,125 samples, 0.53%)</title><rect x="806.4" y="595.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="809.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (784 samples, 0.37%)</title><rect x="806.4" y="579.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="809.4" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (784 samples, 0.37%)</title><rect x="806.4" y="563.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="809.4" y="574.0"></text>
</g>
<g>
<title>byte[] (783 samples, 0.37%)</title><rect x="806.4" y="547.0" width="4.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="809.4" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (341 samples, 0.16%)</title><rect x="810.7" y="579.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.7" y="590.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (341 samples, 0.16%)</title><rect x="810.7" y="563.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="813.7" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (586 samples, 0.27%)</title><rect x="812.6" y="595.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="815.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (586 samples, 0.27%)</title><rect x="812.6" y="579.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="815.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (586 samples, 0.27%)</title><rect x="812.6" y="563.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="815.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (209 samples, 0.10%)</title><rect x="812.6" y="547.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="815.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (377 samples, 0.18%)</title><rect x="813.7" y="547.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="816.7" y="558.0"></text>
</g>
<g>
<title>byte[] (377 samples, 0.18%)</title><rect x="813.7" y="531.0" width="2.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="816.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/EntityWorker.responseProcessEntity (3,441 samples, 1.61%)</title><rect x="815.8" y="611.0" width="19.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="818.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (1,037 samples, 0.48%)</title><rect x="815.8" y="595.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="818.8" y="606.0"></text>
</g>
<g>
<title>one.nio.http.Response (194 samples, 0.09%)</title><rect x="815.8" y="579.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="818.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (843 samples, 0.39%)</title><rect x="816.9" y="579.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="819.9" y="590.0"></text>
</g>
<g>
<title>byte[] (345 samples, 0.16%)</title><rect x="816.9" y="563.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="819.9" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (289 samples, 0.14%)</title><rect x="818.8" y="563.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="821.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (209 samples, 0.10%)</title><rect x="820.4" y="563.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="823.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.getRecord (1,326 samples, 0.62%)</title><rect x="821.5" y="595.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="824.5" y="606.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (230 samples, 0.11%)</title><rect x="821.5" y="579.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="824.5" y="590.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (230 samples, 0.11%)</title><rect x="821.5" y="563.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="824.5" y="574.0"></text>
</g>
<g>
<title>byte[] (230 samples, 0.11%)</title><rect x="821.5" y="547.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="824.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteArrayUtils.packingKey (370 samples, 0.17%)</title><rect x="822.8" y="579.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="825.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteArrayUtils.getArrayFromByteBuffer (370 samples, 0.17%)</title><rect x="822.8" y="563.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="825.8" y="574.0"></text>
</g>
<g>
<title>byte[] (370 samples, 0.17%)</title><rect x="822.8" y="547.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="825.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORecord.fromBytes (726 samples, 0.34%)</title><rect x="824.8" y="579.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="827.8" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (446 samples, 0.21%)</title><rect x="824.8" y="563.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="827.8" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (446 samples, 0.21%)</title><rect x="824.8" y="547.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="827.8" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (446 samples, 0.21%)</title><rect x="824.8" y="531.0" width="2.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="827.8" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.DAORecord (280 samples, 0.13%)</title><rect x="827.3" y="563.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="830.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORecord.toBytes (1,078 samples, 0.50%)</title><rect x="828.8" y="595.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="831.8" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (674 samples, 0.31%)</title><rect x="828.8" y="579.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="831.8" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (407 samples, 0.19%)</title><rect x="828.8" y="563.0" width="2.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="831.8" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (267 samples, 0.12%)</title><rect x="831.1" y="563.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="834.1" y="574.0"></text>
</g>
<g>
<title>byte[] (267 samples, 0.12%)</title><rect x="831.1" y="547.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="834.1" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (404 samples, 0.19%)</title><rect x="832.6" y="579.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="835.6" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (404 samples, 0.19%)</title><rect x="832.6" y="563.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="835.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (13,644 samples, 6.38%)</title><rect x="834.8" y="691.0" width="75.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="837.8" y="702.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (13,644 samples, 6.38%)</title><rect x="834.8" y="675.0" width="75.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="837.8" y="686.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (13,644 samples, 6.38%)</title><rect x="834.8" y="659.0" width="75.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="837.8" y="670.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (13,644 samples, 6.38%)</title><rect x="834.8" y="643.0" width="75.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="837.8" y="654.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (13,644 samples, 6.38%)</title><rect x="834.8" y="627.0" width="75.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="837.8" y="638.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (13,644 samples, 6.38%)</title><rect x="834.8" y="611.0" width="75.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="837.8" y="622.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (13,644 samples, 6.38%)</title><rect x="834.8" y="595.0" width="75.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="837.8" y="606.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (13,644 samples, 6.38%)</title><rect x="834.8" y="579.0" width="75.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="837.8" y="590.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (13,644 samples, 6.38%)</title><rect x="834.8" y="563.0" width="75.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="837.8" y="574.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (12,840 samples, 6.00%)</title><rect x="834.8" y="547.0" width="70.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="837.8" y="558.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/CompletableFutureHelper$$Lambda$149/2098073442.accept (12,840 samples, 6.00%)</title><rect x="834.8" y="531.0" width="70.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="837.8" y="542.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/CompletableFutureHelper.lambda$whenComplete$0 (12,840 samples, 6.00%)</title><rect x="834.8" y="515.0" width="70.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.8" y="526.0">ru/mail/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (12,178 samples, 5.69%)</title><rect x="834.8" y="499.0" width="67.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="837.8" y="510.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12,178 samples, 5.69%)</title><rect x="834.8" y="483.0" width="67.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="837.8" y="494.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (12,178 samples, 5.69%)</title><rect x="834.8" y="467.0" width="67.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="837.8" y="478.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl$$Lambda$151/1647313403.accept (12,178 samples, 5.69%)</title><rect x="834.8" y="451.0" width="67.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="837.8" y="462.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.lambda$entity$1 (12,178 samples, 5.69%)</title><rect x="834.8" y="435.0" width="67.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="837.8" y="446.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,579 samples, 0.74%)</title><rect x="834.8" y="419.0" width="8.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="837.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,579 samples, 0.74%)</title><rect x="834.8" y="403.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="837.8" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,075 samples, 0.50%)</title><rect x="834.8" y="387.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="837.8" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,075 samples, 0.50%)</title><rect x="834.8" y="371.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="837.8" y="382.0"></text>
</g>
<g>
<title>byte[] (1,072 samples, 0.50%)</title><rect x="834.8" y="355.0" width="5.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="837.8" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (504 samples, 0.24%)</title><rect x="840.7" y="387.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="843.7" y="398.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (504 samples, 0.24%)</title><rect x="840.7" y="371.0" width="2.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="843.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/EntityWorker.makeResponse (10,599 samples, 4.95%)</title><rect x="843.5" y="419.0" width="58.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="846.5" y="430.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/ImmutableSet.of (2,135 samples, 1.00%)</title><rect x="843.5" y="403.0" width="11.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="846.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableSet.construct (1,777 samples, 0.83%)</title><rect x="843.5" y="387.0" width="9.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="846.5" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.ImmutableSet$RegularSetBuilderImpl (461 samples, 0.22%)</title><rect x="843.5" y="371.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="846.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableSet$RegularSetBuilderImpl.&lt;init&gt; (947 samples, 0.44%)</title><rect x="846.0" y="371.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="849.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableSet$SetBuilderImpl.&lt;init&gt; (400 samples, 0.19%)</title><rect x="846.0" y="355.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="849.0" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (400 samples, 0.19%)</title><rect x="846.0" y="339.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="849.0" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (547 samples, 0.26%)</title><rect x="848.2" y="355.0" width="3.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="851.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableSet$RegularSetBuilderImpl.build (369 samples, 0.17%)</title><rect x="851.3" y="371.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="854.3" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.RegularImmutableSet (369 samples, 0.17%)</title><rect x="851.3" y="355.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="854.3" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (358 samples, 0.17%)</title><rect x="853.3" y="387.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="856.3" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (754 samples, 0.35%)</title><rect x="855.3" y="403.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="858.3" y="414.0"></text>
</g>
<g>
<title>java.lang.Integer (754 samples, 0.35%)</title><rect x="855.3" y="387.0" width="4.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="858.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (182 samples, 0.09%)</title><rect x="859.4" y="403.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="862.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (182 samples, 0.09%)</title><rect x="859.4" y="387.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="862.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/EntityWorker$$Lambda$332/427126854.get$Lambda (182 samples, 0.09%)</title><rect x="859.4" y="371.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="862.4" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.service.temnovochka.EntityWorker$$Lambda$332 (182 samples, 0.09%)</title><rect x="859.4" y="355.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="862.4" y="366.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,077 samples, 0.50%)</title><rect x="860.4" y="403.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="863.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.spliterator (400 samples, 0.19%)</title><rect x="860.4" y="387.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="863.4" y="398.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (400 samples, 0.19%)</title><rect x="860.4" y="371.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="863.4" y="382.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (400 samples, 0.19%)</title><rect x="860.4" y="355.0" width="2.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="863.4" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (677 samples, 0.32%)</title><rect x="862.6" y="387.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="865.6" y="398.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (677 samples, 0.32%)</title><rect x="862.6" y="371.0" width="3.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="865.6" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.count (1,422 samples, 0.66%)</title><rect x="866.4" y="403.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="869.4" y="414.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1,199 samples, 0.56%)</title><rect x="866.4" y="387.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="869.4" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$5.evaluateSequential (1,199 samples, 0.56%)</title><rect x="866.4" y="371.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="869.4" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$5.evaluateSequential (1,199 samples, 0.56%)</title><rect x="866.4" y="355.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="869.4" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1,199 samples, 0.56%)</title><rect x="866.4" y="339.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="869.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (913 samples, 0.43%)</title><rect x="866.4" y="323.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="869.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (358 samples, 0.17%)</title><rect x="866.4" y="307.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="869.4" y="318.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (358 samples, 0.17%)</title><rect x="866.4" y="291.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="869.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (358 samples, 0.17%)</title><rect x="866.4" y="275.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="869.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/EntityWorker$$Lambda$329/556473600.apply (358 samples, 0.17%)</title><rect x="866.4" y="259.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="869.4" y="270.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (358 samples, 0.17%)</title><rect x="866.4" y="243.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="869.4" y="254.0"></text>
</g>
<g>
<title>java.lang.Integer (358 samples, 0.17%)</title><rect x="866.4" y="227.0" width="1.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="869.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (555 samples, 0.26%)</title><rect x="868.3" y="307.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="871.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (270 samples, 0.13%)</title><rect x="868.3" y="291.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="871.3" y="302.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (270 samples, 0.13%)</title><rect x="868.3" y="275.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="871.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (285 samples, 0.13%)</title><rect x="869.8" y="291.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="872.8" y="302.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (285 samples, 0.13%)</title><rect x="869.8" y="275.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="872.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$5.makeSink (286 samples, 0.13%)</title><rect x="871.4" y="323.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="874.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$5.makeSink (286 samples, 0.13%)</title><rect x="871.4" y="307.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="874.4" y="318.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$CountingSink$OfRef (286 samples, 0.13%)</title><rect x="871.4" y="291.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="874.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRefCounting (223 samples, 0.10%)</title><rect x="873.0" y="387.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="876.0" y="398.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$5 (223 samples, 0.10%)</title><rect x="873.0" y="371.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="876.0" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (700 samples, 0.33%)</title><rect x="874.2" y="403.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="877.2" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (700 samples, 0.33%)</title><rect x="874.2" y="387.0" width="3.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="877.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (740 samples, 0.35%)</title><rect x="878.1" y="403.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="881.1" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (740 samples, 0.35%)</title><rect x="878.1" y="387.0" width="4.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="881.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (1,401 samples, 0.65%)</title><rect x="882.1" y="403.0" width="7.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="885.1" y="414.0"></text>
</g>
<g>
<title>one.nio.http.Response (279 samples, 0.13%)</title><rect x="882.1" y="387.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="885.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,122 samples, 0.52%)</title><rect x="883.7" y="387.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="886.7" y="398.0"></text>
</g>
<g>
<title>byte[] (461 samples, 0.22%)</title><rect x="883.7" y="371.0" width="2.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="886.7" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (376 samples, 0.18%)</title><rect x="886.2" y="371.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="889.2" y="382.0"></text>
</g>
<g>
<title>java.lang.String (285 samples, 0.13%)</title><rect x="888.3" y="371.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="891.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteArrayUtils.getArrayFromByteBuffer (264 samples, 0.12%)</title><rect x="889.9" y="403.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="892.9" y="414.0"></text>
</g>
<g>
<title>byte[] (264 samples, 0.12%)</title><rect x="889.9" y="387.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="892.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORecord.fromBytes (1,924 samples, 0.90%)</title><rect x="891.3" y="403.0" width="10.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="894.3" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,151 samples, 0.54%)</title><rect x="891.3" y="387.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="894.3" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,151 samples, 0.54%)</title><rect x="891.3" y="371.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="894.3" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,151 samples, 0.54%)</title><rect x="891.3" y="355.0" width="6.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="894.3" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.DAORecord (773 samples, 0.36%)</title><rect x="897.7" y="387.0" width="4.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="900.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (662 samples, 0.31%)</title><rect x="901.9" y="499.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="904.9" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (662 samples, 0.31%)</title><rect x="901.9" y="483.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="904.9" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (662 samples, 0.31%)</title><rect x="901.9" y="467.0" width="3.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="904.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (804 samples, 0.38%)</title><rect x="905.6" y="547.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="908.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl$$Lambda$147/1307955129.apply (804 samples, 0.38%)</title><rect x="905.6" y="531.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="908.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ResponseRepresentation.create (804 samples, 0.38%)</title><rect x="905.6" y="515.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="908.6" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.temnovochka.ResponseRepresentation (804 samples, 0.38%)</title><rect x="905.6" y="499.0" width="4.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="908.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (5,772 samples, 2.70%)</title><rect x="910.0" y="691.0" width="31.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="913.0" y="702.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (111 samples, 0.05%)</title><rect x="910.0" y="675.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="913.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (111 samples, 0.05%)</title><rect x="910.0" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="913.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$271/440731402.get$Lambda (71 samples, 0.03%)</title><rect x="910.0" y="643.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="913.0" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$271 (71 samples, 0.03%)</title><rect x="910.0" y="627.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="913.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/158199555.linkToTargetMethod (99 samples, 0.05%)</title><rect x="910.6" y="675.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="913.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (99 samples, 0.05%)</title><rect x="910.6" y="659.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="913.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$273/639487537.get$Lambda (99 samples, 0.05%)</title><rect x="910.6" y="643.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="913.6" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$273 (99 samples, 0.05%)</title><rect x="910.6" y="627.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="913.6" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,449 samples, 0.68%)</title><rect x="911.2" y="675.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="914.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$275/741444211.accept (1,237 samples, 0.58%)</title><rect x="911.2" y="659.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="914.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (1,237 samples, 0.58%)</title><rect x="911.2" y="643.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="914.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (1,237 samples, 0.58%)</title><rect x="911.2" y="627.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="914.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (1,237 samples, 0.58%)</title><rect x="911.2" y="611.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="914.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (1,237 samples, 0.58%)</title><rect x="911.2" y="595.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="914.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (1,237 samples, 0.58%)</title><rect x="911.2" y="579.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="914.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,237 samples, 0.58%)</title><rect x="911.2" y="563.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="914.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,237 samples, 0.58%)</title><rect x="911.2" y="547.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="914.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,237 samples, 0.58%)</title><rect x="911.2" y="531.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="914.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,237 samples, 0.58%)</title><rect x="911.2" y="515.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="914.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$170/486873856.run (1,237 samples, 0.58%)</title><rect x="911.2" y="499.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="914.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,237 samples, 0.58%)</title><rect x="911.2" y="483.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="914.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (285 samples, 0.13%)</title><rect x="911.2" y="467.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="914.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (285 samples, 0.13%)</title><rect x="911.2" y="451.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="914.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (285 samples, 0.13%)</title><rect x="911.2" y="435.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="914.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (124 samples, 0.06%)</title><rect x="911.2" y="419.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="914.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (124 samples, 0.06%)</title><rect x="911.2" y="403.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="914.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (124 samples, 0.06%)</title><rect x="911.2" y="387.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="914.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (124 samples, 0.06%)</title><rect x="911.2" y="371.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="914.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (124 samples, 0.06%)</title><rect x="911.2" y="355.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="914.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (161 samples, 0.08%)</title><rect x="911.9" y="419.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="914.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (161 samples, 0.08%)</title><rect x="911.9" y="403.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="914.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (161 samples, 0.08%)</title><rect x="911.9" y="387.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="914.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (161 samples, 0.08%)</title><rect x="911.9" y="371.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="914.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (161 samples, 0.08%)</title><rect x="911.9" y="355.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="914.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (161 samples, 0.08%)</title><rect x="911.9" y="339.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="914.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (161 samples, 0.08%)</title><rect x="911.9" y="323.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="914.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (161 samples, 0.08%)</title><rect x="911.9" y="307.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="914.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (154 samples, 0.07%)</title><rect x="912.7" y="467.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="915.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (154 samples, 0.07%)</title><rect x="912.7" y="451.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="915.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (154 samples, 0.07%)</title><rect x="912.7" y="435.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="915.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (154 samples, 0.07%)</title><rect x="912.7" y="419.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="915.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (154 samples, 0.07%)</title><rect x="912.7" y="403.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="915.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1524960486.linkToTargetMethod (108 samples, 0.05%)</title><rect x="912.7" y="387.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="915.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1990160809.invoke (108 samples, 0.05%)</title><rect x="912.7" y="371.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="915.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (108 samples, 0.05%)</title><rect x="912.7" y="355.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="915.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (108 samples, 0.05%)</title><rect x="912.7" y="339.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="915.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (108 samples, 0.05%)</title><rect x="912.7" y="323.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="915.7" y="334.0"></text>
</g>
<g>
<title>byte[] (108 samples, 0.05%)</title><rect x="912.7" y="307.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="915.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (46 samples, 0.02%)</title><rect x="913.3" y="387.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="916.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (46 samples, 0.02%)</title><rect x="913.3" y="371.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="916.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (46 samples, 0.02%)</title><rect x="913.3" y="355.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="916.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$285/131615096.get$Lambda (46 samples, 0.02%)</title><rect x="913.3" y="339.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="916.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$285 (46 samples, 0.02%)</title><rect x="913.3" y="323.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="916.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (77 samples, 0.04%)</title><rect x="913.6" y="467.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="916.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (77 samples, 0.04%)</title><rect x="913.6" y="451.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="916.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (77 samples, 0.04%)</title><rect x="913.6" y="435.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="916.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$285/131615096.get$Lambda (77 samples, 0.04%)</title><rect x="913.6" y="419.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="916.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$285 (77 samples, 0.04%)</title><rect x="913.6" y="403.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="916.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (721 samples, 0.34%)</title><rect x="914.0" y="467.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="917.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (332 samples, 0.16%)</title><rect x="914.0" y="451.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="917.0" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (213 samples, 0.10%)</title><rect x="914.0" y="435.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="917.0" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (213 samples, 0.10%)</title><rect x="914.0" y="419.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="917.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (119 samples, 0.06%)</title><rect x="915.2" y="435.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="918.2" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (119 samples, 0.06%)</title><rect x="915.2" y="419.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="918.2" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (119 samples, 0.06%)</title><rect x="915.2" y="403.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="918.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (389 samples, 0.18%)</title><rect x="915.9" y="451.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="918.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$168/1680006905.get (389 samples, 0.18%)</title><rect x="915.9" y="435.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="918.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (389 samples, 0.18%)</title><rect x="915.9" y="419.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="918.9" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (389 samples, 0.18%)</title><rect x="915.9" y="403.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="918.9" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (389 samples, 0.18%)</title><rect x="915.9" y="387.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="918.9" y="398.0"></text>
</g>
<g>
<title>byte[] (368 samples, 0.17%)</title><rect x="916.0" y="371.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="919.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$283/379100665.accept (212 samples, 0.10%)</title><rect x="918.0" y="659.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="921.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (212 samples, 0.10%)</title><rect x="918.0" y="643.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="921.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$273/639487537.run (212 samples, 0.10%)</title><rect x="918.0" y="627.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="921.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (212 samples, 0.10%)</title><rect x="918.0" y="611.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="921.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (212 samples, 0.10%)</title><rect x="918.0" y="595.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="921.0" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (212 samples, 0.10%)</title><rect x="918.0" y="579.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="921.0" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (212 samples, 0.10%)</title><rect x="918.0" y="563.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="921.0" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (212 samples, 0.10%)</title><rect x="918.0" y="547.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="921.0" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (889 samples, 0.42%)</title><rect x="919.2" y="675.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="922.2" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (889 samples, 0.42%)</title><rect x="919.2" y="659.0" width="4.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="922.2" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (230 samples, 0.11%)</title><rect x="924.1" y="675.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="927.1" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (128 samples, 0.06%)</title><rect x="924.1" y="659.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="927.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (128 samples, 0.06%)</title><rect x="924.1" y="643.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="927.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (128 samples, 0.06%)</title><rect x="924.1" y="627.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="927.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (128 samples, 0.06%)</title><rect x="924.1" y="611.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="927.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (128 samples, 0.06%)</title><rect x="924.1" y="595.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="927.1" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (128 samples, 0.06%)</title><rect x="924.1" y="579.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="927.1" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (128 samples, 0.06%)</title><rect x="924.1" y="563.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="927.1" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (102 samples, 0.05%)</title><rect x="924.8" y="659.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="927.8" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (102 samples, 0.05%)</title><rect x="924.8" y="643.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="927.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (770 samples, 0.36%)</title><rect x="925.3" y="675.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="928.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$172/139126034.run (312 samples, 0.15%)</title><rect x="925.3" y="659.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="928.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (312 samples, 0.15%)</title><rect x="925.3" y="643.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="928.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (312 samples, 0.15%)</title><rect x="925.3" y="627.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="928.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (312 samples, 0.15%)</title><rect x="925.3" y="611.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="928.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (312 samples, 0.15%)</title><rect x="925.3" y="595.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="928.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (312 samples, 0.15%)</title><rect x="925.3" y="579.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="928.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$170/486873856.run (312 samples, 0.15%)</title><rect x="925.3" y="563.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="928.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (312 samples, 0.15%)</title><rect x="925.3" y="547.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="928.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (263 samples, 0.12%)</title><rect x="925.3" y="531.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="928.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (263 samples, 0.12%)</title><rect x="925.3" y="515.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="928.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (90 samples, 0.04%)</title><rect x="925.3" y="499.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="928.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (90 samples, 0.04%)</title><rect x="925.3" y="483.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="928.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (90 samples, 0.04%)</title><rect x="925.3" y="467.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="928.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1524960486.linkToTargetMethod (66 samples, 0.03%)</title><rect x="925.3" y="451.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="928.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1990160809.invoke (66 samples, 0.03%)</title><rect x="925.3" y="435.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="928.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (66 samples, 0.03%)</title><rect x="925.3" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="928.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (66 samples, 0.03%)</title><rect x="925.3" y="403.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="928.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (66 samples, 0.03%)</title><rect x="925.3" y="387.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="928.3" y="398.0"></text>
</g>
<g>
<title>byte[] (66 samples, 0.03%)</title><rect x="925.3" y="371.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="928.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (173 samples, 0.08%)</title><rect x="925.8" y="499.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="928.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (173 samples, 0.08%)</title><rect x="925.8" y="483.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="928.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (173 samples, 0.08%)</title><rect x="925.8" y="467.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="928.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (173 samples, 0.08%)</title><rect x="925.8" y="451.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="928.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (173 samples, 0.08%)</title><rect x="925.8" y="435.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="928.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (173 samples, 0.08%)</title><rect x="925.8" y="419.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="928.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (173 samples, 0.08%)</title><rect x="925.8" y="403.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="928.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (173 samples, 0.08%)</title><rect x="925.8" y="387.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="928.8" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (173 samples, 0.08%)</title><rect x="925.8" y="371.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="928.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (49 samples, 0.02%)</title><rect x="926.8" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="929.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.02%)</title><rect x="926.8" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="929.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.02%)</title><rect x="926.8" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="929.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$285/131615096.get$Lambda (49 samples, 0.02%)</title><rect x="926.8" y="483.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="929.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$285 (49 samples, 0.02%)</title><rect x="926.8" y="467.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="929.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$174/1875493212.run (458 samples, 0.21%)</title><rect x="927.1" y="659.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="930.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (458 samples, 0.21%)</title><rect x="927.1" y="643.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="930.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (166 samples, 0.08%)</title><rect x="927.1" y="627.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="930.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (166 samples, 0.08%)</title><rect x="927.1" y="611.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="930.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$291/1350458117.get$Lambda (166 samples, 0.08%)</title><rect x="927.1" y="595.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="930.1" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$291 (166 samples, 0.08%)</title><rect x="927.1" y="579.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="930.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (292 samples, 0.14%)</title><rect x="928.0" y="627.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="931.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (292 samples, 0.14%)</title><rect x="928.0" y="611.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="931.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (292 samples, 0.14%)</title><rect x="928.0" y="595.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="931.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (292 samples, 0.14%)</title><rect x="928.0" y="579.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="931.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (292 samples, 0.14%)</title><rect x="928.0" y="563.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="931.0" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (292 samples, 0.14%)</title><rect x="928.0" y="547.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="931.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (893 samples, 0.42%)</title><rect x="929.6" y="675.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="932.6" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (197 samples, 0.09%)</title><rect x="929.6" y="659.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="932.6" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (197 samples, 0.09%)</title><rect x="929.6" y="643.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="932.6" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (197 samples, 0.09%)</title><rect x="929.6" y="627.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="932.6" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (197 samples, 0.09%)</title><rect x="929.6" y="611.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="932.6" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (197 samples, 0.09%)</title><rect x="929.6" y="595.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="932.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (696 samples, 0.33%)</title><rect x="930.7" y="659.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="933.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (96 samples, 0.04%)</title><rect x="930.7" y="643.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="933.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (96 samples, 0.04%)</title><rect x="930.7" y="627.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="933.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$339/1840883670.get$Lambda (96 samples, 0.04%)</title><rect x="930.7" y="611.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="933.7" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$339 (96 samples, 0.04%)</title><rect x="930.7" y="595.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="933.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (74 samples, 0.03%)</title><rect x="931.2" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="934.2" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.of (74 samples, 0.03%)</title><rect x="931.2" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="934.2" y="638.0"></text>
</g>
<g>
<title>java.util.Optional (74 samples, 0.03%)</title><rect x="931.2" y="611.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="934.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (526 samples, 0.25%)</title><rect x="931.6" y="643.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="934.6" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (161 samples, 0.08%)</title><rect x="931.6" y="627.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="934.6" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (365 samples, 0.17%)</title><rect x="932.5" y="627.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="935.5" y="638.0"></text>
</g>
<g>
<title>java.util.LinkedList$DescendingIterator (124 samples, 0.06%)</title><rect x="932.5" y="611.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="935.5" y="622.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (241 samples, 0.11%)</title><rect x="933.2" y="611.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="936.2" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (241 samples, 0.11%)</title><rect x="933.2" y="595.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="936.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (897 samples, 0.42%)</title><rect x="934.5" y="675.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="937.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (89 samples, 0.04%)</title><rect x="934.5" y="659.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="937.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (89 samples, 0.04%)</title><rect x="934.5" y="643.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="937.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$269/550850167.get$Lambda (89 samples, 0.04%)</title><rect x="934.5" y="627.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="937.5" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$269 (89 samples, 0.04%)</title><rect x="934.5" y="611.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="937.5" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (498 samples, 0.23%)</title><rect x="935.0" y="659.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="938.0" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (205 samples, 0.10%)</title><rect x="935.0" y="643.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="938.0" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (205 samples, 0.10%)</title><rect x="935.0" y="627.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="938.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (293 samples, 0.14%)</title><rect x="936.1" y="643.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="939.1" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (293 samples, 0.14%)</title><rect x="936.1" y="627.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="939.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (310 samples, 0.14%)</title><rect x="937.7" y="659.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="940.7" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (310 samples, 0.14%)</title><rect x="937.7" y="643.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="940.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (255 samples, 0.12%)</title><rect x="939.4" y="675.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="942.4" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (255 samples, 0.12%)</title><rect x="939.4" y="659.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="942.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (255 samples, 0.12%)</title><rect x="939.4" y="643.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="942.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (253 samples, 0.12%)</title><rect x="939.4" y="627.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="942.4" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (75 samples, 0.04%)</title><rect x="939.4" y="611.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="942.4" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (75 samples, 0.04%)</title><rect x="939.4" y="595.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="942.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (178 samples, 0.08%)</title><rect x="939.9" y="611.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="942.9" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (178 samples, 0.08%)</title><rect x="939.9" y="595.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="942.9" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (178 samples, 0.08%)</title><rect x="939.9" y="579.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="942.9" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (178 samples, 0.08%)</title><rect x="939.9" y="563.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="942.9" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (178 samples, 0.08%)</title><rect x="939.9" y="547.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="942.9" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (178 samples, 0.08%)</title><rect x="939.9" y="531.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="942.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (80 samples, 0.04%)</title><rect x="940.9" y="675.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="943.9" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (80 samples, 0.04%)</title><rect x="940.9" y="659.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="943.9" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (80 samples, 0.04%)</title><rect x="940.9" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="943.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (80 samples, 0.04%)</title><rect x="940.9" y="627.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="943.9" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (74 samples, 0.03%)</title><rect x="940.9" y="611.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="943.9" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (74 samples, 0.03%)</title><rect x="940.9" y="595.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="943.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (99 samples, 0.05%)</title><rect x="941.3" y="675.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="944.3" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (99 samples, 0.05%)</title><rect x="941.3" y="659.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="944.3" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (99 samples, 0.05%)</title><rect x="941.3" y="643.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="944.3" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (99 samples, 0.05%)</title><rect x="941.3" y="627.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="944.3" y="638.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (58 samples, 0.03%)</title><rect x="941.8" y="691.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="944.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.createSession (58 samples, 0.03%)</title><rect x="941.8" y="675.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="944.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.createSession (58 samples, 0.03%)</title><rect x="941.8" y="659.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="944.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/StorageSession.&lt;init&gt; (53 samples, 0.02%)</title><rect x="941.9" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="944.9" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (53 samples, 0.02%)</title><rect x="941.9" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="944.9" y="638.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.02%)</title><rect x="941.9" y="611.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="944.9" y="622.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (44,952 samples, 21.00%)</title><rect x="942.2" y="691.0" width="247.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="945.2" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,210 samples, 0.57%)</title><rect x="942.2" y="675.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="945.2" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1,210 samples, 0.57%)</title><rect x="942.2" y="659.0" width="6.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="945.2" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (43,741 samples, 20.44%)</title><rect x="948.8" y="675.0" width="241.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="951.8" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (43,741 samples, 20.44%)</title><rect x="948.8" y="659.0" width="241.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="951.8" y="670.0">one/nio/http/HttpSession.process..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (43,741 samples, 20.44%)</title><rect x="948.8" y="643.0" width="241.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="951.8" y="654.0">one/nio/http/HttpSession.process..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (16,052 samples, 7.50%)</title><rect x="948.8" y="627.0" width="88.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="951.8" y="638.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (16,052 samples, 7.50%)</title><rect x="948.8" y="611.0" width="88.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="951.8" y="622.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (14,632 samples, 6.84%)</title><rect x="948.8" y="595.0" width="80.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="951.8" y="606.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,195 samples, 0.56%)</title><rect x="948.8" y="579.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="951.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,195 samples, 0.56%)</title><rect x="948.8" y="563.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="951.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,195 samples, 0.56%)</title><rect x="948.8" y="547.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="951.8" y="558.0"></text>
</g>
<g>
<title>java.lang.String (617 samples, 0.29%)</title><rect x="948.8" y="531.0" width="3.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="951.8" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (578 samples, 0.27%)</title><rect x="952.2" y="531.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="955.2" y="542.0"></text>
</g>
<g>
<title>byte[] (578 samples, 0.27%)</title><rect x="952.2" y="515.0" width="3.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="955.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.entity (13,437 samples, 6.28%)</title><rect x="955.4" y="579.0" width="74.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="958.4" y="590.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (622 samples, 0.29%)</title><rect x="955.4" y="563.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="958.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (622 samples, 0.29%)</title><rect x="955.4" y="547.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="958.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (622 samples, 0.29%)</title><rect x="955.4" y="531.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="958.4" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (622 samples, 0.29%)</title><rect x="955.4" y="515.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="958.4" y="526.0"></text>
</g>
<g>
<title>byte[] (622 samples, 0.29%)</title><rect x="955.4" y="499.0" width="3.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="958.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1992998231.linkToTargetMethod (441 samples, 0.21%)</title><rect x="958.9" y="563.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="961.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1554993291.invokeStatic (441 samples, 0.21%)</title><rect x="958.9" y="547.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="961.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl$$Lambda$109/1485885249.get$Lambda (441 samples, 0.21%)</title><rect x="958.9" y="531.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="961.9" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.temnovochka.ServiceImpl$$Lambda$109 (441 samples, 0.21%)</title><rect x="958.9" y="515.0" width="2.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="961.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/42129038.linkToTargetMethod (651 samples, 0.30%)</title><rect x="961.3" y="563.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="964.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1899094586.invokeStatic (651 samples, 0.30%)</title><rect x="961.3" y="547.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="964.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl$$Lambda$302/1732130861.get$Lambda (651 samples, 0.30%)</title><rect x="961.3" y="531.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="964.3" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.temnovochka.ServiceImpl$$Lambda$302 (651 samples, 0.30%)</title><rect x="961.3" y="515.0" width="3.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="964.3" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,273 samples, 0.59%)</title><rect x="964.9" y="563.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="967.9" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,273 samples, 0.59%)</title><rect x="964.9" y="547.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="967.9" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,273 samples, 0.59%)</title><rect x="964.9" y="531.0" width="7.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="967.9" y="542.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (765 samples, 0.36%)</title><rect x="971.9" y="563.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="974.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (765 samples, 0.36%)</title><rect x="971.9" y="547.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="974.9" y="558.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (758 samples, 0.35%)</title><rect x="971.9" y="531.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="974.9" y="542.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (758 samples, 0.35%)</title><rect x="971.9" y="515.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="974.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (758 samples, 0.35%)</title><rect x="971.9" y="499.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="974.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (758 samples, 0.35%)</title><rect x="971.9" y="483.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="974.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (758 samples, 0.35%)</title><rect x="971.9" y="467.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="974.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (758 samples, 0.35%)</title><rect x="971.9" y="451.0" width="4.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="974.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/EntityWorker.parseReplicas (228 samples, 0.11%)</title><rect x="976.1" y="563.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="979.1" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.temnovochka.EntityWorker$Replicas (228 samples, 0.11%)</title><rect x="976.1" y="547.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="979.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/LoadRouter.selectNodeForKey (7,733 samples, 3.61%)</title><rect x="977.4" y="563.0" width="42.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="980.4" y="574.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (189 samples, 0.09%)</title><rect x="977.4" y="547.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="980.4" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$2.next (189 samples, 0.09%)</title><rect x="977.4" y="531.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="980.4" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (189 samples, 0.09%)</title><rect x="977.4" y="515.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="980.4" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (189 samples, 0.09%)</title><rect x="977.4" y="499.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="980.4" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (304 samples, 0.14%)</title><rect x="978.4" y="547.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="981.4" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$2.next (304 samples, 0.14%)</title><rect x="978.4" y="531.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="981.4" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (304 samples, 0.14%)</title><rect x="978.4" y="515.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="981.4" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (304 samples, 0.14%)</title><rect x="978.4" y="499.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="981.4" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.cycle (287 samples, 0.13%)</title><rect x="980.1" y="547.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="983.1" y="558.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$2 (287 samples, 0.13%)</title><rect x="980.1" y="531.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="983.1" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/TreeRangeMap.get (368 samples, 0.17%)</title><rect x="981.7" y="547.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="984.7" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/TreeRangeMap.getEntry (368 samples, 0.17%)</title><rect x="981.7" y="531.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="984.7" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Cut.belowValue (146 samples, 0.07%)</title><rect x="981.7" y="515.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="984.7" y="526.0"></text>
</g>
<g>
<title>com.google.common.collect.Cut$BelowValue (146 samples, 0.07%)</title><rect x="981.7" y="499.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="984.7" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.floorEntry (222 samples, 0.10%)</title><rect x="982.5" y="515.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="985.5" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.exportEntry (222 samples, 0.10%)</title><rect x="982.5" y="499.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="985.5" y="510.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (222 samples, 0.10%)</title><rect x="982.5" y="483.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="985.5" y="494.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (5,638 samples, 2.63%)</title><rect x="983.7" y="547.0" width="31.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="986.7" y="558.0">co..</text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (5,221 samples, 2.44%)</title><rect x="983.7" y="531.0" width="28.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="986.7" y="542.0">co..</text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction.newHasher (5,221 samples, 2.44%)</title><rect x="983.7" y="515.0" width="28.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="986.7" y="526.0">co..</text>
</g>
<g>
<title>com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher (281 samples, 0.13%)</title><rect x="983.7" y="499.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="986.7" y="510.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (669 samples, 0.31%)</title><rect x="985.2" y="499.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="988.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (669 samples, 0.31%)</title><rect x="985.2" y="483.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="988.2" y="494.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractByteHasher.&lt;init&gt; (669 samples, 0.31%)</title><rect x="985.2" y="467.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="988.2" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (669 samples, 0.31%)</title><rect x="985.2" y="451.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="988.2" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (444 samples, 0.21%)</title><rect x="985.2" y="435.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="988.2" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (225 samples, 0.11%)</title><rect x="987.7" y="435.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="990.7" y="446.0"></text>
</g>
<g>
<title>byte[] (225 samples, 0.11%)</title><rect x="987.7" y="419.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="990.7" y="430.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.clone (4,271 samples, 2.00%)</title><rect x="988.9" y="499.0" width="23.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="991.9" y="510.0">j..</text>
</g>
<g>
<title>java.security.MessageDigest$Delegate (294 samples, 0.14%)</title><rect x="988.9" y="483.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="991.9" y="494.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2$SHA256.clone (3,977 samples, 1.86%)</title><rect x="990.6" y="483.0" width="21.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="993.6" y="494.0">s..</text>
</g>
<g>
<title>sun/security/provider/SHA2.clone (3,977 samples, 1.86%)</title><rect x="990.6" y="467.0" width="21.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="993.6" y="478.0">s..</text>
</g>
<g>
<title>int[] (2,291 samples, 1.07%)</title><rect x="990.6" y="451.0" width="12.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="993.6" y="462.0"></text>
</g>
<g>
<title>int[] (393 samples, 0.18%)</title><rect x="1003.2" y="451.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1006.2" y="462.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.clone (1,293 samples, 0.60%)</title><rect x="1005.4" y="451.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1008.4" y="462.0"></text>
</g>
<g>
<title>byte[] (730 samples, 0.34%)</title><rect x="1005.4" y="435.0" width="4.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1008.4" y="446.0"></text>
</g>
<g>
<title>java/security/MessageDigestSpi.clone (563 samples, 0.26%)</title><rect x="1009.4" y="435.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1012.4" y="446.0"></text>
</g>
<g>
<title>sun.security.provider.SHA2$SHA256 (563 samples, 0.26%)</title><rect x="1009.4" y="419.0" width="3.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1012.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.hash (417 samples, 0.19%)</title><rect x="1012.5" y="531.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1015.5" y="542.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (417 samples, 0.19%)</title><rect x="1012.5" y="515.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1015.5" y="526.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (417 samples, 0.19%)</title><rect x="1012.5" y="499.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1015.5" y="510.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (417 samples, 0.19%)</title><rect x="1012.5" y="483.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1015.5" y="494.0"></text>
</g>
<g>
<title>byte[] (417 samples, 0.19%)</title><rect x="1012.5" y="467.0" width="2.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1015.5" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (323 samples, 0.15%)</title><rect x="1014.8" y="547.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1017.8" y="558.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (149 samples, 0.07%)</title><rect x="1016.6" y="547.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1019.6" y="558.0"></text>
</g>
<g>
<title>java.lang.Integer (149 samples, 0.07%)</title><rect x="1016.6" y="531.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1019.6" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (475 samples, 0.22%)</title><rect x="1017.4" y="547.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1020.4" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (475 samples, 0.22%)</title><rect x="1017.4" y="531.0" width="2.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1020.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.getTimestamp (915 samples, 0.43%)</title><rect x="1020.0" y="563.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1023.0" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (915 samples, 0.43%)</title><rect x="1020.0" y="547.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1023.0" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (915 samples, 0.43%)</title><rect x="1020.0" y="531.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1023.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (915 samples, 0.43%)</title><rect x="1020.0" y="515.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1023.0" y="526.0"></text>
</g>
<g>
<title>java.lang.String (392 samples, 0.18%)</title><rect x="1020.0" y="499.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1023.0" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (523 samples, 0.24%)</title><rect x="1022.2" y="499.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1025.2" y="510.0"></text>
</g>
<g>
<title>byte[] (523 samples, 0.24%)</title><rect x="1022.2" y="483.0" width="2.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1025.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.isSystemRequest (809 samples, 0.38%)</title><rect x="1025.0" y="563.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1028.0" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (809 samples, 0.38%)</title><rect x="1025.0" y="547.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1028.0" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (809 samples, 0.38%)</title><rect x="1025.0" y="531.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1028.0" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (809 samples, 0.38%)</title><rect x="1025.0" y="515.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1028.0" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (809 samples, 0.38%)</title><rect x="1025.0" y="499.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1028.0" y="510.0"></text>
</g>
<g>
<title>java.lang.String (426 samples, 0.20%)</title><rect x="1025.0" y="483.0" width="2.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1028.0" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (383 samples, 0.18%)</title><rect x="1027.4" y="483.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1030.4" y="494.0"></text>
</g>
<g>
<title>byte[] (383 samples, 0.18%)</title><rect x="1027.4" y="467.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1030.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,420 samples, 0.66%)</title><rect x="1029.5" y="595.0" width="7.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1032.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,420 samples, 0.66%)</title><rect x="1029.5" y="579.0" width="7.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1032.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,420 samples, 0.66%)</title><rect x="1029.5" y="563.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1032.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (600 samples, 0.28%)</title><rect x="1029.5" y="547.0" width="3.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1032.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (820 samples, 0.38%)</title><rect x="1032.8" y="547.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1035.8" y="558.0"></text>
</g>
<g>
<title>byte[] (820 samples, 0.38%)</title><rect x="1032.8" y="531.0" width="4.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1035.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6,397 samples, 2.99%)</title><rect x="1037.3" y="627.0" width="35.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1040.3" y="638.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (1,032 samples, 0.48%)</title><rect x="1037.3" y="611.0" width="5.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1040.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,961 samples, 0.92%)</title><rect x="1043.0" y="611.0" width="10.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1046.0" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (1,961 samples, 0.92%)</title><rect x="1043.0" y="595.0" width="10.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1046.0" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,404 samples, 1.59%)</title><rect x="1053.8" y="611.0" width="18.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1056.8" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,404 samples, 1.59%)</title><rect x="1053.8" y="595.0" width="18.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1056.8" y="606.0"></text>
</g>
<g>
<title>char[] (1,709 samples, 0.80%)</title><rect x="1053.8" y="579.0" width="9.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1056.8" y="590.0"></text>
</g>
<g>
<title>java.lang.String (607 samples, 0.28%)</title><rect x="1063.3" y="579.0" width="3.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1066.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,088 samples, 0.51%)</title><rect x="1066.6" y="579.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1069.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,088 samples, 0.51%)</title><rect x="1066.6" y="563.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1069.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,088 samples, 0.51%)</title><rect x="1066.6" y="547.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1069.6" y="558.0"></text>
</g>
<g>
<title>byte[] (1,088 samples, 0.51%)</title><rect x="1066.6" y="531.0" width="6.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1069.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (278 samples, 0.13%)</title><rect x="1072.6" y="627.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1075.6" y="638.0"></text>
</g>
<g>
<title>byte[] (278 samples, 0.13%)</title><rect x="1072.6" y="611.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1075.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (810 samples, 0.38%)</title><rect x="1074.1" y="627.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1077.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (810 samples, 0.38%)</title><rect x="1074.1" y="611.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1077.1" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (810 samples, 0.38%)</title><rect x="1074.1" y="595.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1077.1" y="606.0"></text>
</g>
<g>
<title>java.lang.String (404 samples, 0.19%)</title><rect x="1074.1" y="579.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1077.1" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (406 samples, 0.19%)</title><rect x="1076.4" y="579.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1079.4" y="590.0"></text>
</g>
<g>
<title>byte[] (406 samples, 0.19%)</title><rect x="1076.4" y="563.0" width="2.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1079.4" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20,204 samples, 9.44%)</title><rect x="1078.6" y="627.0" width="111.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1081.6" y="638.0">one/nio/util/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (20,204 samples, 9.44%)</title><rect x="1078.6" y="611.0" width="111.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1081.6" y="622.0">one/nio/util/..</text>
</g>
<g>
<title>char[] (10,271 samples, 4.80%)</title><rect x="1078.6" y="595.0" width="56.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1081.6" y="606.0">char[]</text>
</g>
<g>
<title>java.lang.String (3,306 samples, 1.54%)</title><rect x="1135.2" y="595.0" width="18.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1138.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6,627 samples, 3.10%)</title><rect x="1153.5" y="595.0" width="36.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1156.5" y="606.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6,627 samples, 3.10%)</title><rect x="1153.5" y="579.0" width="36.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1156.5" y="590.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6,627 samples, 3.10%)</title><rect x="1153.5" y="563.0" width="36.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1156.5" y="574.0">jav..</text>
</g>
<g>
<title>byte[] (6,627 samples, 3.10%)</title><rect x="1153.5" y="547.0" width="36.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1156.5" y="558.0">byt..</text>
</g>
</g>
</svg>

<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (318,668 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (225,992 samples, 70.92%)</title><rect x="10.0" y="803.0" width="836.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (225,992 samples, 70.92%)</title><rect x="10.0" y="787.0" width="836.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (225,992 samples, 70.92%)</title><rect x="10.0" y="771.0" width="836.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (102,242 samples, 32.08%)</title><rect x="10.0" y="755.0" width="378.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (102,242 samples, 32.08%)</title><rect x="10.0" y="739.0" width="378.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/util/concurrent/CompletableFuture.postComplete</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (102,242 samples, 32.08%)</title><rect x="10.0" y="723.0" width="378.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/util/concurrent/CompletableFuture$UniCompose.tr..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (417 samples, 0.13%)</title><rect x="10.0" y="707.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$136/665754590.apply (101,756 samples, 31.93%)</title><rect x="11.7" y="707.0" width="376.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.7" y="718.0">jdk/internal/net/http/MultiExchange$$Lambda$136/665..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (101,756 samples, 31.93%)</title><rect x="11.7" y="691.0" width="376.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.7" y="702.0">jdk/internal/net/http/MultiExchange.lambda$response..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (101,756 samples, 31.93%)</title><rect x="11.7" y="675.0" width="376.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.7" y="686.0">jdk/internal/net/http/MultiExchange.responseAsyncImpl</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (495 samples, 0.16%)</title><rect x="11.7" y="659.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (495 samples, 0.16%)</title><rect x="11.7" y="643.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$220/775820891.get$Lambda (318 samples, 0.10%)</title><rect x="11.7" y="627.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.7" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$220 (318 samples, 0.10%)</title><rect x="11.7" y="611.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="14.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$225/975822862.get$Lambda (177 samples, 0.06%)</title><rect x="12.9" y="627.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.9" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$225 (177 samples, 0.06%)</title><rect x="12.9" y="611.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="15.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (901 samples, 0.28%)</title><rect x="13.6" y="659.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="16.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (901 samples, 0.28%)</title><rect x="13.6" y="643.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="16.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (507 samples, 0.16%)</title><rect x="13.6" y="627.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="16.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (394 samples, 0.12%)</title><rect x="15.5" y="627.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (394 samples, 0.12%)</title><rect x="15.5" y="611.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.5" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (394 samples, 0.12%)</title><rect x="15.5" y="595.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="18.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,737 samples, 0.55%)</title><rect x="16.9" y="659.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,737 samples, 0.55%)</title><rect x="16.9" y="643.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.9" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (968 samples, 0.30%)</title><rect x="16.9" y="627.0" width="3.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="19.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (769 samples, 0.24%)</title><rect x="20.5" y="627.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (769 samples, 0.24%)</title><rect x="20.5" y="611.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.5" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (769 samples, 0.24%)</title><rect x="20.5" y="595.0" width="2.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="23.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (95,947 samples, 30.11%)</title><rect x="23.3" y="659.0" width="355.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="26.3" y="670.0">jdk/internal/net/http/Exchange.responseAsync</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (95,947 samples, 30.11%)</title><rect x="23.3" y="643.0" width="355.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.3" y="654.0">jdk/internal/net/http/Exchange.responseAsyncImpl</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (95,947 samples, 30.11%)</title><rect x="23.3" y="627.0" width="355.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.3" y="638.0">jdk/internal/net/http/Exchange.responseAsyncImpl0</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (851 samples, 0.27%)</title><rect x="23.3" y="611.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="26.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (851 samples, 0.27%)</title><rect x="23.3" y="595.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$153/448982412.get$Lambda (204 samples, 0.06%)</title><rect x="23.3" y="579.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="26.3" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$153 (204 samples, 0.06%)</title><rect x="23.3" y="563.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="26.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$154/1591917242.get$Lambda (323 samples, 0.10%)</title><rect x="24.1" y="579.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$154 (323 samples, 0.10%)</title><rect x="24.1" y="563.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="27.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$195/1163733914.get$Lambda (324 samples, 0.10%)</title><rect x="25.3" y="579.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="28.3" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$195 (324 samples, 0.10%)</title><rect x="25.3" y="563.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="28.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (65,828 samples, 20.66%)</title><rect x="26.5" y="611.0" width="243.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.5" y="622.0">java/util/concurrent/Completable..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (65,828 samples, 20.66%)</title><rect x="26.5" y="595.0" width="243.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="29.5" y="606.0">java/util/concurrent/Completable..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (65,413 samples, 20.53%)</title><rect x="26.5" y="579.0" width="242.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="29.5" y="590.0">java/util/concurrent/Completable..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$195/1163733914.apply (65,413 samples, 20.53%)</title><rect x="26.5" y="563.0" width="242.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="29.5" y="574.0">jdk/internal/net/http/Exchange$$..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (65,413 samples, 20.53%)</title><rect x="26.5" y="547.0" width="242.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="29.5" y="558.0">jdk/internal/net/http/Exchange.l..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (65,413 samples, 20.53%)</title><rect x="26.5" y="531.0" width="242.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="29.5" y="542.0">jdk/internal/net/http/Exchange.c..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$154/1591917242.apply (65,413 samples, 20.53%)</title><rect x="26.5" y="515.0" width="242.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="29.5" y="526.0">jdk/internal/net/http/Exchange$$..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (65,413 samples, 20.53%)</title><rect x="26.5" y="499.0" width="242.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.5" y="510.0">jdk/internal/net/http/Exchange.l..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (615 samples, 0.19%)</title><rect x="26.5" y="483.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="29.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (615 samples, 0.19%)</title><rect x="26.5" y="467.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="29.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$240/2066681415.get$Lambda (615 samples, 0.19%)</title><rect x="26.5" y="451.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$240 (615 samples, 0.19%)</title><rect x="26.5" y="435.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="29.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,738 samples, 0.55%)</title><rect x="28.8" y="483.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="31.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,738 samples, 0.55%)</title><rect x="28.8" y="467.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="31.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (820 samples, 0.26%)</title><rect x="28.8" y="451.0" width="3.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="31.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (253 samples, 0.08%)</title><rect x="31.8" y="451.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="34.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$240/2066681415.apply (253 samples, 0.08%)</title><rect x="31.8" y="435.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (253 samples, 0.08%)</title><rect x="31.8" y="419.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="34.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (253 samples, 0.08%)</title><rect x="31.8" y="403.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="34.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$153/448982412.apply (253 samples, 0.08%)</title><rect x="31.8" y="387.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (253 samples, 0.08%)</title><rect x="31.8" y="371.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="34.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (191 samples, 0.06%)</title><rect x="32.0" y="355.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="35.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (88 samples, 0.03%)</title><rect x="32.1" y="339.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (88 samples, 0.03%)</title><rect x="32.1" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="35.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (88 samples, 0.03%)</title><rect x="32.1" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="35.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (97 samples, 0.03%)</title><rect x="32.4" y="339.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="35.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (71 samples, 0.02%)</title><rect x="32.5" y="323.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="35.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (664 samples, 0.21%)</title><rect x="32.8" y="451.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (664 samples, 0.21%)</title><rect x="32.8" y="435.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="35.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (664 samples, 0.21%)</title><rect x="32.8" y="419.0" width="2.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="35.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (965 samples, 0.30%)</title><rect x="35.2" y="483.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="38.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (965 samples, 0.30%)</title><rect x="35.2" y="467.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="38.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (561 samples, 0.18%)</title><rect x="35.2" y="451.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="38.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (393 samples, 0.12%)</title><rect x="37.3" y="451.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (393 samples, 0.12%)</title><rect x="37.3" y="435.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (393 samples, 0.12%)</title><rect x="37.3" y="419.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="40.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (62,095 samples, 19.49%)</title><rect x="38.8" y="483.0" width="229.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="41.8" y="494.0">jdk/internal/net/http/Http1Exc..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (536 samples, 0.17%)</title><rect x="38.8" y="467.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (536 samples, 0.17%)</title><rect x="38.8" y="451.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="41.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$231/917434589.get$Lambda (232 samples, 0.07%)</title><rect x="38.8" y="435.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$231 (232 samples, 0.07%)</title><rect x="38.8" y="419.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="41.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$236/1940682860.get$Lambda (304 samples, 0.10%)</title><rect x="39.6" y="435.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="42.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$236 (304 samples, 0.10%)</title><rect x="39.6" y="419.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="42.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (55,192 samples, 17.32%)</title><rect x="40.8" y="467.0" width="204.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.8" y="478.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (55,192 samples, 17.32%)</title><rect x="40.8" y="451.0" width="204.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="43.8" y="462.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (584 samples, 0.18%)</title><rect x="40.8" y="435.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="43.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$231/917434589.apply (53,525 samples, 16.80%)</title><rect x="42.9" y="435.0" width="198.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.9" y="446.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (53,525 samples, 16.80%)</title><rect x="42.9" y="419.0" width="198.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.9" y="430.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (210 samples, 0.07%)</title><rect x="42.9" y="403.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (210 samples, 0.07%)</title><rect x="42.9" y="387.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$277/749205255.get$Lambda (210 samples, 0.07%)</title><rect x="42.9" y="371.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="45.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$277 (210 samples, 0.07%)</title><rect x="42.9" y="355.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="45.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (910 samples, 0.29%)</title><rect x="43.7" y="403.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (910 samples, 0.29%)</title><rect x="43.7" y="387.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="46.7" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (457 samples, 0.14%)</title><rect x="43.7" y="371.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="46.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (453 samples, 0.14%)</title><rect x="45.4" y="371.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (453 samples, 0.14%)</title><rect x="45.4" y="355.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="48.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (453 samples, 0.14%)</title><rect x="45.4" y="339.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="48.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (397 samples, 0.12%)</title><rect x="47.1" y="403.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="50.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (915 samples, 0.29%)</title><rect x="48.6" y="403.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (331 samples, 0.10%)</title><rect x="48.6" y="387.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="51.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (584 samples, 0.18%)</title><rect x="49.8" y="387.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (396 samples, 0.12%)</title><rect x="49.8" y="371.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="52.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (396 samples, 0.12%)</title><rect x="49.8" y="355.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (396 samples, 0.12%)</title><rect x="49.8" y="339.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="52.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (396 samples, 0.12%)</title><rect x="49.8" y="323.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (396 samples, 0.12%)</title><rect x="49.8" y="307.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="52.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (188 samples, 0.06%)</title><rect x="51.2" y="371.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="54.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (188 samples, 0.06%)</title><rect x="51.2" y="355.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="54.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (188 samples, 0.06%)</title><rect x="51.2" y="339.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="54.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (188 samples, 0.06%)</title><rect x="51.2" y="323.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="54.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (188 samples, 0.06%)</title><rect x="51.2" y="307.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="54.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (188 samples, 0.06%)</title><rect x="51.2" y="291.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (121 samples, 0.04%)</title><rect x="51.5" y="275.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="54.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (121 samples, 0.04%)</title><rect x="51.5" y="259.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="54.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (121 samples, 0.04%)</title><rect x="51.5" y="243.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="54.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (121 samples, 0.04%)</title><rect x="51.5" y="227.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (121 samples, 0.04%)</title><rect x="51.5" y="211.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="54.5" y="222.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (121 samples, 0.04%)</title><rect x="51.5" y="195.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="54.5" y="206.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (91 samples, 0.03%)</title><rect x="51.6" y="179.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="54.6" y="190.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (91 samples, 0.03%)</title><rect x="51.6" y="163.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="54.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (985 samples, 0.31%)</title><rect x="51.9" y="403.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="54.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (985 samples, 0.31%)</title><rect x="51.9" y="387.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (310 samples, 0.10%)</title><rect x="51.9" y="371.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (310 samples, 0.10%)</title><rect x="51.9" y="355.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="54.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (310 samples, 0.10%)</title><rect x="51.9" y="339.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="54.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (310 samples, 0.10%)</title><rect x="51.9" y="323.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="54.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (675 samples, 0.21%)</title><rect x="53.1" y="371.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="56.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (675 samples, 0.21%)</title><rect x="53.1" y="355.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="56.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (497 samples, 0.16%)</title><rect x="53.1" y="339.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="56.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (178 samples, 0.06%)</title><rect x="54.9" y="339.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (178 samples, 0.06%)</title><rect x="54.9" y="323.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="57.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (50,108 samples, 15.72%)</title><rect x="55.6" y="403.0" width="185.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="58.6" y="414.0">jdk/internal/net/http/Ht..</text>
</g>
<g>
<title>java.lang.StringBuilder (300 samples, 0.09%)</title><rect x="55.6" y="387.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="58.6" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (616 samples, 0.19%)</title><rect x="56.7" y="387.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="59.7" y="398.0"></text>
</g>
<g>
<title>byte[] (321 samples, 0.10%)</title><rect x="56.7" y="371.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="59.7" y="382.0"></text>
</g>
<g>
<title>java.lang.String (295 samples, 0.09%)</title><rect x="57.9" y="371.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="60.9" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (7,225 samples, 2.27%)</title><rect x="59.0" y="387.0" width="26.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.0" y="398.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (7,225 samples, 2.27%)</title><rect x="59.0" y="371.0" width="26.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.0" y="382.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (7,225 samples, 2.27%)</title><rect x="59.0" y="355.0" width="26.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.0" y="366.0">j..</text>
</g>
<g>
<title>byte[] (5,378 samples, 1.69%)</title><rect x="59.0" y="339.0" width="19.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="62.0" y="350.0"></text>
</g>
<g>
<title>byte[] (1,847 samples, 0.58%)</title><rect x="78.9" y="339.0" width="6.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="81.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1,022 samples, 0.32%)</title><rect x="85.7" y="387.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="88.7" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1,022 samples, 0.32%)</title><rect x="85.7" y="371.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="88.7" y="382.0"></text>
</g>
<g>
<title>byte[] (982 samples, 0.31%)</title><rect x="85.7" y="355.0" width="3.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="88.7" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4,854 samples, 1.52%)</title><rect x="89.5" y="387.0" width="18.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="92.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,854 samples, 1.52%)</title><rect x="89.5" y="371.0" width="18.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="92.5" y="382.0"></text>
</g>
<g>
<title>java.lang.String (323 samples, 0.10%)</title><rect x="89.5" y="355.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="92.5" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4,531 samples, 1.42%)</title><rect x="90.7" y="355.0" width="16.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="93.7" y="366.0"></text>
</g>
<g>
<title>byte[] (3,240 samples, 1.02%)</title><rect x="90.7" y="339.0" width="12.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="93.7" y="350.0"></text>
</g>
<g>
<title>byte[] (1,291 samples, 0.41%)</title><rect x="102.7" y="339.0" width="4.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="105.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (610 samples, 0.19%)</title><rect x="107.5" y="387.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="110.5" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (610 samples, 0.19%)</title><rect x="107.5" y="371.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.5" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (610 samples, 0.19%)</title><rect x="107.5" y="355.0" width="2.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="110.5" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (318 samples, 0.10%)</title><rect x="109.8" y="387.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="112.8" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (318 samples, 0.10%)</title><rect x="109.8" y="371.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="112.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (30,945 samples, 9.71%)</title><rect x="110.9" y="387.0" width="114.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="113.9" y="398.0">jdk/internal/n..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (323 samples, 0.10%)</title><rect x="110.9" y="371.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (323 samples, 0.10%)</title><rect x="110.9" y="355.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="113.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (323 samples, 0.10%)</title><rect x="110.9" y="339.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.9" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$287/2026177118.get$Lambda (323 samples, 0.10%)</title><rect x="110.9" y="323.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="113.9" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$287 (323 samples, 0.10%)</title><rect x="110.9" y="307.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="113.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (18,520 samples, 5.81%)</title><rect x="112.1" y="371.0" width="68.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="115.1" y="382.0">jdk/int..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (12,877 samples, 4.04%)</title><rect x="112.1" y="355.0" width="47.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.1" y="366.0">java..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (12,877 samples, 4.04%)</title><rect x="112.1" y="339.0" width="47.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="115.1" y="350.0">java..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (12,877 samples, 4.04%)</title><rect x="112.1" y="323.0" width="47.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="115.1" y="334.0">java..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (12,877 samples, 4.04%)</title><rect x="112.1" y="307.0" width="47.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="115.1" y="318.0">java..</text>
</g>
<g>
<title>byte[] (8,918 samples, 2.80%)</title><rect x="112.1" y="291.0" width="33.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="115.1" y="302.0">by..</text>
</g>
<g>
<title>byte[] (3,959 samples, 1.24%)</title><rect x="145.1" y="291.0" width="14.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="148.1" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (870 samples, 0.27%)</title><rect x="159.8" y="355.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="162.8" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (870 samples, 0.27%)</title><rect x="159.8" y="339.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="162.8" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (870 samples, 0.27%)</title><rect x="159.8" y="323.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="162.8" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (870 samples, 0.27%)</title><rect x="159.8" y="307.0" width="3.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="162.8" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (818 samples, 0.26%)</title><rect x="163.0" y="355.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="166.0" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (382 samples, 0.12%)</title><rect x="163.0" y="339.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="166.0" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (436 samples, 0.14%)</title><rect x="164.4" y="339.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="167.4" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (436 samples, 0.14%)</title><rect x="164.4" y="323.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="167.4" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$287/2026177118.test (3,955 samples, 1.24%)</title><rect x="166.1" y="355.0" width="14.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="169.1" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (3,955 samples, 1.24%)</title><rect x="166.1" y="339.0" width="14.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="169.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$81/910091170.test (3,955 samples, 1.24%)</title><rect x="166.1" y="323.0" width="14.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="169.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (3,955 samples, 1.24%)</title><rect x="166.1" y="307.0" width="14.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="169.1" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$70/2061347276.test (3,955 samples, 1.24%)</title><rect x="166.1" y="291.0" width="14.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="169.1" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (3,955 samples, 1.24%)</title><rect x="166.1" y="275.0" width="14.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="169.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/1219161283.test (3,955 samples, 1.24%)</title><rect x="166.1" y="259.0" width="14.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="169.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (3,955 samples, 1.24%)</title><rect x="166.1" y="243.0" width="14.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="169.1" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,955 samples, 1.24%)</title><rect x="166.1" y="227.0" width="14.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="169.1" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,955 samples, 1.24%)</title><rect x="166.1" y="211.0" width="14.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="169.1" y="222.0"></text>
</g>
<g>
<title>java.lang.String (1,940 samples, 0.61%)</title><rect x="166.1" y="195.0" width="7.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="169.1" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,015 samples, 0.63%)</title><rect x="173.2" y="195.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="176.2" y="206.0"></text>
</g>
<g>
<title>byte[] (2,015 samples, 0.63%)</title><rect x="173.2" y="179.0" width="7.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="176.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (12,102 samples, 3.80%)</title><rect x="180.7" y="371.0" width="44.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="183.7" y="382.0">jdk/..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (12,102 samples, 3.80%)</title><rect x="180.7" y="355.0" width="44.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="183.7" y="366.0">java..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (12,102 samples, 3.80%)</title><rect x="180.7" y="339.0" width="44.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="183.7" y="350.0">java..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (196 samples, 0.06%)</title><rect x="180.7" y="323.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="183.7" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (333 samples, 0.10%)</title><rect x="181.4" y="323.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="184.4" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (593 samples, 0.19%)</title><rect x="182.7" y="323.0" width="2.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="185.7" y="334.0"></text>
</g>
<g>
<title>java.util.TreeSet (218 samples, 0.07%)</title><rect x="184.9" y="323.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="187.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (413 samples, 0.13%)</title><rect x="185.7" y="323.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="188.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (413 samples, 0.13%)</title><rect x="185.7" y="307.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="188.7" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/2110400372.get$Lambda (413 samples, 0.13%)</title><rect x="185.7" y="291.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="188.7" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$120 (413 samples, 0.13%)</title><rect x="185.7" y="275.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="188.7" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (452 samples, 0.14%)</title><rect x="187.2" y="323.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="190.2" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (452 samples, 0.14%)</title><rect x="187.2" y="307.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="190.2" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (9,324 samples, 2.93%)</title><rect x="188.9" y="323.0" width="34.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.9" y="334.0">ja..</text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/2110400372.accept (9,324 samples, 2.93%)</title><rect x="188.9" y="307.0" width="34.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.9" y="318.0">ja..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (9,324 samples, 2.93%)</title><rect x="188.9" y="291.0" width="34.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.9" y="302.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,874 samples, 0.59%)</title><rect x="188.9" y="275.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="191.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,874 samples, 0.59%)</title><rect x="188.9" y="259.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.9" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1592266976.get$Lambda (1,874 samples, 0.59%)</title><rect x="188.9" y="243.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="191.9" y="254.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$123 (1,874 samples, 0.59%)</title><rect x="188.9" y="227.0" width="6.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="191.9" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (707 samples, 0.22%)</title><rect x="195.8" y="275.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="198.8" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1592266976.accept (707 samples, 0.22%)</title><rect x="195.8" y="259.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="198.8" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (707 samples, 0.22%)</title><rect x="195.8" y="243.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="198.8" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (707 samples, 0.22%)</title><rect x="195.8" y="227.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="198.8" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (707 samples, 0.22%)</title><rect x="195.8" y="211.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="198.8" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (707 samples, 0.22%)</title><rect x="195.8" y="195.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="198.8" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (707 samples, 0.22%)</title><rect x="195.8" y="179.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="198.8" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (707 samples, 0.22%)</title><rect x="195.8" y="163.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="198.8" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (707 samples, 0.22%)</title><rect x="195.8" y="147.0" width="2.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="198.8" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (3,781 samples, 1.19%)</title><rect x="198.4" y="275.0" width="14.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="201.4" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (3,781 samples, 1.19%)</title><rect x="198.4" y="259.0" width="14.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="201.4" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1,901 samples, 0.60%)</title><rect x="198.4" y="243.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="201.4" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,901 samples, 0.60%)</title><rect x="198.4" y="227.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="201.4" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,901 samples, 0.60%)</title><rect x="198.4" y="211.0" width="7.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="201.4" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (1,880 samples, 0.59%)</title><rect x="205.5" y="243.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="208.5" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,880 samples, 0.59%)</title><rect x="205.5" y="227.0" width="6.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="208.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2,962 samples, 0.93%)</title><rect x="212.4" y="275.0" width="11.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="215.4" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2,962 samples, 0.93%)</title><rect x="212.4" y="259.0" width="11.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="215.4" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (573 samples, 0.18%)</title><rect x="223.4" y="323.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="226.4" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (573 samples, 0.18%)</title><rect x="223.4" y="307.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="226.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (1,045 samples, 0.33%)</title><rect x="225.5" y="387.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="228.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (283 samples, 0.09%)</title><rect x="225.5" y="371.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="228.5" y="382.0"></text>
</g>
<g>
<title>byte[] (283 samples, 0.09%)</title><rect x="225.5" y="355.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="228.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (762 samples, 0.24%)</title><rect x="226.6" y="371.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="229.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (762 samples, 0.24%)</title><rect x="226.6" y="355.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="229.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1218593486.invoke (762 samples, 0.24%)</title><rect x="226.6" y="339.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="229.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (762 samples, 0.24%)</title><rect x="226.6" y="323.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="229.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (352 samples, 0.11%)</title><rect x="226.6" y="307.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="229.6" y="318.0"></text>
</g>
<g>
<title>java.lang.String (352 samples, 0.11%)</title><rect x="226.6" y="291.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="229.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (410 samples, 0.13%)</title><rect x="227.9" y="307.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="230.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (410 samples, 0.13%)</title><rect x="227.9" y="291.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="230.9" y="302.0"></text>
</g>
<g>
<title>byte[] (410 samples, 0.13%)</title><rect x="227.9" y="275.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="230.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (852 samples, 0.27%)</title><rect x="229.4" y="387.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="232.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (852 samples, 0.27%)</title><rect x="229.4" y="371.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="232.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (852 samples, 0.27%)</title><rect x="229.4" y="355.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="232.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (852 samples, 0.27%)</title><rect x="229.4" y="339.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="232.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1218593486.invoke (852 samples, 0.27%)</title><rect x="229.4" y="323.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="232.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (852 samples, 0.27%)</title><rect x="229.4" y="307.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="232.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (284 samples, 0.09%)</title><rect x="229.4" y="291.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="232.4" y="302.0"></text>
</g>
<g>
<title>java.lang.String (284 samples, 0.09%)</title><rect x="229.4" y="275.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="232.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (568 samples, 0.18%)</title><rect x="230.4" y="291.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="233.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (568 samples, 0.18%)</title><rect x="230.4" y="275.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="233.4" y="286.0"></text>
</g>
<g>
<title>byte[] (568 samples, 0.18%)</title><rect x="230.4" y="259.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="233.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2,321 samples, 0.73%)</title><rect x="232.5" y="387.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="235.5" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (664 samples, 0.21%)</title><rect x="232.5" y="371.0" width="2.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="235.5" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (590 samples, 0.19%)</title><rect x="235.0" y="371.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="238.0" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (590 samples, 0.19%)</title><rect x="235.0" y="355.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="238.0" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,067 samples, 0.33%)</title><rect x="237.2" y="371.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="240.2" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,067 samples, 0.33%)</title><rect x="237.2" y="355.0" width="3.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="240.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,082 samples, 0.34%)</title><rect x="241.1" y="435.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="244.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,082 samples, 0.34%)</title><rect x="241.1" y="419.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="244.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,082 samples, 0.34%)</title><rect x="241.1" y="403.0" width="4.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="244.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (1,081 samples, 0.34%)</title><rect x="245.1" y="467.0" width="4.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="248.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (414 samples, 0.13%)</title><rect x="249.2" y="467.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="252.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (4,845 samples, 1.52%)</title><rect x="250.8" y="467.0" width="17.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="253.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (375 samples, 0.12%)</title><rect x="250.8" y="451.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="253.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (375 samples, 0.12%)</title><rect x="250.8" y="435.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="253.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$199/111999895.get$Lambda (182 samples, 0.06%)</title><rect x="250.8" y="419.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="253.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$199 (182 samples, 0.06%)</title><rect x="250.8" y="403.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="253.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$200/1476302196.get$Lambda (193 samples, 0.06%)</title><rect x="251.4" y="419.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="254.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$200 (193 samples, 0.06%)</title><rect x="251.4" y="403.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="254.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (481 samples, 0.15%)</title><rect x="252.2" y="451.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="255.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (361 samples, 0.11%)</title><rect x="253.9" y="451.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="256.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (505 samples, 0.16%)</title><rect x="255.3" y="451.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="258.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1,429 samples, 0.45%)</title><rect x="257.1" y="451.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="260.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,429 samples, 0.45%)</title><rect x="257.1" y="435.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="260.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,429 samples, 0.45%)</title><rect x="257.1" y="419.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="260.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,429 samples, 0.45%)</title><rect x="257.1" y="403.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="260.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,429 samples, 0.45%)</title><rect x="257.1" y="387.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="260.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,429 samples, 0.45%)</title><rect x="257.1" y="371.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="260.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$183/290094249.run (1,429 samples, 0.45%)</title><rect x="257.1" y="355.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="260.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,429 samples, 0.45%)</title><rect x="257.1" y="339.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="260.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1,429 samples, 0.45%)</title><rect x="257.1" y="323.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="260.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (508 samples, 0.16%)</title><rect x="257.1" y="307.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="260.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (508 samples, 0.16%)</title><rect x="257.1" y="291.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="260.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/384609738.get$Lambda (208 samples, 0.07%)</title><rect x="257.1" y="275.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="260.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$204 (208 samples, 0.07%)</title><rect x="257.1" y="259.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="260.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$209/405487975.get$Lambda (300 samples, 0.09%)</title><rect x="257.9" y="275.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="260.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$209 (300 samples, 0.09%)</title><rect x="257.9" y="259.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="260.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (413 samples, 0.13%)</title><rect x="259.0" y="307.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="262.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (508 samples, 0.16%)</title><rect x="260.6" y="307.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="263.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (508 samples, 0.16%)</title><rect x="260.6" y="291.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="263.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (201 samples, 0.06%)</title><rect x="260.6" y="275.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="263.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (307 samples, 0.10%)</title><rect x="261.3" y="275.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="264.3" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (307 samples, 0.10%)</title><rect x="261.3" y="259.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="264.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (1,319 samples, 0.41%)</title><rect x="262.4" y="451.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="265.4" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (266 samples, 0.08%)</title><rect x="262.4" y="435.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="265.4" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (661 samples, 0.21%)</title><rect x="263.4" y="435.0" width="2.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="266.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (392 samples, 0.12%)</title><rect x="265.9" y="435.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="268.9" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (392 samples, 0.12%)</title><rect x="265.9" y="419.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="268.9" y="430.0"></text>
</g>
<g>
<title>byte[] (392 samples, 0.12%)</title><rect x="265.9" y="403.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="268.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (375 samples, 0.12%)</title><rect x="267.3" y="451.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="270.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (375 samples, 0.12%)</title><rect x="267.3" y="435.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="270.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (415 samples, 0.13%)</title><rect x="268.7" y="579.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="271.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (415 samples, 0.13%)</title><rect x="268.7" y="563.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="271.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (415 samples, 0.13%)</title><rect x="268.7" y="547.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="271.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (813 samples, 0.26%)</title><rect x="270.3" y="611.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="273.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (813 samples, 0.26%)</title><rect x="270.3" y="595.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="273.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (441 samples, 0.14%)</title><rect x="270.3" y="579.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="273.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (372 samples, 0.12%)</title><rect x="271.9" y="579.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="274.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (372 samples, 0.12%)</title><rect x="271.9" y="563.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="274.9" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (372 samples, 0.12%)</title><rect x="271.9" y="547.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="274.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (28,455 samples, 8.93%)</title><rect x="273.3" y="611.0" width="105.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="276.3" y="622.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (550 samples, 0.17%)</title><rect x="273.3" y="595.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="276.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (550 samples, 0.17%)</title><rect x="273.3" y="579.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="276.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$190/73408929.get$Lambda (345 samples, 0.11%)</title><rect x="273.3" y="563.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="276.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$190 (345 samples, 0.11%)</title><rect x="273.3" y="547.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="276.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$193/6272501.get$Lambda (205 samples, 0.06%)</title><rect x="274.5" y="563.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="277.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$193 (205 samples, 0.06%)</title><rect x="274.5" y="547.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="277.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (781 samples, 0.25%)</title><rect x="275.3" y="595.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="278.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (781 samples, 0.25%)</title><rect x="275.3" y="579.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="278.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$193/6272501.apply (396 samples, 0.12%)</title><rect x="275.3" y="563.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="278.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (396 samples, 0.12%)</title><rect x="275.3" y="547.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="278.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (396 samples, 0.12%)</title><rect x="275.3" y="531.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="278.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (396 samples, 0.12%)</title><rect x="275.3" y="515.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="278.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (385 samples, 0.12%)</title><rect x="276.8" y="563.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="279.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (385 samples, 0.12%)</title><rect x="276.8" y="547.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="279.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (385 samples, 0.12%)</title><rect x="276.8" y="531.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="279.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (412 samples, 0.13%)</title><rect x="278.2" y="595.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="281.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (412 samples, 0.13%)</title><rect x="278.2" y="579.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="281.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (412 samples, 0.13%)</title><rect x="278.2" y="563.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="281.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (412 samples, 0.13%)</title><rect x="278.2" y="547.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="281.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (412 samples, 0.13%)</title><rect x="278.2" y="531.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="281.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (26,712 samples, 8.38%)</title><rect x="279.7" y="595.0" width="98.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="282.7" y="606.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (310 samples, 0.10%)</title><rect x="279.7" y="579.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="282.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (310 samples, 0.10%)</title><rect x="279.7" y="563.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="282.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$157/923359233.get$Lambda (310 samples, 0.10%)</title><rect x="279.7" y="547.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="282.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$157 (310 samples, 0.10%)</title><rect x="279.7" y="531.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="282.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (24,806 samples, 7.78%)</title><rect x="280.9" y="579.0" width="91.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="283.9" y="590.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (24,806 samples, 7.78%)</title><rect x="280.9" y="563.0" width="91.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="283.9" y="574.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (24,423 samples, 7.66%)</title><rect x="280.9" y="547.0" width="90.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="283.9" y="558.0">java/util/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$157/923359233.apply (24,423 samples, 7.66%)</title><rect x="280.9" y="531.0" width="90.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="283.9" y="542.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (24,423 samples, 7.66%)</title><rect x="280.9" y="515.0" width="90.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="283.9" y="526.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (24,423 samples, 7.66%)</title><rect x="280.9" y="499.0" width="90.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.9" y="510.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (184 samples, 0.06%)</title><rect x="280.9" y="483.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="283.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (184 samples, 0.06%)</title><rect x="280.9" y="467.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="283.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$188/1803635543.get$Lambda (184 samples, 0.06%)</title><rect x="280.9" y="451.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="283.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$188 (184 samples, 0.06%)</title><rect x="280.9" y="435.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="283.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (9,998 samples, 3.14%)</title><rect x="281.5" y="483.0" width="37.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="284.5" y="494.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (9,998 samples, 3.14%)</title><rect x="281.5" y="467.0" width="37.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="284.5" y="478.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (9,998 samples, 3.14%)</title><rect x="281.5" y="451.0" width="37.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="284.5" y="462.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$188/1803635543.apply (9,595 samples, 3.01%)</title><rect x="281.5" y="435.0" width="35.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="284.5" y="446.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (9,595 samples, 3.01%)</title><rect x="281.5" y="419.0" width="35.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="284.5" y="430.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (9,595 samples, 3.01%)</title><rect x="281.5" y="403.0" width="35.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.5" y="414.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (9,595 samples, 3.01%)</title><rect x="281.5" y="387.0" width="35.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="284.5" y="398.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (6,174 samples, 1.94%)</title><rect x="281.5" y="371.0" width="22.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="284.5" y="382.0">j..</text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (1,736 samples, 0.54%)</title><rect x="281.5" y="355.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="284.5" y="366.0"></text>
</g>
<g>
<title>java.lang.String (335 samples, 0.11%)</title><rect x="281.5" y="339.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="284.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (667 samples, 0.21%)</title><rect x="282.8" y="339.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="285.8" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (667 samples, 0.21%)</title><rect x="282.8" y="323.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="285.8" y="334.0"></text>
</g>
<g>
<title>byte[] (667 samples, 0.21%)</title><rect x="282.8" y="307.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="285.8" y="318.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (734 samples, 0.23%)</title><rect x="285.3" y="339.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="288.3" y="350.0"></text>
</g>
<g>
<title>byte[] (734 samples, 0.23%)</title><rect x="285.3" y="323.0" width="2.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="288.3" y="334.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (254 samples, 0.08%)</title><rect x="288.0" y="355.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="291.0" y="366.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (254 samples, 0.08%)</title><rect x="288.0" y="339.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="291.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (2,973 samples, 0.93%)</title><rect x="288.9" y="355.0" width="11.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="291.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (310 samples, 0.10%)</title><rect x="288.9" y="339.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="291.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (2,179 samples, 0.68%)</title><rect x="290.1" y="339.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="293.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (2,179 samples, 0.68%)</title><rect x="290.1" y="323.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="293.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/158199555.linkToTargetMethod (1,554 samples, 0.49%)</title><rect x="290.1" y="307.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="293.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,554 samples, 0.49%)</title><rect x="290.1" y="291.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="293.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/517052730.get$Lambda (1,554 samples, 0.49%)</title><rect x="290.1" y="275.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="293.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$65 (1,554 samples, 0.49%)</title><rect x="290.1" y="259.0" width="5.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="293.1" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (625 samples, 0.20%)</title><rect x="295.8" y="307.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="298.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/517052730.run (625 samples, 0.20%)</title><rect x="295.8" y="291.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="298.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (625 samples, 0.20%)</title><rect x="295.8" y="275.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="298.8" y="286.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (625 samples, 0.20%)</title><rect x="295.8" y="259.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="298.8" y="270.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (625 samples, 0.20%)</title><rect x="295.8" y="243.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="298.8" y="254.0"></text>
</g>
<g>
<title>java.lang.Integer (625 samples, 0.20%)</title><rect x="295.8" y="227.0" width="2.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="298.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (484 samples, 0.15%)</title><rect x="298.1" y="339.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="301.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (484 samples, 0.15%)</title><rect x="298.1" y="323.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="301.1" y="334.0"></text>
</g>
<g>
<title>int[] (484 samples, 0.15%)</title><rect x="298.1" y="307.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="301.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (1,211 samples, 0.38%)</title><rect x="299.9" y="355.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="302.9" y="366.0"></text>
</g>
<g>
<title>byte[] (614 samples, 0.19%)</title><rect x="299.9" y="339.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="302.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (597 samples, 0.19%)</title><rect x="302.2" y="339.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="305.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (597 samples, 0.19%)</title><rect x="302.2" y="323.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="305.2" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (597 samples, 0.19%)</title><rect x="302.2" y="307.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="305.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3,421 samples, 1.07%)</title><rect x="304.4" y="371.0" width="12.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="307.4" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (995 samples, 0.31%)</title><rect x="304.4" y="355.0" width="3.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="307.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (924 samples, 0.29%)</title><rect x="308.1" y="355.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="311.1" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (924 samples, 0.29%)</title><rect x="308.1" y="339.0" width="3.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="311.1" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,502 samples, 0.47%)</title><rect x="311.5" y="355.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="314.5" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,502 samples, 0.47%)</title><rect x="311.5" y="339.0" width="5.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="314.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (403 samples, 0.13%)</title><rect x="317.1" y="435.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="320.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (403 samples, 0.13%)</title><rect x="317.1" y="419.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="320.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (403 samples, 0.13%)</title><rect x="317.1" y="403.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="320.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (14,241 samples, 4.47%)</title><rect x="318.6" y="483.0" width="52.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="321.6" y="494.0">jdk/i..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (1,049 samples, 0.33%)</title><rect x="318.6" y="467.0" width="3.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="321.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (12,717 samples, 3.99%)</title><rect x="322.6" y="467.0" width="47.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="325.6" y="478.0">jdk/..</text>
</g>
<g>
<title>java.lang.Object (218 samples, 0.07%)</title><rect x="322.6" y="451.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="325.6" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (406 samples, 0.13%)</title><rect x="323.4" y="451.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="326.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (364 samples, 0.11%)</title><rect x="324.9" y="451.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="327.9" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (596 samples, 0.19%)</title><rect x="326.2" y="451.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.2" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (596 samples, 0.19%)</title><rect x="326.2" y="435.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="329.2" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (596 samples, 0.19%)</title><rect x="326.2" y="419.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="329.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (282 samples, 0.09%)</title><rect x="328.5" y="451.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="331.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (282 samples, 0.09%)</title><rect x="328.5" y="435.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="331.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (892 samples, 0.28%)</title><rect x="329.5" y="451.0" width="3.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="332.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (627 samples, 0.20%)</title><rect x="332.8" y="451.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="335.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (773 samples, 0.24%)</title><rect x="335.1" y="451.0" width="2.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="338.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (763 samples, 0.24%)</title><rect x="338.0" y="451.0" width="2.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="341.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (3,753 samples, 1.18%)</title><rect x="340.8" y="451.0" width="13.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="343.8" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (298 samples, 0.09%)</title><rect x="340.8" y="435.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="343.8" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (210 samples, 0.07%)</title><rect x="341.9" y="435.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="344.9" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (331 samples, 0.10%)</title><rect x="342.7" y="435.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="345.7" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (184 samples, 0.06%)</title><rect x="343.9" y="435.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="346.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (199 samples, 0.06%)</title><rect x="344.6" y="435.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="347.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (199 samples, 0.06%)</title><rect x="344.6" y="419.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="347.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$183/290094249.get$Lambda (199 samples, 0.06%)</title><rect x="344.6" y="403.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="347.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$183 (199 samples, 0.06%)</title><rect x="344.6" y="387.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="347.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (315 samples, 0.10%)</title><rect x="345.4" y="435.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="348.4" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (315 samples, 0.10%)</title><rect x="345.4" y="419.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="348.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (301 samples, 0.09%)</title><rect x="346.5" y="435.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="349.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (405 samples, 0.13%)</title><rect x="347.6" y="435.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="350.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1,510 samples, 0.47%)</title><rect x="349.1" y="435.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="352.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (321 samples, 0.10%)</title><rect x="349.1" y="419.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="352.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (399 samples, 0.13%)</title><rect x="350.3" y="419.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="353.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (203 samples, 0.06%)</title><rect x="351.8" y="419.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="354.8" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (203 samples, 0.06%)</title><rect x="351.8" y="403.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="354.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (587 samples, 0.18%)</title><rect x="352.6" y="419.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="355.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (191 samples, 0.06%)</title><rect x="352.6" y="403.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="355.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (203 samples, 0.06%)</title><rect x="353.3" y="403.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="356.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (193 samples, 0.06%)</title><rect x="354.0" y="403.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="357.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (2,362 samples, 0.74%)</title><rect x="354.7" y="451.0" width="8.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="357.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (192 samples, 0.06%)</title><rect x="354.7" y="435.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="357.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (157 samples, 0.05%)</title><rect x="355.4" y="435.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="358.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (197 samples, 0.06%)</title><rect x="356.0" y="435.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="359.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (284 samples, 0.09%)</title><rect x="356.7" y="435.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="359.7" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (284 samples, 0.09%)</title><rect x="356.7" y="419.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="359.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1,532 samples, 0.48%)</title><rect x="357.8" y="435.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="360.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (296 samples, 0.09%)</title><rect x="357.8" y="419.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="360.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (380 samples, 0.12%)</title><rect x="358.9" y="419.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="361.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (181 samples, 0.06%)</title><rect x="360.3" y="419.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="363.3" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (181 samples, 0.06%)</title><rect x="360.3" y="403.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="363.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (675 samples, 0.21%)</title><rect x="361.0" y="419.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="364.0" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (216 samples, 0.07%)</title><rect x="361.0" y="403.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="364.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (265 samples, 0.08%)</title><rect x="361.8" y="403.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="364.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (194 samples, 0.06%)</title><rect x="362.8" y="403.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="365.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (603 samples, 0.19%)</title><rect x="363.5" y="451.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="366.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (596 samples, 0.19%)</title><rect x="363.5" y="435.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="366.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (285 samples, 0.09%)</title><rect x="363.5" y="419.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="366.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (311 samples, 0.10%)</title><rect x="364.5" y="419.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="367.5" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (311 samples, 0.10%)</title><rect x="364.5" y="403.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="367.5" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (311 samples, 0.10%)</title><rect x="364.5" y="387.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="367.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (311 samples, 0.10%)</title><rect x="364.5" y="371.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="367.5" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (311 samples, 0.10%)</title><rect x="364.5" y="355.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="367.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (1,072 samples, 0.34%)</title><rect x="365.7" y="451.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="368.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/158199555.linkToTargetMethod (288 samples, 0.09%)</title><rect x="365.7" y="435.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="368.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (288 samples, 0.09%)</title><rect x="365.7" y="419.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="368.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$160/158727963.get$Lambda (288 samples, 0.09%)</title><rect x="365.7" y="403.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="368.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$160 (288 samples, 0.09%)</title><rect x="365.7" y="387.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="368.7" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (784 samples, 0.25%)</title><rect x="366.8" y="435.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="369.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$160/158727963.run (784 samples, 0.25%)</title><rect x="366.8" y="419.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="369.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (784 samples, 0.25%)</title><rect x="366.8" y="403.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="369.8" y="414.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (180 samples, 0.06%)</title><rect x="366.8" y="387.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="369.8" y="398.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (604 samples, 0.19%)</title><rect x="367.4" y="387.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="370.4" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (302 samples, 0.09%)</title><rect x="367.4" y="371.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="370.4" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (302 samples, 0.09%)</title><rect x="368.6" y="371.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="371.6" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (302 samples, 0.09%)</title><rect x="368.6" y="355.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="371.6" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (302 samples, 0.09%)</title><rect x="368.6" y="339.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="371.6" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (302 samples, 0.09%)</title><rect x="368.6" y="323.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="371.6" y="334.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (302 samples, 0.09%)</title><rect x="368.6" y="307.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="371.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (439 samples, 0.14%)</title><rect x="369.7" y="467.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="372.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (439 samples, 0.14%)</title><rect x="369.7" y="451.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="372.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (383 samples, 0.12%)</title><rect x="371.3" y="547.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="374.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (383 samples, 0.12%)</title><rect x="371.3" y="531.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="374.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (383 samples, 0.12%)</title><rect x="371.3" y="515.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="374.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (341 samples, 0.11%)</title><rect x="372.7" y="579.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="375.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (341 samples, 0.11%)</title><rect x="372.7" y="563.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="375.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (341 samples, 0.11%)</title><rect x="372.7" y="547.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="375.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (341 samples, 0.11%)</title><rect x="372.7" y="531.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="375.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (341 samples, 0.11%)</title><rect x="372.7" y="515.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="375.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (1,255 samples, 0.39%)</title><rect x="374.0" y="579.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="377.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (827 samples, 0.26%)</title><rect x="374.0" y="563.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="377.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (827 samples, 0.26%)</title><rect x="374.0" y="547.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="377.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/131929771.linkToTargetMethod (827 samples, 0.26%)</title><rect x="374.0" y="531.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="377.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1881566527.invoke (827 samples, 0.26%)</title><rect x="374.0" y="515.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="377.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1897663661.invoke (827 samples, 0.26%)</title><rect x="374.0" y="499.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="377.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (827 samples, 0.26%)</title><rect x="374.0" y="483.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="377.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (303 samples, 0.10%)</title><rect x="374.0" y="467.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="377.0" y="478.0"></text>
</g>
<g>
<title>java.lang.String (303 samples, 0.10%)</title><rect x="374.0" y="451.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="377.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (524 samples, 0.16%)</title><rect x="375.1" y="467.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="378.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (524 samples, 0.16%)</title><rect x="375.1" y="451.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="378.1" y="462.0"></text>
</g>
<g>
<title>byte[] (524 samples, 0.16%)</title><rect x="375.1" y="435.0" width="1.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="378.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (428 samples, 0.13%)</title><rect x="377.0" y="563.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="380.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (428 samples, 0.13%)</title><rect x="377.0" y="547.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="380.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (541 samples, 0.17%)</title><rect x="378.6" y="659.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="381.6" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (541 samples, 0.17%)</title><rect x="378.6" y="643.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="381.6" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (541 samples, 0.17%)</title><rect x="378.6" y="627.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="381.6" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (541 samples, 0.17%)</title><rect x="378.6" y="611.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="381.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (2,135 samples, 0.67%)</title><rect x="380.6" y="659.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="383.6" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (1,533 samples, 0.48%)</title><rect x="380.6" y="643.0" width="5.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="383.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (602 samples, 0.19%)</title><rect x="386.3" y="643.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="389.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (602 samples, 0.19%)</title><rect x="386.3" y="627.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="389.3" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.now (316 samples, 0.10%)</title><rect x="386.3" y="611.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="389.3" y="622.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (316 samples, 0.10%)</title><rect x="386.3" y="595.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="389.3" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (316 samples, 0.10%)</title><rect x="386.3" y="579.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="389.3" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.create (316 samples, 0.10%)</title><rect x="386.3" y="563.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="389.3" y="574.0"></text>
</g>
<g>
<title>java.time.Instant (316 samples, 0.10%)</title><rect x="386.3" y="547.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="389.3" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (286 samples, 0.09%)</title><rect x="387.5" y="611.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.5" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (286 samples, 0.09%)</title><rect x="387.5" y="595.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="390.5" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (286 samples, 0.09%)</title><rect x="387.5" y="579.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.5" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (286 samples, 0.09%)</title><rect x="387.5" y="563.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="390.5" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (286 samples, 0.09%)</title><rect x="387.5" y="547.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="390.5" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (286 samples, 0.09%)</title><rect x="387.5" y="531.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="390.5" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (286 samples, 0.09%)</title><rect x="387.5" y="515.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="390.5" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.create (286 samples, 0.09%)</title><rect x="387.5" y="499.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="390.5" y="510.0"></text>
</g>
<g>
<title>java.time.Instant (286 samples, 0.09%)</title><rect x="387.5" y="483.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="390.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,586 samples, 0.81%)</title><rect x="388.6" y="755.0" width="9.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (2,586 samples, 0.81%)</title><rect x="388.6" y="739.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="391.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (2,586 samples, 0.81%)</title><rect x="388.6" y="723.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="391.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (2,586 samples, 0.81%)</title><rect x="388.6" y="707.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.6" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (2,586 samples, 0.81%)</title><rect x="388.6" y="691.0" width="9.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="391.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$291/1350458117.run (15,203 samples, 4.77%)</title><rect x="398.2" y="755.0" width="56.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="401.2" y="766.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (15,203 samples, 4.77%)</title><rect x="398.2" y="739.0" width="56.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="401.2" y="750.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (15,203 samples, 4.77%)</title><rect x="398.2" y="723.0" width="56.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="401.2" y="734.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (15,203 samples, 4.77%)</title><rect x="398.2" y="707.0" width="56.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.2" y="718.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15,203 samples, 4.77%)</title><rect x="398.2" y="691.0" width="56.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="401.2" y="702.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15,203 samples, 4.77%)</title><rect x="398.2" y="675.0" width="56.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="401.2" y="686.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (15,203 samples, 4.77%)</title><rect x="398.2" y="659.0" width="56.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="401.2" y="670.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (15,203 samples, 4.77%)</title><rect x="398.2" y="643.0" width="56.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="401.2" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (15,203 samples, 4.77%)</title><rect x="398.2" y="627.0" width="56.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="401.2" y="638.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (15,202 samples, 4.77%)</title><rect x="398.2" y="611.0" width="56.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="401.2" y="622.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (15,202 samples, 4.77%)</title><rect x="398.2" y="595.0" width="56.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="401.2" y="606.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (14,017 samples, 4.40%)</title><rect x="398.2" y="579.0" width="51.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="401.2" y="590.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,356 samples, 0.43%)</title><rect x="398.2" y="563.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="401.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,356 samples, 0.43%)</title><rect x="398.2" y="547.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="401.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$293/1718221436.get$Lambda (948 samples, 0.30%)</title><rect x="398.2" y="531.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$293 (948 samples, 0.30%)</title><rect x="398.2" y="515.0" width="3.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="401.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$300/930059355.get$Lambda (208 samples, 0.07%)</title><rect x="401.7" y="531.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="404.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$300 (208 samples, 0.07%)</title><rect x="401.7" y="515.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="404.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$301/678961063.get$Lambda (200 samples, 0.06%)</title><rect x="402.5" y="531.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="405.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$301 (200 samples, 0.06%)</title><rect x="402.5" y="515.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="405.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (12,661 samples, 3.97%)</title><rect x="403.2" y="563.0" width="46.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="406.2" y="574.0">java..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (505 samples, 0.16%)</title><rect x="403.2" y="547.0" width="1.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="406.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (12,156 samples, 3.81%)</title><rect x="405.1" y="547.0" width="45.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="408.1" y="558.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (12,156 samples, 3.81%)</title><rect x="405.1" y="531.0" width="45.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="408.1" y="542.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12,156 samples, 3.81%)</title><rect x="405.1" y="515.0" width="45.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="408.1" y="526.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,967 samples, 0.62%)</title><rect x="405.1" y="499.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="408.1" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (729 samples, 0.23%)</title><rect x="405.1" y="483.0" width="2.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="408.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$297/1191880831.apply (1,206 samples, 0.38%)</title><rect x="407.8" y="483.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="410.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (1,206 samples, 0.38%)</title><rect x="407.8" y="467.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="410.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (1,206 samples, 0.38%)</title><rect x="407.8" y="451.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="410.8" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (226 samples, 0.07%)</title><rect x="407.8" y="435.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="410.8" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (226 samples, 0.07%)</title><rect x="407.8" y="419.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="410.8" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (226 samples, 0.07%)</title><rect x="407.8" y="403.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="410.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (980 samples, 0.31%)</title><rect x="408.6" y="435.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="411.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (186 samples, 0.06%)</title><rect x="408.6" y="419.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (186 samples, 0.06%)</title><rect x="408.6" y="403.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$303/1726288971.get$Lambda (186 samples, 0.06%)</title><rect x="408.6" y="387.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="411.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$303 (186 samples, 0.06%)</title><rect x="408.6" y="371.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="411.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (794 samples, 0.25%)</title><rect x="409.3" y="419.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="412.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (794 samples, 0.25%)</title><rect x="409.3" y="403.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="412.3" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (434 samples, 0.14%)</title><rect x="409.3" y="387.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="412.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (358 samples, 0.11%)</title><rect x="410.9" y="387.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (358 samples, 0.11%)</title><rect x="410.9" y="371.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (358 samples, 0.11%)</title><rect x="410.9" y="355.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="413.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (10,189 samples, 3.20%)</title><rect x="412.4" y="499.0" width="37.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="415.4" y="510.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (10,189 samples, 3.20%)</title><rect x="412.4" y="483.0" width="37.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="415.4" y="494.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$240/2066681415.apply (10,188 samples, 3.20%)</title><rect x="412.4" y="467.0" width="37.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="415.4" y="478.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (10,188 samples, 3.20%)</title><rect x="412.4" y="451.0" width="37.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="415.4" y="462.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (10,188 samples, 3.20%)</title><rect x="412.4" y="435.0" width="37.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="415.4" y="446.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$153/448982412.apply (10,188 samples, 3.20%)</title><rect x="412.4" y="419.0" width="37.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.4" y="430.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (10,188 samples, 3.20%)</title><rect x="412.4" y="403.0" width="37.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.4" y="414.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (166 samples, 0.05%)</title><rect x="412.4" y="387.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="415.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (166 samples, 0.05%)</title><rect x="412.4" y="371.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="415.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$297/1191880831.get$Lambda (166 samples, 0.05%)</title><rect x="412.4" y="355.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="415.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$297 (166 samples, 0.05%)</title><rect x="412.4" y="339.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="415.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (749 samples, 0.24%)</title><rect x="413.0" y="387.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="416.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (749 samples, 0.24%)</title><rect x="413.0" y="371.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="416.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (423 samples, 0.13%)</title><rect x="413.0" y="355.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="416.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (326 samples, 0.10%)</title><rect x="414.6" y="355.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="417.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (326 samples, 0.10%)</title><rect x="414.6" y="339.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="417.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (326 samples, 0.10%)</title><rect x="414.6" y="323.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="417.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (908 samples, 0.28%)</title><rect x="415.8" y="387.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="418.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (176 samples, 0.06%)</title><rect x="415.8" y="371.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="418.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (176 samples, 0.06%)</title><rect x="415.8" y="355.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="418.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$298/1270726878.get$Lambda (176 samples, 0.06%)</title><rect x="415.8" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="418.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$298 (176 samples, 0.06%)</title><rect x="415.8" y="323.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="418.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (732 samples, 0.23%)</title><rect x="416.4" y="371.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="419.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (732 samples, 0.23%)</title><rect x="416.4" y="355.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="419.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (406 samples, 0.13%)</title><rect x="416.4" y="339.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="419.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (326 samples, 0.10%)</title><rect x="417.9" y="339.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="420.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (326 samples, 0.10%)</title><rect x="417.9" y="323.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="420.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (326 samples, 0.10%)</title><rect x="417.9" y="307.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="420.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (8,365 samples, 2.62%)</title><rect x="419.1" y="387.0" width="31.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.1" y="398.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (323 samples, 0.10%)</title><rect x="419.1" y="371.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="422.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (323 samples, 0.10%)</title><rect x="419.1" y="355.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="422.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$294/346231563.get$Lambda (146 samples, 0.05%)</title><rect x="419.1" y="339.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="422.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$294 (146 samples, 0.05%)</title><rect x="419.1" y="323.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="422.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$296/546636720.get$Lambda (177 samples, 0.06%)</title><rect x="419.7" y="339.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="422.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$296 (177 samples, 0.06%)</title><rect x="419.7" y="323.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="422.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (3,080 samples, 0.97%)</title><rect x="420.3" y="371.0" width="11.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="423.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (3,080 samples, 0.97%)</title><rect x="420.3" y="355.0" width="11.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="423.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (3,080 samples, 0.97%)</title><rect x="420.3" y="339.0" width="11.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="423.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$294/346231563.accept (1,061 samples, 0.33%)</title><rect x="420.3" y="323.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="423.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (1,061 samples, 0.33%)</title><rect x="420.3" y="307.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="423.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (1,061 samples, 0.33%)</title><rect x="420.3" y="291.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="423.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (288 samples, 0.09%)</title><rect x="420.3" y="275.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="423.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (288 samples, 0.09%)</title><rect x="420.3" y="259.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="423.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$295/274426563.get$Lambda (288 samples, 0.09%)</title><rect x="420.3" y="243.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="423.3" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$295 (288 samples, 0.09%)</title><rect x="420.3" y="227.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="423.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (773 samples, 0.24%)</title><rect x="421.4" y="275.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="424.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (773 samples, 0.24%)</title><rect x="421.4" y="259.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="424.4" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (419 samples, 0.13%)</title><rect x="421.4" y="243.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="424.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (354 samples, 0.11%)</title><rect x="422.9" y="243.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="425.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (354 samples, 0.11%)</title><rect x="422.9" y="227.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="425.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (354 samples, 0.11%)</title><rect x="422.9" y="211.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="425.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$296/546636720.accept (1,304 samples, 0.41%)</title><rect x="424.3" y="323.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="427.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (1,304 samples, 0.41%)</title><rect x="424.3" y="307.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="427.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (1,304 samples, 0.41%)</title><rect x="424.3" y="291.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="427.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (1,304 samples, 0.41%)</title><rect x="424.3" y="275.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="427.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (1,304 samples, 0.41%)</title><rect x="424.3" y="259.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="427.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,304 samples, 0.41%)</title><rect x="424.3" y="243.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="427.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,304 samples, 0.41%)</title><rect x="424.3" y="227.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="427.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,304 samples, 0.41%)</title><rect x="424.3" y="211.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="427.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,304 samples, 0.41%)</title><rect x="424.3" y="195.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="427.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1,304 samples, 0.41%)</title><rect x="424.3" y="179.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="427.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (507 samples, 0.16%)</title><rect x="424.3" y="163.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="427.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (507 samples, 0.16%)</title><rect x="424.3" y="147.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="427.3" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (261 samples, 0.08%)</title><rect x="424.3" y="131.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="427.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (246 samples, 0.08%)</title><rect x="425.2" y="131.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="428.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (246 samples, 0.08%)</title><rect x="425.2" y="115.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="428.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (246 samples, 0.08%)</title><rect x="425.2" y="99.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="428.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (246 samples, 0.08%)</title><rect x="425.2" y="83.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="428.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (246 samples, 0.08%)</title><rect x="425.2" y="67.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="428.2" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (246 samples, 0.08%)</title><rect x="425.2" y="51.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="428.2" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (797 samples, 0.25%)</title><rect x="426.1" y="163.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="429.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (797 samples, 0.25%)</title><rect x="426.1" y="147.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="429.1" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (272 samples, 0.09%)</title><rect x="426.1" y="131.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="429.1" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (272 samples, 0.09%)</title><rect x="426.1" y="115.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="429.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (525 samples, 0.16%)</title><rect x="427.1" y="131.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="430.1" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (275 samples, 0.09%)</title><rect x="427.1" y="115.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="430.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (250 samples, 0.08%)</title><rect x="428.2" y="115.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="431.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (250 samples, 0.08%)</title><rect x="428.2" y="99.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="431.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (250 samples, 0.08%)</title><rect x="428.2" y="83.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="431.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (250 samples, 0.08%)</title><rect x="428.2" y="67.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="431.2" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (250 samples, 0.08%)</title><rect x="428.2" y="51.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="431.2" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (250 samples, 0.08%)</title><rect x="428.2" y="35.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="431.2" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (715 samples, 0.22%)</title><rect x="429.1" y="323.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (715 samples, 0.22%)</title><rect x="429.1" y="307.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="432.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (715 samples, 0.22%)</title><rect x="429.1" y="291.0" width="2.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="432.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (4,962 samples, 1.56%)</title><rect x="431.7" y="371.0" width="18.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="434.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (470 samples, 0.15%)</title><rect x="431.7" y="355.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="434.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (377 samples, 0.12%)</title><rect x="433.5" y="355.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="436.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (377 samples, 0.12%)</title><rect x="433.5" y="339.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="436.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (377 samples, 0.12%)</title><rect x="433.5" y="323.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="436.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (4,115 samples, 1.29%)</title><rect x="434.9" y="355.0" width="15.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="437.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (243 samples, 0.08%)</title><rect x="434.9" y="339.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="437.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (2,190 samples, 0.69%)</title><rect x="435.8" y="339.0" width="8.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="438.8" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (334 samples, 0.10%)</title><rect x="435.8" y="323.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="438.8" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (334 samples, 0.10%)</title><rect x="435.8" y="307.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="438.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (435 samples, 0.14%)</title><rect x="437.0" y="323.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="440.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (1,421 samples, 0.45%)</title><rect x="438.6" y="323.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="441.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription$PullTask (156 samples, 0.05%)</title><rect x="438.6" y="307.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="441.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (144 samples, 0.05%)</title><rect x="439.2" y="307.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="442.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (357 samples, 0.11%)</title><rect x="439.7" y="307.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="442.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (250 samples, 0.08%)</title><rect x="441.1" y="307.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="444.1" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (250 samples, 0.08%)</title><rect x="441.1" y="291.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="444.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (514 samples, 0.16%)</title><rect x="442.0" y="307.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="445.0" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (163 samples, 0.05%)</title><rect x="442.0" y="291.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="445.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (168 samples, 0.05%)</title><rect x="442.6" y="291.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="445.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (183 samples, 0.06%)</title><rect x="443.2" y="291.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="446.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (1,682 samples, 0.53%)</title><rect x="443.9" y="339.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="446.9" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (287 samples, 0.09%)</title><rect x="443.9" y="323.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="446.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (787 samples, 0.25%)</title><rect x="444.9" y="323.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="447.9" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (526 samples, 0.17%)</title><rect x="444.9" y="307.0" width="2.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="447.9" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (261 samples, 0.08%)</title><rect x="446.9" y="307.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="449.9" y="318.0"></text>
</g>
<g>
<title>byte[] (261 samples, 0.08%)</title><rect x="446.9" y="291.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="449.9" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (608 samples, 0.19%)</title><rect x="447.9" y="323.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="450.9" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (608 samples, 0.19%)</title><rect x="447.9" y="307.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="450.9" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (608 samples, 0.19%)</title><rect x="447.9" y="291.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="450.9" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (608 samples, 0.19%)</title><rect x="447.9" y="275.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="450.9" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (608 samples, 0.19%)</title><rect x="447.9" y="259.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="450.9" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (608 samples, 0.19%)</title><rect x="447.9" y="243.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="450.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,185 samples, 0.37%)</title><rect x="450.1" y="579.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="453.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,185 samples, 0.37%)</title><rect x="450.1" y="563.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1,185 samples, 0.37%)</title><rect x="450.1" y="547.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="453.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1,185 samples, 0.37%)</title><rect x="450.1" y="531.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="453.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1,185 samples, 0.37%)</title><rect x="450.1" y="515.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="453.1" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1,185 samples, 0.37%)</title><rect x="450.1" y="499.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="453.1" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (513 samples, 0.16%)</title><rect x="450.1" y="483.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="453.1" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (513 samples, 0.16%)</title><rect x="450.1" y="467.0" width="1.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="453.1" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (672 samples, 0.21%)</title><rect x="452.0" y="483.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="455.0" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (672 samples, 0.21%)</title><rect x="452.0" y="467.0" width="2.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="455.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (45,265 samples, 14.20%)</title><rect x="454.5" y="755.0" width="167.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="457.5" y="766.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (45,265 samples, 14.20%)</title><rect x="454.5" y="739.0" width="167.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="457.5" y="750.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (38,878 samples, 12.20%)</title><rect x="454.5" y="723.0" width="144.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="457.5" y="734.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$183/290094249.run (38,878 samples, 12.20%)</title><rect x="454.5" y="707.0" width="144.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="457.5" y="718.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (38,878 samples, 12.20%)</title><rect x="454.5" y="691.0" width="144.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="457.5" y="702.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1,047 samples, 0.33%)</title><rect x="454.7" y="675.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="457.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (1,047 samples, 0.33%)</title><rect x="454.7" y="659.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="457.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1,047 samples, 0.33%)</title><rect x="454.7" y="643.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1,047 samples, 0.33%)</title><rect x="454.7" y="627.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="457.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1524960486.linkToTargetMethod (456 samples, 0.14%)</title><rect x="454.7" y="611.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="457.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1990160809.invoke (456 samples, 0.14%)</title><rect x="454.7" y="595.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="457.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (456 samples, 0.14%)</title><rect x="454.7" y="579.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="457.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (456 samples, 0.14%)</title><rect x="454.7" y="563.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="457.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (456 samples, 0.14%)</title><rect x="454.7" y="547.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="457.7" y="558.0"></text>
</g>
<g>
<title>byte[] (456 samples, 0.14%)</title><rect x="454.7" y="531.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="457.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (591 samples, 0.19%)</title><rect x="456.4" y="611.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="459.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (591 samples, 0.19%)</title><rect x="456.4" y="595.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="459.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (591 samples, 0.19%)</title><rect x="456.4" y="579.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="459.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$285/131615096.get$Lambda (591 samples, 0.19%)</title><rect x="456.4" y="563.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="459.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$285 (591 samples, 0.19%)</title><rect x="456.4" y="547.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="459.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (37,772 samples, 11.85%)</title><rect x="458.6" y="675.0" width="139.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="461.6" y="686.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (37,772 samples, 11.85%)</title><rect x="458.6" y="659.0" width="139.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.6" y="670.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (37,772 samples, 11.85%)</title><rect x="458.6" y="643.0" width="139.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="461.6" y="654.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (37,772 samples, 11.85%)</title><rect x="458.6" y="627.0" width="139.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.6" y="638.0">jdk/internal/net/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (17,984 samples, 5.64%)</title><rect x="458.6" y="611.0" width="66.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="461.6" y="622.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (17,984 samples, 5.64%)</title><rect x="458.6" y="595.0" width="66.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.6" y="606.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (17,984 samples, 5.64%)</title><rect x="458.6" y="579.0" width="66.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="461.6" y="590.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (17,984 samples, 5.64%)</title><rect x="458.6" y="563.0" width="66.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.6" y="574.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (17,984 samples, 5.64%)</title><rect x="458.6" y="547.0" width="66.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.6" y="558.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (17,984 samples, 5.64%)</title><rect x="458.6" y="531.0" width="66.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.6" y="542.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (17,984 samples, 5.64%)</title><rect x="458.6" y="515.0" width="66.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="461.6" y="526.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (17,476 samples, 5.48%)</title><rect x="458.6" y="499.0" width="64.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="461.6" y="510.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (17,476 samples, 5.48%)</title><rect x="458.6" y="483.0" width="64.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.6" y="494.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (17,110 samples, 5.37%)</title><rect x="458.6" y="467.0" width="63.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="461.6" y="478.0">java/ut..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (406 samples, 0.13%)</title><rect x="458.6" y="451.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="461.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$298/1270726878.apply (347 samples, 0.11%)</title><rect x="460.1" y="451.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="463.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (347 samples, 0.11%)</title><rect x="460.1" y="435.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="463.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (347 samples, 0.11%)</title><rect x="460.1" y="419.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="463.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (347 samples, 0.11%)</title><rect x="460.1" y="403.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="463.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (347 samples, 0.11%)</title><rect x="460.1" y="387.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="463.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$141/422005947.apply (15,701 samples, 4.93%)</title><rect x="461.4" y="451.0" width="58.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="464.4" y="462.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (15,701 samples, 4.93%)</title><rect x="461.4" y="435.0" width="58.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="464.4" y="446.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (280 samples, 0.09%)</title><rect x="461.4" y="419.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="464.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (280 samples, 0.09%)</title><rect x="461.4" y="403.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="464.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$327/837206861.get$Lambda (280 samples, 0.09%)</title><rect x="461.4" y="387.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="464.4" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$327 (280 samples, 0.09%)</title><rect x="461.4" y="371.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="464.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (776 samples, 0.24%)</title><rect x="462.4" y="419.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="465.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (776 samples, 0.24%)</title><rect x="462.4" y="403.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="465.4" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (429 samples, 0.13%)</title><rect x="462.4" y="387.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="465.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (347 samples, 0.11%)</title><rect x="464.0" y="387.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="467.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (347 samples, 0.11%)</title><rect x="464.0" y="371.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="467.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (347 samples, 0.11%)</title><rect x="464.0" y="355.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="467.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (14,645 samples, 4.60%)</title><rect x="465.3" y="419.0" width="54.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.3" y="430.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (185 samples, 0.06%)</title><rect x="465.3" y="403.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="468.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (185 samples, 0.06%)</title><rect x="465.3" y="387.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="468.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$326/924321155.get$Lambda (185 samples, 0.06%)</title><rect x="465.3" y="371.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="468.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$326 (185 samples, 0.06%)</title><rect x="465.3" y="355.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="468.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (783 samples, 0.25%)</title><rect x="466.0" y="403.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="469.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (783 samples, 0.25%)</title><rect x="466.0" y="387.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="469.0" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (434 samples, 0.14%)</title><rect x="466.0" y="371.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="469.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (349 samples, 0.11%)</title><rect x="467.6" y="371.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (349 samples, 0.11%)</title><rect x="467.6" y="355.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="470.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (349 samples, 0.11%)</title><rect x="467.6" y="339.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="470.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (13,677 samples, 4.29%)</title><rect x="468.9" y="403.0" width="50.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="471.9" y="414.0">jdk/i..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$126/407885674.apply (965 samples, 0.30%)</title><rect x="468.9" y="387.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="471.9" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (965 samples, 0.30%)</title><rect x="468.9" y="371.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="471.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (965 samples, 0.30%)</title><rect x="468.9" y="355.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="471.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (330 samples, 0.10%)</title><rect x="468.9" y="339.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="471.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (635 samples, 0.20%)</title><rect x="470.1" y="339.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="473.1" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (270 samples, 0.08%)</title><rect x="470.1" y="323.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="473.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (365 samples, 0.11%)</title><rect x="471.1" y="323.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="474.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseInfoImpl (286 samples, 0.09%)</title><rect x="472.5" y="387.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="475.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (12,426 samples, 3.90%)</title><rect x="473.5" y="387.0" width="46.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="476.5" y="398.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (360 samples, 0.11%)</title><rect x="473.5" y="371.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (360 samples, 0.11%)</title><rect x="473.5" y="355.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$324/1017895259.get$Lambda (169 samples, 0.05%)</title><rect x="473.5" y="339.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="476.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$324 (169 samples, 0.05%)</title><rect x="473.5" y="323.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="476.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$325/1556724864.get$Lambda (191 samples, 0.06%)</title><rect x="474.1" y="339.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="477.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$325 (191 samples, 0.06%)</title><rect x="474.1" y="323.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="477.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1103159731.linkToTargetMethod (436 samples, 0.14%)</title><rect x="474.8" y="371.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="477.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1857965983.invokeStatic (436 samples, 0.14%)</title><rect x="474.8" y="355.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="477.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$315/806523735.get$Lambda (436 samples, 0.14%)</title><rect x="474.8" y="339.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="477.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$315 (436 samples, 0.14%)</title><rect x="474.8" y="323.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="477.8" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (2,505 samples, 0.79%)</title><rect x="476.5" y="371.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.5" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (976 samples, 0.31%)</title><rect x="476.5" y="355.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="479.5" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (345 samples, 0.11%)</title><rect x="476.5" y="339.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="479.5" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (345 samples, 0.11%)</title><rect x="476.5" y="323.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="479.5" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (631 samples, 0.20%)</title><rect x="477.7" y="339.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="480.7" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (631 samples, 0.20%)</title><rect x="477.7" y="323.0" width="2.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="480.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (806 samples, 0.25%)</title><rect x="480.1" y="355.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="483.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (806 samples, 0.25%)</title><rect x="480.1" y="339.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="483.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (806 samples, 0.25%)</title><rect x="480.1" y="323.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="483.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (256 samples, 0.08%)</title><rect x="480.1" y="307.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="483.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (256 samples, 0.08%)</title><rect x="480.1" y="291.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="483.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (256 samples, 0.08%)</title><rect x="480.1" y="275.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="483.1" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (256 samples, 0.08%)</title><rect x="480.1" y="259.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="483.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$312/1315271981.get (275 samples, 0.09%)</title><rect x="481.0" y="307.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="484.0" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (275 samples, 0.09%)</title><rect x="481.0" y="291.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="484.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (275 samples, 0.09%)</title><rect x="482.0" y="307.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="485.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (275 samples, 0.09%)</title><rect x="482.0" y="291.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="485.0" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (275 samples, 0.09%)</title><rect x="482.0" y="275.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="485.0" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (275 samples, 0.09%)</title><rect x="482.0" y="259.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="485.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (723 samples, 0.23%)</title><rect x="483.1" y="355.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="486.1" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (723 samples, 0.23%)</title><rect x="483.1" y="339.0" width="2.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="486.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,564 samples, 0.49%)</title><rect x="485.7" y="371.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="488.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (769 samples, 0.24%)</title><rect x="485.7" y="355.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="488.7" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (404 samples, 0.13%)</title><rect x="485.7" y="339.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="488.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (365 samples, 0.11%)</title><rect x="487.2" y="339.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="490.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (365 samples, 0.11%)</title><rect x="487.2" y="323.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="490.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (365 samples, 0.11%)</title><rect x="487.2" y="307.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="490.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (795 samples, 0.25%)</title><rect x="488.6" y="355.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="491.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (795 samples, 0.25%)</title><rect x="488.6" y="339.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="491.6" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (436 samples, 0.14%)</title><rect x="488.6" y="323.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="491.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (359 samples, 0.11%)</title><rect x="490.2" y="323.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="493.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (359 samples, 0.11%)</title><rect x="490.2" y="307.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="493.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (359 samples, 0.11%)</title><rect x="490.2" y="291.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="493.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (252 samples, 0.08%)</title><rect x="491.5" y="371.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="494.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (329 samples, 0.10%)</title><rect x="492.5" y="371.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="495.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (345 samples, 0.11%)</title><rect x="493.7" y="371.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="496.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (198 samples, 0.06%)</title><rect x="495.0" y="371.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="498.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (198 samples, 0.06%)</title><rect x="495.0" y="355.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="498.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6,437 samples, 2.02%)</title><rect x="495.7" y="371.0" width="23.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="498.7" y="382.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$315/806523735.run (6,437 samples, 2.02%)</title><rect x="495.7" y="355.0" width="23.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="498.7" y="366.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (6,437 samples, 2.02%)</title><rect x="495.7" y="339.0" width="23.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="498.7" y="350.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (803 samples, 0.25%)</title><rect x="495.7" y="323.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="498.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (803 samples, 0.25%)</title><rect x="495.7" y="307.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="498.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$318/909570881.get$Lambda (166 samples, 0.05%)</title><rect x="495.7" y="291.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="498.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$318 (166 samples, 0.05%)</title><rect x="495.7" y="275.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="498.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$320/2039870922.get$Lambda (259 samples, 0.08%)</title><rect x="496.3" y="291.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="499.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$320 (259 samples, 0.08%)</title><rect x="496.3" y="275.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="499.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$322/665793741.get$Lambda (378 samples, 0.12%)</title><rect x="497.3" y="291.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="500.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$322 (378 samples, 0.12%)</title><rect x="497.3" y="275.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="500.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (783 samples, 0.25%)</title><rect x="498.7" y="323.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="501.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (783 samples, 0.25%)</title><rect x="498.7" y="307.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="501.7" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (420 samples, 0.13%)</title><rect x="498.7" y="291.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="501.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (363 samples, 0.11%)</title><rect x="500.2" y="291.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="503.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (363 samples, 0.11%)</title><rect x="500.2" y="275.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="503.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (363 samples, 0.11%)</title><rect x="500.2" y="259.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="503.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (447 samples, 0.14%)</title><rect x="501.6" y="323.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="504.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (336 samples, 0.11%)</title><rect x="503.2" y="323.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="506.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (336 samples, 0.11%)</title><rect x="503.2" y="307.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="506.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (1,073 samples, 0.34%)</title><rect x="504.5" y="323.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="507.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (1,073 samples, 0.34%)</title><rect x="504.5" y="307.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="507.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (283 samples, 0.09%)</title><rect x="504.5" y="291.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="507.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (283 samples, 0.09%)</title><rect x="504.5" y="275.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="507.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$323/1485242558.get$Lambda (283 samples, 0.09%)</title><rect x="504.5" y="259.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="507.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$323 (283 samples, 0.09%)</title><rect x="504.5" y="243.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="507.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (790 samples, 0.25%)</title><rect x="505.5" y="291.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="508.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (790 samples, 0.25%)</title><rect x="505.5" y="275.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="508.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (790 samples, 0.25%)</title><rect x="505.5" y="259.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="508.5" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (458 samples, 0.14%)</title><rect x="505.5" y="243.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="508.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (332 samples, 0.10%)</title><rect x="507.2" y="243.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="510.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (332 samples, 0.10%)</title><rect x="507.2" y="227.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="510.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (332 samples, 0.10%)</title><rect x="507.2" y="211.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="510.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1,051 samples, 0.33%)</title><rect x="508.4" y="323.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="511.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,050 samples, 0.33%)</title><rect x="508.4" y="307.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="511.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/940553268.invoke (1,050 samples, 0.33%)</title><rect x="508.4" y="291.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="511.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,050 samples, 0.33%)</title><rect x="508.4" y="275.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="511.4" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (252 samples, 0.08%)</title><rect x="508.4" y="259.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="511.4" y="270.0"></text>
</g>
<g>
<title>java.lang.String (252 samples, 0.08%)</title><rect x="508.4" y="243.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="511.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (798 samples, 0.25%)</title><rect x="509.4" y="259.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="512.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (798 samples, 0.25%)</title><rect x="509.4" y="243.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="512.4" y="254.0"></text>
</g>
<g>
<title>byte[] (791 samples, 0.25%)</title><rect x="509.4" y="227.0" width="2.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="512.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (1,944 samples, 0.61%)</title><rect x="512.3" y="323.0" width="7.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="515.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (613 samples, 0.19%)</title><rect x="512.3" y="307.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="515.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (1,331 samples, 0.42%)</title><rect x="514.6" y="307.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="517.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,331 samples, 0.42%)</title><rect x="514.6" y="291.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="517.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/940553268.invoke (1,331 samples, 0.42%)</title><rect x="514.6" y="275.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="517.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,331 samples, 0.42%)</title><rect x="514.6" y="259.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="517.6" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (269 samples, 0.08%)</title><rect x="514.6" y="243.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="517.6" y="254.0"></text>
</g>
<g>
<title>java.lang.String (269 samples, 0.08%)</title><rect x="514.6" y="227.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="517.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,062 samples, 0.33%)</title><rect x="515.6" y="243.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="518.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,062 samples, 0.33%)</title><rect x="515.6" y="227.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="518.6" y="238.0"></text>
</g>
<g>
<title>byte[] (1,051 samples, 0.33%)</title><rect x="515.6" y="211.0" width="3.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="518.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$220/775820891.apply (656 samples, 0.21%)</title><rect x="519.5" y="451.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="522.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (656 samples, 0.21%)</title><rect x="519.5" y="435.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (323 samples, 0.10%)</title><rect x="519.5" y="419.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="522.5" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (323 samples, 0.10%)</title><rect x="519.5" y="403.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="522.5" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (323 samples, 0.10%)</title><rect x="519.5" y="387.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="522.5" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (323 samples, 0.10%)</title><rect x="519.5" y="371.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="522.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (333 samples, 0.10%)</title><rect x="520.7" y="419.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="523.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (333 samples, 0.10%)</title><rect x="520.7" y="403.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="523.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (366 samples, 0.11%)</title><rect x="522.0" y="467.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="525.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (366 samples, 0.11%)</title><rect x="522.0" y="451.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="525.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$225/975822862.apply (366 samples, 0.11%)</title><rect x="522.0" y="435.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="525.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (366 samples, 0.11%)</title><rect x="522.0" y="419.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="525.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (366 samples, 0.11%)</title><rect x="522.0" y="403.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="525.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (366 samples, 0.11%)</title><rect x="522.0" y="387.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="525.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$303/1726288971.apply (508 samples, 0.16%)</title><rect x="523.3" y="499.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="526.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (508 samples, 0.16%)</title><rect x="523.3" y="483.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="526.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (508 samples, 0.16%)</title><rect x="523.3" y="467.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="526.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (19,788 samples, 6.21%)</title><rect x="525.2" y="611.0" width="73.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="528.2" y="622.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (1,177 samples, 0.37%)</title><rect x="525.2" y="595.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="528.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1,177 samples, 0.37%)</title><rect x="525.2" y="579.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="528.2" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1,177 samples, 0.37%)</title><rect x="525.2" y="563.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="528.2" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1,177 samples, 0.37%)</title><rect x="525.2" y="547.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="528.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,177 samples, 0.37%)</title><rect x="525.2" y="531.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="528.2" y="542.0"></text>
</g>
<g>
<title>byte[] (1,159 samples, 0.36%)</title><rect x="525.2" y="515.0" width="4.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="528.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (677 samples, 0.21%)</title><rect x="529.6" y="595.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="532.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (677 samples, 0.21%)</title><rect x="529.6" y="579.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="532.6" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (677 samples, 0.21%)</title><rect x="529.6" y="563.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="532.6" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (677 samples, 0.21%)</title><rect x="529.6" y="547.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="532.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (677 samples, 0.21%)</title><rect x="529.6" y="531.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="532.6" y="542.0"></text>
</g>
<g>
<title>byte[] (674 samples, 0.21%)</title><rect x="529.6" y="515.0" width="2.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="532.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (1,655 samples, 0.52%)</title><rect x="532.1" y="595.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="535.1" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (317 samples, 0.10%)</title><rect x="532.1" y="579.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="535.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (277 samples, 0.09%)</title><rect x="533.2" y="579.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="536.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (277 samples, 0.09%)</title><rect x="533.2" y="563.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="536.2" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (277 samples, 0.09%)</title><rect x="533.2" y="547.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="536.2" y="558.0"></text>
</g>
<g>
<title>byte[] (277 samples, 0.09%)</title><rect x="533.2" y="531.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="536.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (342 samples, 0.11%)</title><rect x="534.3" y="579.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="537.3" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (342 samples, 0.11%)</title><rect x="534.3" y="563.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="537.3" y="574.0"></text>
</g>
<g>
<title>byte[] (342 samples, 0.11%)</title><rect x="534.3" y="547.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="537.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (719 samples, 0.23%)</title><rect x="535.5" y="579.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="538.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (719 samples, 0.23%)</title><rect x="535.5" y="563.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="538.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (269 samples, 0.08%)</title><rect x="535.5" y="547.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="538.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (450 samples, 0.14%)</title><rect x="536.5" y="547.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="539.5" y="558.0"></text>
</g>
<g>
<title>byte[] (450 samples, 0.14%)</title><rect x="536.5" y="531.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="539.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (5,514 samples, 1.73%)</title><rect x="538.2" y="595.0" width="20.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="541.2" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (5,514 samples, 1.73%)</title><rect x="538.2" y="579.0" width="20.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="541.2" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (5,514 samples, 1.73%)</title><rect x="538.2" y="563.0" width="20.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="541.2" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (169 samples, 0.05%)</title><rect x="538.2" y="547.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="541.2" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (308 samples, 0.10%)</title><rect x="538.8" y="547.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="541.8" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (545 samples, 0.17%)</title><rect x="540.0" y="547.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="543.0" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (213 samples, 0.07%)</title><rect x="542.0" y="547.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="545.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (371 samples, 0.12%)</title><rect x="542.8" y="547.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="545.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (371 samples, 0.12%)</title><rect x="542.8" y="531.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="545.8" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/2110400372.get$Lambda (371 samples, 0.12%)</title><rect x="542.8" y="515.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="545.8" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$120 (371 samples, 0.12%)</title><rect x="542.8" y="499.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="545.8" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (345 samples, 0.11%)</title><rect x="544.1" y="547.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="547.1" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (345 samples, 0.11%)</title><rect x="544.1" y="531.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="547.1" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (3,063 samples, 0.96%)</title><rect x="545.4" y="547.0" width="11.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="548.4" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/2110400372.accept (3,063 samples, 0.96%)</title><rect x="545.4" y="531.0" width="11.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="548.4" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3,063 samples, 0.96%)</title><rect x="545.4" y="515.0" width="11.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="548.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (534 samples, 0.17%)</title><rect x="545.4" y="499.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="548.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (534 samples, 0.17%)</title><rect x="545.4" y="483.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="548.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1592266976.get$Lambda (534 samples, 0.17%)</title><rect x="545.4" y="467.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="548.4" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$123 (534 samples, 0.17%)</title><rect x="545.4" y="451.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="548.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (607 samples, 0.19%)</title><rect x="547.4" y="499.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="550.4" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1592266976.accept (607 samples, 0.19%)</title><rect x="547.4" y="483.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="550.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (607 samples, 0.19%)</title><rect x="547.4" y="467.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="550.4" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (607 samples, 0.19%)</title><rect x="547.4" y="451.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="550.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (607 samples, 0.19%)</title><rect x="547.4" y="435.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="550.4" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (607 samples, 0.19%)</title><rect x="547.4" y="419.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="550.4" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (607 samples, 0.19%)</title><rect x="547.4" y="403.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="550.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (607 samples, 0.19%)</title><rect x="547.4" y="387.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="550.4" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (606 samples, 0.19%)</title><rect x="547.4" y="371.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="550.4" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1,017 samples, 0.32%)</title><rect x="549.6" y="499.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="552.6" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1,017 samples, 0.32%)</title><rect x="549.6" y="483.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="552.6" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (513 samples, 0.16%)</title><rect x="549.6" y="467.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="552.6" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (513 samples, 0.16%)</title><rect x="549.6" y="451.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="552.6" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (513 samples, 0.16%)</title><rect x="549.6" y="435.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="552.6" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (504 samples, 0.16%)</title><rect x="551.5" y="467.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="554.5" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (504 samples, 0.16%)</title><rect x="551.5" y="451.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="554.5" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (905 samples, 0.28%)</title><rect x="553.4" y="499.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.4" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (905 samples, 0.28%)</title><rect x="553.4" y="483.0" width="3.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="556.4" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (500 samples, 0.16%)</title><rect x="556.8" y="547.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="559.8" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (500 samples, 0.16%)</title><rect x="556.8" y="531.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="559.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (10,765 samples, 3.38%)</title><rect x="558.6" y="595.0" width="39.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="561.6" y="606.0">jdk..</text>
</g>
<g>
<title>java.lang.StringBuilder (530 samples, 0.17%)</title><rect x="558.6" y="579.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="561.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (678 samples, 0.21%)</title><rect x="560.6" y="579.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="563.6" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (678 samples, 0.21%)</title><rect x="560.6" y="563.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="563.6" y="574.0"></text>
</g>
<g>
<title>byte[] (678 samples, 0.21%)</title><rect x="560.6" y="547.0" width="2.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="563.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,488 samples, 0.47%)</title><rect x="563.1" y="579.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="566.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,488 samples, 0.47%)</title><rect x="563.1" y="563.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="566.1" y="574.0"></text>
</g>
<g>
<title>java.lang.String (562 samples, 0.18%)</title><rect x="563.1" y="547.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="566.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (926 samples, 0.29%)</title><rect x="565.2" y="547.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="568.2" y="558.0"></text>
</g>
<g>
<title>byte[] (926 samples, 0.29%)</title><rect x="565.2" y="531.0" width="3.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="568.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (8,069 samples, 2.53%)</title><rect x="568.6" y="579.0" width="29.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="571.6" y="590.0">jd..</text>
</g>
<g>
<title>java/lang/String.substring (2,415 samples, 0.76%)</title><rect x="568.6" y="563.0" width="8.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="571.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,415 samples, 0.76%)</title><rect x="568.6" y="547.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="571.6" y="558.0"></text>
</g>
<g>
<title>java.lang.String (1,053 samples, 0.33%)</title><rect x="568.6" y="531.0" width="3.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="571.6" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,362 samples, 0.43%)</title><rect x="572.5" y="531.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="575.5" y="542.0"></text>
</g>
<g>
<title>byte[] (1,362 samples, 0.43%)</title><rect x="572.5" y="515.0" width="5.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="575.5" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1,202 samples, 0.38%)</title><rect x="577.5" y="563.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="580.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1,202 samples, 0.38%)</title><rect x="577.5" y="547.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="580.5" y="558.0"></text>
</g>
<g>
<title>byte[] (702 samples, 0.22%)</title><rect x="577.5" y="531.0" width="2.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="580.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String (500 samples, 0.16%)</title><rect x="580.1" y="531.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="583.1" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (1,151 samples, 0.36%)</title><rect x="582.0" y="563.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="585.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1,151 samples, 0.36%)</title><rect x="582.0" y="547.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="585.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,151 samples, 0.36%)</title><rect x="582.0" y="531.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="585.0" y="542.0"></text>
</g>
<g>
<title>java.lang.String (541 samples, 0.17%)</title><rect x="582.0" y="515.0" width="2.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="585.0" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (610 samples, 0.19%)</title><rect x="584.0" y="515.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="587.0" y="526.0"></text>
</g>
<g>
<title>byte[] (610 samples, 0.19%)</title><rect x="584.0" y="499.0" width="2.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="587.0" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,199 samples, 0.38%)</title><rect x="586.2" y="563.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="589.2" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,199 samples, 0.38%)</title><rect x="586.2" y="547.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="589.2" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,199 samples, 0.38%)</title><rect x="586.2" y="531.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="589.2" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,199 samples, 0.38%)</title><rect x="586.2" y="515.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="589.2" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,199 samples, 0.38%)</title><rect x="586.2" y="499.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="589.2" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,190 samples, 0.37%)</title><rect x="586.2" y="483.0" width="4.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="589.2" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2,102 samples, 0.66%)</title><rect x="590.7" y="563.0" width="7.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="593.7" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (714 samples, 0.22%)</title><rect x="590.7" y="547.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="593.7" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (714 samples, 0.22%)</title><rect x="590.7" y="531.0" width="2.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="593.7" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (878 samples, 0.28%)</title><rect x="593.3" y="547.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="596.3" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (862 samples, 0.27%)</title><rect x="593.3" y="531.0" width="3.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="596.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$307/1938387015.apply (510 samples, 0.16%)</title><rect x="596.6" y="547.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (510 samples, 0.16%)</title><rect x="596.6" y="531.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="599.6" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (510 samples, 0.16%)</title><rect x="596.6" y="515.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="599.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (6,387 samples, 2.00%)</title><rect x="598.5" y="723.0" width="23.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="601.5" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6,387 samples, 2.00%)</title><rect x="598.5" y="707.0" width="23.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.5" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6,387 samples, 2.00%)</title><rect x="598.5" y="691.0" width="23.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="601.5" y="702.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$183/290094249.run (6,387 samples, 2.00%)</title><rect x="598.5" y="675.0" width="23.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="601.5" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (6,387 samples, 2.00%)</title><rect x="598.5" y="659.0" width="23.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="601.5" y="670.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (6,347 samples, 1.99%)</title><rect x="598.5" y="643.0" width="23.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="601.5" y="654.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (421 samples, 0.13%)</title><rect x="598.5" y="627.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="601.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (421 samples, 0.13%)</title><rect x="598.5" y="611.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="601.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/384609738.get$Lambda (147 samples, 0.05%)</title><rect x="598.5" y="595.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="601.5" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$204 (147 samples, 0.05%)</title><rect x="598.5" y="579.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="601.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$209/405487975.get$Lambda (274 samples, 0.09%)</title><rect x="599.0" y="595.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="602.0" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$209 (274 samples, 0.09%)</title><rect x="599.0" y="579.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="602.0" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (350 samples, 0.11%)</title><rect x="600.0" y="627.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="603.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (456 samples, 0.14%)</title><rect x="601.3" y="627.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="604.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (456 samples, 0.14%)</title><rect x="601.3" y="611.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="604.3" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (178 samples, 0.06%)</title><rect x="601.3" y="595.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="604.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (278 samples, 0.09%)</title><rect x="602.0" y="595.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="605.0" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (278 samples, 0.09%)</title><rect x="602.0" y="579.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="605.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (5,120 samples, 1.61%)</title><rect x="603.0" y="627.0" width="19.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (5,120 samples, 1.61%)</title><rect x="603.0" y="611.0" width="19.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$318/909570881.run (4,290 samples, 1.35%)</title><rect x="603.0" y="595.0" width="15.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="606.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (4,290 samples, 1.35%)</title><rect x="603.0" y="579.0" width="15.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="606.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (4,290 samples, 1.35%)</title><rect x="603.0" y="563.0" width="15.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="606.0" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1,387 samples, 0.44%)</title><rect x="603.0" y="547.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="606.0" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (959 samples, 0.30%)</title><rect x="603.0" y="531.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="606.0" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (355 samples, 0.11%)</title><rect x="603.0" y="515.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="606.0" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (355 samples, 0.11%)</title><rect x="603.0" y="499.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="606.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (604 samples, 0.19%)</title><rect x="604.3" y="515.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="607.3" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (597 samples, 0.19%)</title><rect x="604.3" y="499.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="607.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (428 samples, 0.13%)</title><rect x="606.6" y="531.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="609.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (428 samples, 0.13%)</title><rect x="606.6" y="515.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="609.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (428 samples, 0.13%)</title><rect x="606.6" y="499.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="609.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$57/1095293768.get (276 samples, 0.09%)</title><rect x="606.6" y="483.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="609.6" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (276 samples, 0.09%)</title><rect x="606.6" y="467.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="609.6" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (152 samples, 0.05%)</title><rect x="607.6" y="483.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="610.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (152 samples, 0.05%)</title><rect x="607.6" y="467.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="610.6" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.of (152 samples, 0.05%)</title><rect x="607.6" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="610.6" y="462.0"></text>
</g>
<g>
<title>java.util.Optional (152 samples, 0.05%)</title><rect x="607.6" y="435.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="610.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2,903 samples, 0.91%)</title><rect x="608.1" y="547.0" width="10.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="611.1" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (298 samples, 0.09%)</title><rect x="608.1" y="531.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="611.1" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (298 samples, 0.09%)</title><rect x="608.1" y="515.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="611.1" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (298 samples, 0.09%)</title><rect x="608.1" y="499.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="611.1" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (298 samples, 0.09%)</title><rect x="608.1" y="483.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="611.1" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (298 samples, 0.09%)</title><rect x="608.1" y="467.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="611.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2,605 samples, 0.82%)</title><rect x="609.2" y="531.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="612.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (940 samples, 0.29%)</title><rect x="609.2" y="515.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="612.2" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (276 samples, 0.09%)</title><rect x="609.2" y="499.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="612.2" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (276 samples, 0.09%)</title><rect x="609.2" y="483.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="612.2" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (276 samples, 0.09%)</title><rect x="609.2" y="467.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.2" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (276 samples, 0.09%)</title><rect x="609.2" y="451.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.2" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (276 samples, 0.09%)</title><rect x="609.2" y="435.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="612.2" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (276 samples, 0.09%)</title><rect x="609.2" y="419.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="612.2" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (101 samples, 0.03%)</title><rect x="610.3" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="613.3" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (101 samples, 0.03%)</title><rect x="610.3" y="483.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="613.3" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (101 samples, 0.03%)</title><rect x="610.3" y="467.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="613.3" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (101 samples, 0.03%)</title><rect x="610.3" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="613.3" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (101 samples, 0.03%)</title><rect x="610.3" y="435.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="613.3" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (101 samples, 0.03%)</title><rect x="610.3" y="419.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="613.3" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (276 samples, 0.09%)</title><rect x="610.7" y="499.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="613.7" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (276 samples, 0.09%)</title><rect x="610.7" y="483.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="613.7" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (276 samples, 0.09%)</title><rect x="610.7" y="467.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="613.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (278 samples, 0.09%)</title><rect x="611.7" y="499.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="614.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (532 samples, 0.17%)</title><rect x="612.7" y="515.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="615.7" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (270 samples, 0.08%)</title><rect x="612.7" y="499.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="615.7" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (270 samples, 0.08%)</title><rect x="612.7" y="483.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="615.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (270 samples, 0.08%)</title><rect x="612.7" y="467.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="615.7" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (270 samples, 0.08%)</title><rect x="612.7" y="451.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="615.7" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (262 samples, 0.08%)</title><rect x="613.7" y="499.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="616.7" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (262 samples, 0.08%)</title><rect x="613.7" y="483.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="616.7" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (262 samples, 0.08%)</title><rect x="613.7" y="467.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="616.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (1,133 samples, 0.36%)</title><rect x="614.7" y="515.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="617.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (251 samples, 0.08%)</title><rect x="614.7" y="499.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="617.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (882 samples, 0.28%)</title><rect x="615.6" y="499.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="618.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (215 samples, 0.07%)</title><rect x="615.6" y="483.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="618.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (215 samples, 0.07%)</title><rect x="615.6" y="467.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="618.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (215 samples, 0.07%)</title><rect x="615.6" y="451.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="618.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (215 samples, 0.07%)</title><rect x="615.6" y="435.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="618.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (667 samples, 0.21%)</title><rect x="616.4" y="483.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="619.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (667 samples, 0.21%)</title><rect x="616.4" y="467.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (481 samples, 0.15%)</title><rect x="616.4" y="451.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="619.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (186 samples, 0.06%)</title><rect x="618.2" y="451.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="621.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (186 samples, 0.06%)</title><rect x="618.2" y="435.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="621.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (830 samples, 0.26%)</title><rect x="618.9" y="595.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="621.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (830 samples, 0.26%)</title><rect x="618.9" y="579.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="621.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (830 samples, 0.26%)</title><rect x="618.9" y="563.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="621.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (667 samples, 0.21%)</title><rect x="618.9" y="547.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="621.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (667 samples, 0.21%)</title><rect x="618.9" y="531.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="621.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (667 samples, 0.21%)</title><rect x="618.9" y="515.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="621.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (667 samples, 0.21%)</title><rect x="618.9" y="499.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="621.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$324/1017895259.accept (667 samples, 0.21%)</title><rect x="618.9" y="483.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="621.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (667 samples, 0.21%)</title><rect x="618.9" y="467.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="621.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (667 samples, 0.21%)</title><rect x="618.9" y="451.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="621.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (667 samples, 0.21%)</title><rect x="618.9" y="435.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="621.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (667 samples, 0.21%)</title><rect x="618.9" y="419.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="621.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$327/837206861.apply (667 samples, 0.21%)</title><rect x="618.9" y="403.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="621.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (667 samples, 0.21%)</title><rect x="618.9" y="387.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="621.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (663 samples, 0.21%)</title><rect x="618.9" y="371.0" width="2.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="621.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (163 samples, 0.05%)</title><rect x="621.4" y="547.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="624.4" y="558.0"></text>
</g>
<g>
<title>byte[] (163 samples, 0.05%)</title><rect x="621.4" y="531.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="624.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl$$Lambda$109/1485885249.run (54,833 samples, 17.21%)</title><rect x="622.1" y="755.0" width="203.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="625.1" y="766.0">ru/mail/polis/service/temno..</text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.lambda$entity$3 (54,833 samples, 17.21%)</title><rect x="622.1" y="739.0" width="203.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="625.1" y="750.0">ru/mail/polis/service/temno..</text>
</g>
<g>
<title>java.util.ArrayList (144 samples, 0.05%)</title><rect x="622.1" y="723.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="625.1" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (129 samples, 0.04%)</title><rect x="622.7" y="723.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="625.7" y="734.0"></text>
</g>
<g>
<title>java/lang/Long.toString (676 samples, 0.21%)</title><rect x="623.1" y="723.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="626.1" y="734.0"></text>
</g>
<g>
<title>byte[] (407 samples, 0.13%)</title><rect x="623.1" y="707.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="626.1" y="718.0"></text>
</g>
<g>
<title>java.lang.String (269 samples, 0.08%)</title><rect x="624.6" y="707.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="627.6" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,478 samples, 0.46%)</title><rect x="625.6" y="723.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="628.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1,100 samples, 0.35%)</title><rect x="625.6" y="707.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.6" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1218593486.invoke (1,100 samples, 0.35%)</title><rect x="625.6" y="691.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="628.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,100 samples, 0.35%)</title><rect x="625.6" y="675.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="628.6" y="686.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (310 samples, 0.10%)</title><rect x="625.6" y="659.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="628.6" y="670.0"></text>
</g>
<g>
<title>java.lang.String (310 samples, 0.10%)</title><rect x="625.6" y="643.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="628.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (790 samples, 0.25%)</title><rect x="626.8" y="659.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="629.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (790 samples, 0.25%)</title><rect x="626.8" y="643.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="629.8" y="654.0"></text>
</g>
<g>
<title>byte[] (789 samples, 0.25%)</title><rect x="626.8" y="627.0" width="2.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="629.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (378 samples, 0.12%)</title><rect x="629.7" y="707.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="632.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl$$Lambda$151/1647313403.get$Lambda (219 samples, 0.07%)</title><rect x="629.7" y="691.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="632.7" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.temnovochka.ServiceImpl$$Lambda$151 (219 samples, 0.07%)</title><rect x="629.7" y="675.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="632.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl$$Lambda$152/724793533.get$Lambda (159 samples, 0.05%)</title><rect x="630.5" y="691.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="633.5" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.temnovochka.ServiceImpl$$Lambda$152 (159 samples, 0.05%)</title><rect x="630.5" y="675.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="633.5" y="686.0"></text>
</g>
<g>
<title>java/net/URI.create (4,823 samples, 1.51%)</title><rect x="631.1" y="723.0" width="17.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="634.1" y="734.0"></text>
</g>
<g>
<title>java.net.URI (971 samples, 0.30%)</title><rect x="631.1" y="707.0" width="3.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="634.1" y="718.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (3,847 samples, 1.21%)</title><rect x="634.7" y="707.0" width="14.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="637.7" y="718.0"></text>
</g>
<g>
<title>java.net.URI$Parser (400 samples, 0.13%)</title><rect x="634.7" y="691.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="637.7" y="702.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (3,447 samples, 1.08%)</title><rect x="636.2" y="691.0" width="12.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="639.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (606 samples, 0.19%)</title><rect x="636.2" y="675.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="639.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (606 samples, 0.19%)</title><rect x="636.2" y="659.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="639.2" y="670.0"></text>
</g>
<g>
<title>java.lang.String (306 samples, 0.10%)</title><rect x="636.2" y="643.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="639.2" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (300 samples, 0.09%)</title><rect x="637.3" y="643.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="640.3" y="654.0"></text>
</g>
<g>
<title>byte[] (300 samples, 0.09%)</title><rect x="637.3" y="627.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="640.3" y="638.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (2,841 samples, 0.89%)</title><rect x="638.4" y="675.0" width="10.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="641.4" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,401 samples, 0.44%)</title><rect x="638.4" y="659.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="641.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,401 samples, 0.44%)</title><rect x="638.4" y="643.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="641.4" y="654.0"></text>
</g>
<g>
<title>java.lang.String (628 samples, 0.20%)</title><rect x="638.4" y="627.0" width="2.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="641.4" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (773 samples, 0.24%)</title><rect x="640.8" y="627.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.8" y="638.0"></text>
</g>
<g>
<title>byte[] (773 samples, 0.24%)</title><rect x="640.8" y="611.0" width="2.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="643.8" y="622.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (1,440 samples, 0.45%)</title><rect x="643.6" y="659.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.6" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (691 samples, 0.22%)</title><rect x="643.6" y="643.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="646.6" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (691 samples, 0.22%)</title><rect x="643.6" y="627.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="646.6" y="638.0"></text>
</g>
<g>
<title>java.lang.String (296 samples, 0.09%)</title><rect x="643.6" y="611.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="646.6" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (395 samples, 0.12%)</title><rect x="644.7" y="611.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="647.7" y="622.0"></text>
</g>
<g>
<title>byte[] (395 samples, 0.12%)</title><rect x="644.7" y="595.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="647.7" y="606.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (749 samples, 0.24%)</title><rect x="646.2" y="643.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="649.2" y="654.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (749 samples, 0.24%)</title><rect x="646.2" y="627.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="649.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (749 samples, 0.24%)</title><rect x="646.2" y="611.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="649.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (749 samples, 0.24%)</title><rect x="646.2" y="595.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="649.2" y="606.0"></text>
</g>
<g>
<title>java.lang.String (335 samples, 0.11%)</title><rect x="646.2" y="579.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="649.2" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (414 samples, 0.13%)</title><rect x="647.4" y="579.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.4" y="590.0"></text>
</g>
<g>
<title>byte[] (414 samples, 0.13%)</title><rect x="647.4" y="563.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="650.4" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (348 samples, 0.11%)</title><rect x="649.0" y="723.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="652.0" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (348 samples, 0.11%)</title><rect x="649.0" y="707.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="652.0" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (1,245 samples, 0.39%)</title><rect x="650.3" y="723.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="653.3" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (500 samples, 0.16%)</title><rect x="650.3" y="707.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="653.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (745 samples, 0.23%)</title><rect x="652.1" y="707.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="655.1" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (204 samples, 0.06%)</title><rect x="652.1" y="691.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="655.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (541 samples, 0.17%)</title><rect x="652.9" y="691.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="655.9" y="702.0"></text>
</g>
<g>
<title>java.util.TreeMap (541 samples, 0.17%)</title><rect x="652.9" y="675.0" width="2.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="655.9" y="686.0"></text>
</g>
<g>
<title>java/time/Duration.ofMillis (333 samples, 0.10%)</title><rect x="654.9" y="723.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="657.9" y="734.0"></text>
</g>
<g>
<title>java/time/Duration.create (333 samples, 0.10%)</title><rect x="654.9" y="707.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="657.9" y="718.0"></text>
</g>
<g>
<title>java.time.Duration (333 samples, 0.10%)</title><rect x="654.9" y="691.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="657.9" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (322 samples, 0.10%)</title><rect x="656.1" y="723.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="659.1" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (322 samples, 0.10%)</title><rect x="656.1" y="707.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.1" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (322 samples, 0.10%)</title><rect x="656.1" y="691.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="659.1" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (322 samples, 0.10%)</title><rect x="656.1" y="675.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="659.1" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (322 samples, 0.10%)</title><rect x="656.1" y="659.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="659.1" y="670.0"></text>
</g>
<g>
<title>java.lang.Object[] (322 samples, 0.10%)</title><rect x="656.1" y="643.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="659.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (418 samples, 0.13%)</title><rect x="657.3" y="723.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="660.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (418 samples, 0.13%)</title><rect x="657.3" y="707.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="660.3" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (258 samples, 0.08%)</title><rect x="657.3" y="691.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="660.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (160 samples, 0.05%)</title><rect x="658.2" y="691.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="661.2" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (160 samples, 0.05%)</title><rect x="658.2" y="675.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="661.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (475 samples, 0.15%)</title><rect x="658.8" y="723.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="661.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (475 samples, 0.15%)</title><rect x="658.8" y="707.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="661.8" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (253 samples, 0.08%)</title><rect x="658.8" y="691.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="661.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (173 samples, 0.05%)</title><rect x="659.8" y="691.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="662.8" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (173 samples, 0.05%)</title><rect x="659.8" y="675.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="662.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (893 samples, 0.28%)</title><rect x="660.6" y="723.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="663.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (893 samples, 0.28%)</title><rect x="660.6" y="707.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="663.6" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (502 samples, 0.16%)</title><rect x="660.6" y="691.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="663.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (391 samples, 0.12%)</title><rect x="662.5" y="691.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="665.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (391 samples, 0.12%)</title><rect x="662.5" y="675.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="665.5" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (391 samples, 0.12%)</title><rect x="662.5" y="659.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="665.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (27,583 samples, 8.66%)</title><rect x="663.9" y="723.0" width="102.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="666.9" y="734.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (27,583 samples, 8.66%)</title><rect x="663.9" y="707.0" width="102.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="666.9" y="718.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (27,583 samples, 8.66%)</title><rect x="663.9" y="691.0" width="102.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="666.9" y="702.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (27,583 samples, 8.66%)</title><rect x="663.9" y="675.0" width="102.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="666.9" y="686.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (208 samples, 0.07%)</title><rect x="663.9" y="659.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="666.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (208 samples, 0.07%)</title><rect x="663.9" y="643.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="666.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$145/118859250.get$Lambda (208 samples, 0.07%)</title><rect x="663.9" y="627.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="666.9" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$145 (208 samples, 0.07%)</title><rect x="663.9" y="611.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="666.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (929 samples, 0.29%)</title><rect x="664.7" y="659.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="667.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (929 samples, 0.29%)</title><rect x="664.7" y="643.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="667.7" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (497 samples, 0.16%)</title><rect x="664.7" y="627.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="667.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (432 samples, 0.14%)</title><rect x="666.5" y="627.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="669.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (432 samples, 0.14%)</title><rect x="666.5" y="611.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="669.5" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (432 samples, 0.14%)</title><rect x="666.5" y="595.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="669.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (929 samples, 0.29%)</title><rect x="668.1" y="659.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="671.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (929 samples, 0.29%)</title><rect x="668.1" y="643.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="671.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (543 samples, 0.17%)</title><rect x="668.1" y="627.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="671.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (386 samples, 0.12%)</title><rect x="670.1" y="627.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (386 samples, 0.12%)</title><rect x="670.1" y="611.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="673.1" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (386 samples, 0.12%)</title><rect x="670.1" y="595.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="673.1" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (723 samples, 0.23%)</title><rect x="671.6" y="659.0" width="2.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="674.6" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (1,194 samples, 0.37%)</title><rect x="674.3" y="659.0" width="4.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="677.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (14,145 samples, 4.44%)</title><rect x="678.7" y="659.0" width="52.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="681.7" y="670.0">jdk/i..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1,459 samples, 0.46%)</title><rect x="678.7" y="643.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="681.7" y="654.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,122 samples, 0.35%)</title><rect x="678.7" y="627.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="681.7" y="638.0"></text>
</g>
<g>
<title>java/util/List.spliterator (395 samples, 0.12%)</title><rect x="678.7" y="611.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="681.7" y="622.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (395 samples, 0.12%)</title><rect x="678.7" y="595.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="681.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (727 samples, 0.23%)</title><rect x="680.2" y="611.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="683.2" y="622.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (727 samples, 0.23%)</title><rect x="680.2" y="595.0" width="2.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="683.2" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (337 samples, 0.11%)</title><rect x="682.9" y="627.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="685.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (337 samples, 0.11%)</title><rect x="682.9" y="611.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="685.9" y="622.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (337 samples, 0.11%)</title><rect x="682.9" y="595.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="685.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$57/1095293768.get (337 samples, 0.11%)</title><rect x="682.9" y="579.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.9" y="590.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (337 samples, 0.11%)</title><rect x="682.9" y="563.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="685.9" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6,305 samples, 1.98%)</title><rect x="684.1" y="643.0" width="23.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="687.1" y="654.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6,305 samples, 1.98%)</title><rect x="684.1" y="627.0" width="23.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="687.1" y="638.0">j..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (211 samples, 0.07%)</title><rect x="684.1" y="611.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="687.1" y="622.0"></text>
</g>
<g>
<title>java.util.ArrayList (297 samples, 0.09%)</title><rect x="684.9" y="611.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="687.9" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap (602 samples, 0.19%)</title><rect x="686.0" y="611.0" width="2.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="689.0" y="622.0"></text>
</g>
<g>
<title>java.util.TreeSet (214 samples, 0.07%)</title><rect x="688.3" y="611.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="691.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (381 samples, 0.12%)</title><rect x="689.0" y="611.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="692.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (381 samples, 0.12%)</title><rect x="689.0" y="595.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="692.0" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/2110400372.get$Lambda (381 samples, 0.12%)</title><rect x="689.0" y="579.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.0" y="590.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$120 (381 samples, 0.12%)</title><rect x="689.0" y="563.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="692.0" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (3,541 samples, 1.11%)</title><rect x="690.5" y="611.0" width="13.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="693.5" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (3,541 samples, 1.11%)</title><rect x="690.5" y="595.0" width="13.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="693.5" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/2110400372.accept (3,541 samples, 1.11%)</title><rect x="690.5" y="579.0" width="13.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="693.5" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3,541 samples, 1.11%)</title><rect x="690.5" y="563.0" width="13.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="693.5" y="574.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (720 samples, 0.23%)</title><rect x="690.5" y="547.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="693.5" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1592266976.accept (720 samples, 0.23%)</title><rect x="690.5" y="531.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="693.5" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (720 samples, 0.23%)</title><rect x="690.5" y="515.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="693.5" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (720 samples, 0.23%)</title><rect x="690.5" y="499.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="693.5" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (720 samples, 0.23%)</title><rect x="690.5" y="483.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="693.5" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (720 samples, 0.23%)</title><rect x="690.5" y="467.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="693.5" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (720 samples, 0.23%)</title><rect x="690.5" y="451.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="693.5" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (720 samples, 0.23%)</title><rect x="690.5" y="435.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="693.5" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (713 samples, 0.22%)</title><rect x="690.5" y="419.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="693.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (599 samples, 0.19%)</title><rect x="693.1" y="547.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="696.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (599 samples, 0.19%)</title><rect x="693.1" y="531.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.1" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1592266976.get$Lambda (599 samples, 0.19%)</title><rect x="693.1" y="515.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="696.1" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$123 (599 samples, 0.19%)</title><rect x="693.1" y="499.0" width="2.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="696.1" y="510.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1,217 samples, 0.38%)</title><rect x="695.3" y="547.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="698.3" y="558.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1,217 samples, 0.38%)</title><rect x="695.3" y="531.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="698.3" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (631 samples, 0.20%)</title><rect x="695.3" y="515.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (631 samples, 0.20%)</title><rect x="695.3" y="499.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="698.3" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (631 samples, 0.20%)</title><rect x="695.3" y="483.0" width="2.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="698.3" y="494.0"></text>
</g>
<g>
<title>java/util/List.of (586 samples, 0.18%)</title><rect x="697.7" y="515.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="700.7" y="526.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (586 samples, 0.18%)</title><rect x="697.7" y="499.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="700.7" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,005 samples, 0.32%)</title><rect x="699.8" y="547.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.8" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,005 samples, 0.32%)</title><rect x="699.8" y="531.0" width="3.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="702.8" y="542.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (409 samples, 0.13%)</title><rect x="703.6" y="611.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="706.6" y="622.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (409 samples, 0.13%)</title><rect x="703.6" y="595.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="706.6" y="606.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (650 samples, 0.20%)</title><rect x="705.1" y="611.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="708.1" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap (650 samples, 0.20%)</title><rect x="705.1" y="595.0" width="2.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="708.1" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (206 samples, 0.06%)</title><rect x="707.5" y="643.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="710.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (4,531 samples, 1.42%)</title><rect x="708.3" y="643.0" width="16.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="711.3" y="654.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (4,531 samples, 1.42%)</title><rect x="708.3" y="627.0" width="16.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="711.3" y="638.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (4,123 samples, 1.29%)</title><rect x="708.3" y="611.0" width="15.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="711.3" y="622.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (4,123 samples, 1.29%)</title><rect x="708.3" y="595.0" width="15.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.3" y="606.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (4,123 samples, 1.29%)</title><rect x="708.3" y="579.0" width="15.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.3" y="590.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (890 samples, 0.28%)</title><rect x="708.3" y="563.0" width="3.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="711.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1,172 samples, 0.37%)</title><rect x="711.5" y="563.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.5" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1,172 samples, 0.37%)</title><rect x="711.5" y="547.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="714.5" y="558.0"></text>
</g>
<g>
<title>byte[] (1,172 samples, 0.37%)</title><rect x="711.5" y="531.0" width="4.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="714.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2,061 samples, 0.65%)</title><rect x="715.9" y="563.0" width="7.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="718.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,061 samples, 0.65%)</title><rect x="715.9" y="547.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="718.9" y="558.0"></text>
</g>
<g>
<title>java.lang.String (896 samples, 0.28%)</title><rect x="715.9" y="531.0" width="3.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="718.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,165 samples, 0.37%)</title><rect x="719.2" y="531.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="722.2" y="542.0"></text>
</g>
<g>
<title>byte[] (1,165 samples, 0.37%)</title><rect x="719.2" y="515.0" width="4.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="722.2" y="526.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (408 samples, 0.13%)</title><rect x="723.5" y="611.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="726.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (602 samples, 0.19%)</title><rect x="725.0" y="643.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="728.0" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap (602 samples, 0.19%)</title><rect x="725.0" y="627.0" width="2.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="728.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1,042 samples, 0.33%)</title><rect x="727.3" y="643.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="730.3" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (274 samples, 0.09%)</title><rect x="727.3" y="627.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="730.3" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (265 samples, 0.08%)</title><rect x="728.3" y="627.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="731.3" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (265 samples, 0.08%)</title><rect x="728.3" y="611.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="731.3" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (503 samples, 0.16%)</title><rect x="729.3" y="627.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.3" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (503 samples, 0.16%)</title><rect x="729.3" y="611.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="732.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (5,998 samples, 1.88%)</title><rect x="731.1" y="659.0" width="22.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="734.1" y="670.0">j..</text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (225 samples, 0.07%)</title><rect x="731.1" y="643.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="734.1" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (899 samples, 0.28%)</title><rect x="731.9" y="643.0" width="3.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="734.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (190 samples, 0.06%)</title><rect x="735.3" y="643.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="738.3" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (190 samples, 0.06%)</title><rect x="735.3" y="627.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="738.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (4,667 samples, 1.46%)</title><rect x="736.0" y="643.0" width="17.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="739.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (4,667 samples, 1.46%)</title><rect x="736.0" y="627.0" width="17.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="739.0" y="638.0"></text>
</g>
<g>
<title>java.lang.Class[] (427 samples, 0.13%)</title><rect x="736.0" y="611.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="739.0" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (361 samples, 0.11%)</title><rect x="737.6" y="611.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="740.6" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList (416 samples, 0.13%)</title><rect x="739.0" y="611.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="742.0" y="622.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (2,073 samples, 0.65%)</title><rect x="740.5" y="611.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="743.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (2,073 samples, 0.65%)</title><rect x="740.5" y="595.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="743.5" y="606.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (2,073 samples, 0.65%)</title><rect x="740.5" y="579.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="743.5" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (2,073 samples, 0.65%)</title><rect x="740.5" y="563.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="743.5" y="574.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (2,063 samples, 0.65%)</title><rect x="740.5" y="547.0" width="7.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="743.5" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (732 samples, 0.23%)</title><rect x="748.2" y="611.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="751.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (732 samples, 0.23%)</title><rect x="748.2" y="595.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="751.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor11.newInstance (210 samples, 0.07%)</title><rect x="748.2" y="579.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="751.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (210 samples, 0.07%)</title><rect x="748.2" y="563.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="751.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor13.newInstance (522 samples, 0.16%)</title><rect x="749.0" y="579.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="752.0" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (522 samples, 0.16%)</title><rect x="749.0" y="563.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="752.0" y="574.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (658 samples, 0.21%)</title><rect x="750.9" y="611.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="753.9" y="622.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (658 samples, 0.21%)</title><rect x="750.9" y="595.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="753.9" y="606.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (658 samples, 0.21%)</title><rect x="750.9" y="579.0" width="2.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="753.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (3,433 samples, 1.08%)</title><rect x="753.3" y="659.0" width="12.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="756.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (742 samples, 0.23%)</title><rect x="753.3" y="643.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="756.3" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (314 samples, 0.10%)</title><rect x="753.3" y="627.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="756.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (428 samples, 0.13%)</title><rect x="754.5" y="627.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="757.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (428 samples, 0.13%)</title><rect x="754.5" y="611.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="757.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (428 samples, 0.13%)</title><rect x="754.5" y="595.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="757.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (428 samples, 0.13%)</title><rect x="754.5" y="579.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="757.5" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (428 samples, 0.13%)</title><rect x="754.5" y="563.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="757.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (384 samples, 0.12%)</title><rect x="756.1" y="643.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="759.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (2,307 samples, 0.72%)</title><rect x="757.5" y="643.0" width="8.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="760.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (401 samples, 0.13%)</title><rect x="757.5" y="627.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="760.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (401 samples, 0.13%)</title><rect x="757.5" y="611.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="760.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$136/665754590.get$Lambda (200 samples, 0.06%)</title><rect x="757.5" y="595.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="760.5" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$136 (200 samples, 0.06%)</title><rect x="757.5" y="579.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="760.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$141/422005947.get$Lambda (201 samples, 0.06%)</title><rect x="758.2" y="595.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.2" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$141 (201 samples, 0.06%)</title><rect x="758.2" y="579.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="761.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,906 samples, 0.60%)</title><rect x="759.0" y="627.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="762.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,906 samples, 0.60%)</title><rect x="759.0" y="611.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="762.0" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1,037 samples, 0.33%)</title><rect x="759.0" y="595.0" width="3.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="762.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (869 samples, 0.27%)</title><rect x="762.8" y="595.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="765.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (869 samples, 0.27%)</title><rect x="762.8" y="579.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="765.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (869 samples, 0.27%)</title><rect x="762.8" y="563.0" width="3.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="765.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (7,109 samples, 2.23%)</title><rect x="766.0" y="723.0" width="26.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="769.0" y="734.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (486 samples, 0.15%)</title><rect x="766.0" y="707.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="769.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (6,623 samples, 2.08%)</title><rect x="767.8" y="707.0" width="24.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="770.8" y="718.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6,222 samples, 1.95%)</title><rect x="767.8" y="691.0" width="23.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="770.8" y="702.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6,222 samples, 1.95%)</title><rect x="767.8" y="675.0" width="23.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="770.8" y="686.0">j..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (208 samples, 0.07%)</title><rect x="767.8" y="659.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="770.8" y="670.0"></text>
</g>
<g>
<title>java.util.ArrayList (314 samples, 0.10%)</title><rect x="768.6" y="659.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="771.6" y="670.0"></text>
</g>
<g>
<title>java.util.TreeMap (578 samples, 0.18%)</title><rect x="769.8" y="659.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="772.8" y="670.0"></text>
</g>
<g>
<title>java.util.TreeSet (205 samples, 0.06%)</title><rect x="771.9" y="659.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="774.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (382 samples, 0.12%)</title><rect x="772.7" y="659.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="775.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (382 samples, 0.12%)</title><rect x="772.7" y="643.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="775.7" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/2110400372.get$Lambda (382 samples, 0.12%)</title><rect x="772.7" y="627.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="775.7" y="638.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$120 (382 samples, 0.12%)</title><rect x="772.7" y="611.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="775.7" y="622.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (383 samples, 0.12%)</title><rect x="774.1" y="659.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="777.1" y="670.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (383 samples, 0.12%)</title><rect x="774.1" y="643.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="777.1" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (3,545 samples, 1.11%)</title><rect x="775.5" y="659.0" width="13.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="778.5" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/2110400372.accept (3,545 samples, 1.11%)</title><rect x="775.5" y="643.0" width="13.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="778.5" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3,545 samples, 1.11%)</title><rect x="775.5" y="627.0" width="13.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="778.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (605 samples, 0.19%)</title><rect x="775.5" y="611.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="778.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (605 samples, 0.19%)</title><rect x="775.5" y="595.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="778.5" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1592266976.get$Lambda (605 samples, 0.19%)</title><rect x="775.5" y="579.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="778.5" y="590.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$123 (605 samples, 0.19%)</title><rect x="775.5" y="563.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="778.5" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (698 samples, 0.22%)</title><rect x="777.7" y="611.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.7" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1592266976.accept (698 samples, 0.22%)</title><rect x="777.7" y="595.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="780.7" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (698 samples, 0.22%)</title><rect x="777.7" y="579.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="780.7" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (698 samples, 0.22%)</title><rect x="777.7" y="563.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="780.7" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (698 samples, 0.22%)</title><rect x="777.7" y="547.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="780.7" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (698 samples, 0.22%)</title><rect x="777.7" y="531.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.7" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (698 samples, 0.22%)</title><rect x="777.7" y="515.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="780.7" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (698 samples, 0.22%)</title><rect x="777.7" y="499.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="780.7" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (698 samples, 0.22%)</title><rect x="777.7" y="483.0" width="2.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="780.7" y="494.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1,256 samples, 0.39%)</title><rect x="780.3" y="611.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="783.3" y="622.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1,256 samples, 0.39%)</title><rect x="780.3" y="595.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="783.3" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (631 samples, 0.20%)</title><rect x="780.3" y="579.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="783.3" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (631 samples, 0.20%)</title><rect x="780.3" y="563.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="783.3" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (631 samples, 0.20%)</title><rect x="780.3" y="547.0" width="2.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="783.3" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (625 samples, 0.20%)</title><rect x="782.7" y="579.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="785.7" y="590.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (625 samples, 0.20%)</title><rect x="782.7" y="563.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="785.7" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (986 samples, 0.31%)</title><rect x="785.0" y="611.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="788.0" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (986 samples, 0.31%)</title><rect x="785.0" y="595.0" width="3.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="788.0" y="606.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (607 samples, 0.19%)</title><rect x="788.6" y="659.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="791.6" y="670.0"></text>
</g>
<g>
<title>java.util.TreeMap (607 samples, 0.19%)</title><rect x="788.6" y="643.0" width="2.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="791.6" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (401 samples, 0.13%)</title><rect x="790.9" y="691.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="793.9" y="702.0"></text>
</g>
<g>
<title>java/util/Optional.of (401 samples, 0.13%)</title><rect x="790.9" y="675.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="793.9" y="686.0"></text>
</g>
<g>
<title>java.util.Optional (401 samples, 0.13%)</title><rect x="790.9" y="659.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="793.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (2,159 samples, 0.68%)</title><rect x="792.4" y="723.0" width="8.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="795.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (2,159 samples, 0.68%)</title><rect x="792.4" y="707.0" width="8.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="795.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2,159 samples, 0.68%)</title><rect x="792.4" y="691.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="795.4" y="702.0"></text>
</g>
<g>
<title>java.util.ArrayList (576 samples, 0.18%)</title><rect x="792.4" y="675.0" width="2.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="795.4" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (571 samples, 0.18%)</title><rect x="794.5" y="675.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="797.5" y="686.0"></text>
</g>
<g>
<title>java.lang.Object[] (571 samples, 0.18%)</title><rect x="794.5" y="659.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="797.5" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,012 samples, 0.32%)</title><rect x="796.6" y="675.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="799.6" y="686.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,012 samples, 0.32%)</title><rect x="796.6" y="659.0" width="3.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="799.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/CompletableFutureHelper.whenComplete (3,795 samples, 1.19%)</title><rect x="800.4" y="723.0" width="14.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="803.4" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (139 samples, 0.04%)</title><rect x="800.4" y="707.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="803.4" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (149 samples, 0.05%)</title><rect x="800.9" y="707.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="803.9" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (107 samples, 0.03%)</title><rect x="801.4" y="707.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="804.4" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (444 samples, 0.14%)</title><rect x="801.8" y="707.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="804.8" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (444 samples, 0.14%)</title><rect x="801.8" y="691.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="804.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/CompletableFutureHelper$$Lambda$150/1945585599.get$Lambda (444 samples, 0.14%)</title><rect x="801.8" y="675.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="804.8" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.temnovochka.CompletableFutureHelper$$Lambda$150 (444 samples, 0.14%)</title><rect x="801.8" y="659.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="804.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1518899899.linkToTargetMethod (495 samples, 0.16%)</title><rect x="803.5" y="707.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="806.5" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/815541954.invokeStatic (495 samples, 0.16%)</title><rect x="803.5" y="691.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="806.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/CompletableFutureHelper$$Lambda$149/2098073442.get$Lambda (495 samples, 0.16%)</title><rect x="803.5" y="675.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="806.5" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.temnovochka.CompletableFutureHelper$$Lambda$149 (495 samples, 0.16%)</title><rect x="803.5" y="659.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="806.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (1,037 samples, 0.33%)</title><rect x="805.3" y="707.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (1,037 samples, 0.33%)</title><rect x="805.3" y="691.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="808.3" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (521 samples, 0.16%)</title><rect x="805.3" y="675.0" width="1.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="808.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (138 samples, 0.04%)</title><rect x="807.2" y="675.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="810.2" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (138 samples, 0.04%)</title><rect x="807.2" y="659.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="810.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (378 samples, 0.12%)</title><rect x="807.7" y="675.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="810.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (378 samples, 0.12%)</title><rect x="807.7" y="659.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="810.7" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (378 samples, 0.12%)</title><rect x="807.7" y="643.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="810.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (1,227 samples, 0.39%)</title><rect x="809.1" y="707.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="812.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (1,227 samples, 0.39%)</title><rect x="809.1" y="691.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="812.1" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (499 samples, 0.16%)</title><rect x="809.1" y="675.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="812.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (316 samples, 0.10%)</title><rect x="811.0" y="675.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="814.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (172 samples, 0.05%)</title><rect x="811.0" y="659.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="814.0" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (172 samples, 0.05%)</title><rect x="811.0" y="643.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="814.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/CompletableFutureHelper$$Lambda$149/2098073442.accept (142 samples, 0.04%)</title><rect x="811.6" y="659.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="814.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/CompletableFutureHelper.lambda$whenComplete$0 (142 samples, 0.04%)</title><rect x="811.6" y="643.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="814.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (142 samples, 0.04%)</title><rect x="811.6" y="627.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="814.6" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (142 samples, 0.04%)</title><rect x="811.6" y="611.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="814.6" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (142 samples, 0.04%)</title><rect x="811.6" y="595.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="814.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (412 samples, 0.13%)</title><rect x="812.2" y="675.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="815.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (412 samples, 0.13%)</title><rect x="812.2" y="659.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="815.2" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (412 samples, 0.13%)</title><rect x="812.2" y="643.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="815.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (197 samples, 0.06%)</title><rect x="813.7" y="707.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="816.7" y="718.0"></text>
</g>
<g>
<title>java.lang.Object[] (102 samples, 0.03%)</title><rect x="813.7" y="691.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="816.7" y="702.0"></text>
</g>
<g>
<title>java.lang.Object (95 samples, 0.03%)</title><rect x="814.1" y="691.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="817.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/EntityWorker.responseProcessEntity (1,647 samples, 0.52%)</title><rect x="814.4" y="723.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="817.4" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (283 samples, 0.09%)</title><rect x="814.4" y="707.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="817.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (283 samples, 0.09%)</title><rect x="814.4" y="691.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="817.4" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (283 samples, 0.09%)</title><rect x="814.4" y="675.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="817.4" y="686.0"></text>
</g>
<g>
<title>one.nio.http.Response (175 samples, 0.05%)</title><rect x="815.5" y="707.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="818.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (643 samples, 0.20%)</title><rect x="816.1" y="707.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="819.1" y="718.0"></text>
</g>
<g>
<title>byte[] (235 samples, 0.07%)</title><rect x="816.1" y="691.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="819.1" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (229 samples, 0.07%)</title><rect x="817.0" y="691.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="820.0" y="702.0"></text>
</g>
<g>
<title>java.lang.String (179 samples, 0.06%)</title><rect x="817.8" y="691.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="820.8" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.DAORecord (189 samples, 0.06%)</title><rect x="818.5" y="707.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="821.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.upsertRecord (357 samples, 0.11%)</title><rect x="819.2" y="707.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="822.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteArrayUtils.packingKey (154 samples, 0.05%)</title><rect x="819.2" y="691.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="822.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteArrayUtils.getArrayFromByteBuffer (154 samples, 0.05%)</title><rect x="819.2" y="675.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="822.2" y="686.0"></text>
</g>
<g>
<title>byte[] (154 samples, 0.05%)</title><rect x="819.2" y="659.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="822.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORecord.toBytes (203 samples, 0.06%)</title><rect x="819.8" y="691.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="822.8" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (203 samples, 0.06%)</title><rect x="819.8" y="675.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="822.8" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (203 samples, 0.06%)</title><rect x="819.8" y="659.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="822.8" y="670.0"></text>
</g>
<g>
<title>byte[] (203 samples, 0.06%)</title><rect x="819.8" y="643.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="822.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ResponseRepresentation.create (144 samples, 0.05%)</title><rect x="820.5" y="723.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="823.5" y="734.0"></text>
</g>
<g>
<title>ru.mail.polis.service.temnovochka.ResponseRepresentation (144 samples, 0.05%)</title><rect x="820.5" y="707.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="823.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.addHeaders (1,112 samples, 0.35%)</title><rect x="821.0" y="723.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="824.0" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1524960486.linkToTargetMethod (1,112 samples, 0.35%)</title><rect x="821.0" y="707.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="824.0" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/481760725.invoke (1,112 samples, 0.35%)</title><rect x="821.0" y="691.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="824.0" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,112 samples, 0.35%)</title><rect x="821.0" y="675.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="824.0" y="686.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (140 samples, 0.04%)</title><rect x="821.0" y="659.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="824.0" y="670.0"></text>
</g>
<g>
<title>java.lang.String (140 samples, 0.04%)</title><rect x="821.0" y="643.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="824.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (972 samples, 0.31%)</title><rect x="821.6" y="659.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="824.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (972 samples, 0.31%)</title><rect x="821.6" y="643.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="824.6" y="654.0"></text>
</g>
<g>
<title>byte[] (972 samples, 0.31%)</title><rect x="821.6" y="627.0" width="3.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="824.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl$$Lambda$302/1732130861.run (5,863 samples, 1.84%)</title><rect x="825.2" y="755.0" width="21.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.2" y="766.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.lambda$entity$0 (5,863 samples, 1.84%)</title><rect x="825.2" y="739.0" width="21.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="828.2" y="750.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,401 samples, 0.75%)</title><rect x="825.2" y="723.0" width="8.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="828.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,617 samples, 0.51%)</title><rect x="825.2" y="707.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="828.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,121 samples, 0.35%)</title><rect x="825.2" y="691.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="828.2" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,121 samples, 0.35%)</title><rect x="825.2" y="675.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="828.2" y="686.0"></text>
</g>
<g>
<title>byte[] (1,105 samples, 0.35%)</title><rect x="825.2" y="659.0" width="4.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="828.2" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (496 samples, 0.16%)</title><rect x="829.3" y="691.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="832.3" y="702.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (496 samples, 0.16%)</title><rect x="829.3" y="675.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="832.3" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (784 samples, 0.25%)</title><rect x="831.1" y="707.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="834.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (784 samples, 0.25%)</title><rect x="831.1" y="691.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="834.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (784 samples, 0.25%)</title><rect x="831.1" y="675.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="834.1" y="686.0"></text>
</g>
<g>
<title>java.lang.String (309 samples, 0.10%)</title><rect x="831.1" y="659.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="834.1" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (475 samples, 0.15%)</title><rect x="832.3" y="659.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="835.3" y="670.0"></text>
</g>
<g>
<title>byte[] (475 samples, 0.15%)</title><rect x="832.3" y="643.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="835.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/EntityWorker.responseProcessEntity (3,462 samples, 1.09%)</title><rect x="834.1" y="723.0" width="12.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="837.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (872 samples, 0.27%)</title><rect x="834.1" y="707.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="837.1" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (872 samples, 0.27%)</title><rect x="834.1" y="691.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="837.1" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (872 samples, 0.27%)</title><rect x="834.1" y="675.0" width="3.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="837.1" y="686.0"></text>
</g>
<g>
<title>one.nio.http.Response (284 samples, 0.09%)</title><rect x="837.3" y="707.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="840.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,173 samples, 0.37%)</title><rect x="838.3" y="707.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="841.3" y="718.0"></text>
</g>
<g>
<title>byte[] (485 samples, 0.15%)</title><rect x="838.3" y="691.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="841.3" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (389 samples, 0.12%)</title><rect x="840.1" y="691.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="843.1" y="702.0"></text>
</g>
<g>
<title>java.lang.String (299 samples, 0.09%)</title><rect x="841.6" y="691.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="844.6" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.DAORecord (407 samples, 0.13%)</title><rect x="842.7" y="707.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="845.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.upsertRecord (726 samples, 0.23%)</title><rect x="844.2" y="707.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="847.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteArrayUtils.packingKey (305 samples, 0.10%)</title><rect x="844.2" y="691.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="847.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteArrayUtils.getArrayFromByteBuffer (305 samples, 0.10%)</title><rect x="844.2" y="675.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="847.2" y="686.0"></text>
</g>
<g>
<title>byte[] (305 samples, 0.10%)</title><rect x="844.2" y="659.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="847.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORecord.toBytes (421 samples, 0.13%)</title><rect x="845.3" y="691.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="848.3" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (421 samples, 0.13%)</title><rect x="845.3" y="675.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="848.3" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (421 samples, 0.13%)</title><rect x="845.3" y="659.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="848.3" y="670.0"></text>
</g>
<g>
<title>byte[] (421 samples, 0.13%)</title><rect x="845.3" y="643.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="848.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (19,814 samples, 6.22%)</title><rect x="846.9" y="803.0" width="73.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="849.9" y="814.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (19,814 samples, 6.22%)</title><rect x="846.9" y="787.0" width="73.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="849.9" y="798.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (19,814 samples, 6.22%)</title><rect x="846.9" y="771.0" width="73.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="849.9" y="782.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (19,814 samples, 6.22%)</title><rect x="846.9" y="755.0" width="73.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="849.9" y="766.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (19,814 samples, 6.22%)</title><rect x="846.9" y="739.0" width="73.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="849.9" y="750.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (19,814 samples, 6.22%)</title><rect x="846.9" y="723.0" width="73.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="849.9" y="734.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (19,814 samples, 6.22%)</title><rect x="846.9" y="707.0" width="73.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="849.9" y="718.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (19,814 samples, 6.22%)</title><rect x="846.9" y="691.0" width="73.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="849.9" y="702.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (19,814 samples, 6.22%)</title><rect x="846.9" y="675.0" width="73.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="849.9" y="686.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (18,424 samples, 5.78%)</title><rect x="846.9" y="659.0" width="68.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="849.9" y="670.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/CompletableFutureHelper$$Lambda$149/2098073442.accept (18,424 samples, 5.78%)</title><rect x="846.9" y="643.0" width="68.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="849.9" y="654.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/CompletableFutureHelper.lambda$whenComplete$0 (18,424 samples, 5.78%)</title><rect x="846.9" y="627.0" width="68.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="849.9" y="638.0">ru/mail..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (17,323 samples, 5.44%)</title><rect x="846.9" y="611.0" width="64.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="849.9" y="622.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (17,323 samples, 5.44%)</title><rect x="846.9" y="595.0" width="64.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="849.9" y="606.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (17,323 samples, 5.44%)</title><rect x="846.9" y="579.0" width="64.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="849.9" y="590.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl$$Lambda$151/1647313403.accept (17,323 samples, 5.44%)</title><rect x="846.9" y="563.0" width="64.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="849.9" y="574.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.lambda$entity$1 (17,323 samples, 5.44%)</title><rect x="846.9" y="547.0" width="64.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="849.9" y="558.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,535 samples, 0.80%)</title><rect x="846.9" y="531.0" width="9.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="849.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,535 samples, 0.80%)</title><rect x="846.9" y="515.0" width="9.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="849.9" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,735 samples, 0.54%)</title><rect x="846.9" y="499.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="849.9" y="510.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,735 samples, 0.54%)</title><rect x="846.9" y="483.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="849.9" y="494.0"></text>
</g>
<g>
<title>byte[] (1,724 samples, 0.54%)</title><rect x="846.9" y="467.0" width="6.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="849.9" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (800 samples, 0.25%)</title><rect x="853.3" y="499.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="856.3" y="510.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (800 samples, 0.25%)</title><rect x="853.3" y="483.0" width="3.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="856.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/EntityWorker.makeResponse (14,788 samples, 4.64%)</title><rect x="856.3" y="531.0" width="54.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="859.3" y="542.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/ImmutableSet.of (3,778 samples, 1.19%)</title><rect x="856.3" y="515.0" width="13.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="859.3" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableSet.construct (3,115 samples, 0.98%)</title><rect x="856.3" y="499.0" width="11.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="859.3" y="510.0"></text>
</g>
<g>
<title>com.google.common.collect.ImmutableSet$RegularSetBuilderImpl (828 samples, 0.26%)</title><rect x="856.3" y="483.0" width="3.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="859.3" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableSet$RegularSetBuilderImpl.&lt;init&gt; (1,666 samples, 0.52%)</title><rect x="859.3" y="483.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="862.3" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableSet$SetBuilderImpl.&lt;init&gt; (644 samples, 0.20%)</title><rect x="859.3" y="467.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="862.3" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (644 samples, 0.20%)</title><rect x="859.3" y="451.0" width="2.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="862.3" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,022 samples, 0.32%)</title><rect x="861.7" y="467.0" width="3.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="864.7" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableSet$RegularSetBuilderImpl.build (621 samples, 0.19%)</title><rect x="865.5" y="483.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="868.5" y="494.0"></text>
</g>
<g>
<title>com.google.common.collect.RegularImmutableSet (621 samples, 0.19%)</title><rect x="865.5" y="467.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="868.5" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (663 samples, 0.21%)</title><rect x="867.8" y="499.0" width="2.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="870.8" y="510.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1,332 samples, 0.42%)</title><rect x="870.2" y="515.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="873.2" y="526.0"></text>
</g>
<g>
<title>java.lang.Integer (1,332 samples, 0.42%)</title><rect x="870.2" y="499.0" width="5.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="873.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (298 samples, 0.09%)</title><rect x="875.2" y="515.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="878.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (298 samples, 0.09%)</title><rect x="875.2" y="499.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="878.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/EntityWorker$$Lambda$332/427126854.get$Lambda (298 samples, 0.09%)</title><rect x="875.2" y="483.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="878.2" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.service.temnovochka.EntityWorker$$Lambda$332 (298 samples, 0.09%)</title><rect x="875.2" y="467.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="878.2" y="478.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,731 samples, 0.54%)</title><rect x="876.3" y="515.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="879.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.spliterator (628 samples, 0.20%)</title><rect x="876.3" y="499.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="879.3" y="510.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (628 samples, 0.20%)</title><rect x="876.3" y="483.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="879.3" y="494.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (628 samples, 0.20%)</title><rect x="876.3" y="467.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="879.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,103 samples, 0.35%)</title><rect x="878.6" y="499.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="881.6" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,103 samples, 0.35%)</title><rect x="878.6" y="483.0" width="4.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="881.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.count (2,492 samples, 0.78%)</title><rect x="882.7" y="515.0" width="9.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="885.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2,146 samples, 0.67%)</title><rect x="882.7" y="499.0" width="7.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="885.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$5.evaluateSequential (2,146 samples, 0.67%)</title><rect x="882.7" y="483.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="885.7" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$5.evaluateSequential (2,146 samples, 0.67%)</title><rect x="882.7" y="467.0" width="7.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="885.7" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (2,146 samples, 0.67%)</title><rect x="882.7" y="451.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="885.7" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1,622 samples, 0.51%)</title><rect x="882.7" y="435.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="885.7" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (658 samples, 0.21%)</title><rect x="882.7" y="419.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="885.7" y="430.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (658 samples, 0.21%)</title><rect x="882.7" y="403.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="885.7" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (658 samples, 0.21%)</title><rect x="882.7" y="387.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="885.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/EntityWorker$$Lambda$329/556473600.apply (658 samples, 0.21%)</title><rect x="882.7" y="371.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="885.7" y="382.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (658 samples, 0.21%)</title><rect x="882.7" y="355.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="885.7" y="366.0"></text>
</g>
<g>
<title>java.lang.Integer (658 samples, 0.21%)</title><rect x="882.7" y="339.0" width="2.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="885.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (964 samples, 0.30%)</title><rect x="885.1" y="419.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="888.1" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (503 samples, 0.16%)</title><rect x="885.1" y="403.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="888.1" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (503 samples, 0.16%)</title><rect x="885.1" y="387.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="888.1" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (461 samples, 0.14%)</title><rect x="887.0" y="403.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="890.0" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (461 samples, 0.14%)</title><rect x="887.0" y="387.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="890.0" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$5.makeSink (524 samples, 0.16%)</title><rect x="888.7" y="435.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="891.7" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$5.makeSink (524 samples, 0.16%)</title><rect x="888.7" y="419.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="891.7" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$CountingSink$OfRef (524 samples, 0.16%)</title><rect x="888.7" y="403.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="891.7" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRefCounting (346 samples, 0.11%)</title><rect x="890.6" y="499.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="893.6" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$5 (346 samples, 0.11%)</title><rect x="890.6" y="483.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="893.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1,309 samples, 0.41%)</title><rect x="891.9" y="515.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="894.9" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (1,309 samples, 0.41%)</title><rect x="891.9" y="499.0" width="4.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="894.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (1,405 samples, 0.44%)</title><rect x="896.8" y="515.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="899.8" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (1,405 samples, 0.44%)</title><rect x="896.8" y="499.0" width="5.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="899.8" y="510.0"></text>
</g>
<g>
<title>one.nio.http.Response (441 samples, 0.14%)</title><rect x="902.0" y="515.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="905.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2,002 samples, 0.63%)</title><rect x="903.6" y="515.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.6" y="526.0"></text>
</g>
<g>
<title>byte[] (826 samples, 0.26%)</title><rect x="903.6" y="499.0" width="3.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="906.6" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (677 samples, 0.21%)</title><rect x="906.7" y="499.0" width="2.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="909.7" y="510.0"></text>
</g>
<g>
<title>java.lang.String (499 samples, 0.16%)</title><rect x="909.2" y="499.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="912.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (1,101 samples, 0.35%)</title><rect x="911.0" y="611.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="914.0" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,101 samples, 0.35%)</title><rect x="911.0" y="595.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="914.0" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,101 samples, 0.35%)</title><rect x="911.0" y="579.0" width="4.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="914.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,356 samples, 0.43%)</title><rect x="915.1" y="659.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="918.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl$$Lambda$147/1307955129.apply (1,356 samples, 0.43%)</title><rect x="915.1" y="643.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="918.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ResponseRepresentation.create (1,356 samples, 0.43%)</title><rect x="915.1" y="627.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="918.1" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.temnovochka.ResponseRepresentation (1,356 samples, 0.43%)</title><rect x="915.1" y="611.0" width="5.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="918.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (8,149 samples, 2.56%)</title><rect x="920.2" y="803.0" width="30.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="923.2" y="814.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (150 samples, 0.05%)</title><rect x="920.2" y="787.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="923.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (150 samples, 0.05%)</title><rect x="920.2" y="771.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="923.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$271/440731402.get$Lambda (99 samples, 0.03%)</title><rect x="920.2" y="755.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="923.2" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$271 (99 samples, 0.03%)</title><rect x="920.2" y="739.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="923.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/158199555.linkToTargetMethod (155 samples, 0.05%)</title><rect x="920.8" y="787.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="923.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (155 samples, 0.05%)</title><rect x="920.8" y="771.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="923.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$273/639487537.get$Lambda (155 samples, 0.05%)</title><rect x="920.8" y="755.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="923.8" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$273 (155 samples, 0.05%)</title><rect x="920.8" y="739.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="923.8" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,929 samples, 0.61%)</title><rect x="921.4" y="787.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="924.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$275/741444211.accept (1,650 samples, 0.52%)</title><rect x="921.4" y="771.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="924.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (1,650 samples, 0.52%)</title><rect x="921.4" y="755.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="924.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (1,650 samples, 0.52%)</title><rect x="921.4" y="739.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="924.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (1,650 samples, 0.52%)</title><rect x="921.4" y="723.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="924.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (1,650 samples, 0.52%)</title><rect x="921.4" y="707.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="924.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (1,650 samples, 0.52%)</title><rect x="921.4" y="691.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="924.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,650 samples, 0.52%)</title><rect x="921.4" y="675.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="924.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,650 samples, 0.52%)</title><rect x="921.4" y="659.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="924.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,650 samples, 0.52%)</title><rect x="921.4" y="643.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="924.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,650 samples, 0.52%)</title><rect x="921.4" y="627.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="924.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$170/486873856.run (1,650 samples, 0.52%)</title><rect x="921.4" y="611.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="924.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,650 samples, 0.52%)</title><rect x="921.4" y="595.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="924.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (316 samples, 0.10%)</title><rect x="921.4" y="579.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="924.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (316 samples, 0.10%)</title><rect x="921.4" y="563.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="924.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (316 samples, 0.10%)</title><rect x="921.4" y="547.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="924.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (141 samples, 0.04%)</title><rect x="921.4" y="531.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="924.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (141 samples, 0.04%)</title><rect x="921.4" y="515.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="924.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (141 samples, 0.04%)</title><rect x="921.4" y="499.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="924.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (141 samples, 0.04%)</title><rect x="921.4" y="483.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="924.4" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (141 samples, 0.04%)</title><rect x="921.4" y="467.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="924.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (175 samples, 0.05%)</title><rect x="921.9" y="531.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="924.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (175 samples, 0.05%)</title><rect x="921.9" y="515.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="924.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (175 samples, 0.05%)</title><rect x="921.9" y="499.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="924.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (175 samples, 0.05%)</title><rect x="921.9" y="483.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="924.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (175 samples, 0.05%)</title><rect x="921.9" y="467.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="924.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (175 samples, 0.05%)</title><rect x="921.9" y="451.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="924.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (175 samples, 0.05%)</title><rect x="921.9" y="435.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="924.9" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (175 samples, 0.05%)</title><rect x="921.9" y="419.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="924.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (195 samples, 0.06%)</title><rect x="922.5" y="579.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="925.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (195 samples, 0.06%)</title><rect x="922.5" y="563.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="925.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (195 samples, 0.06%)</title><rect x="922.5" y="547.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="925.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (195 samples, 0.06%)</title><rect x="922.5" y="531.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="925.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (195 samples, 0.06%)</title><rect x="922.5" y="515.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="925.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1524960486.linkToTargetMethod (134 samples, 0.04%)</title><rect x="922.5" y="499.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="925.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1990160809.invoke (134 samples, 0.04%)</title><rect x="922.5" y="483.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="925.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (134 samples, 0.04%)</title><rect x="922.5" y="467.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="925.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (134 samples, 0.04%)</title><rect x="922.5" y="451.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="925.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (134 samples, 0.04%)</title><rect x="922.5" y="435.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="925.5" y="446.0"></text>
</g>
<g>
<title>byte[] (134 samples, 0.04%)</title><rect x="922.5" y="419.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="925.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (127 samples, 0.04%)</title><rect x="923.3" y="579.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="926.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (127 samples, 0.04%)</title><rect x="923.3" y="563.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="926.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (127 samples, 0.04%)</title><rect x="923.3" y="547.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="926.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$285/131615096.get$Lambda (127 samples, 0.04%)</title><rect x="923.3" y="531.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="926.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$285 (127 samples, 0.04%)</title><rect x="923.3" y="515.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="926.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (1,008 samples, 0.32%)</title><rect x="923.7" y="579.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="926.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (466 samples, 0.15%)</title><rect x="923.7" y="563.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="926.7" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (313 samples, 0.10%)</title><rect x="923.7" y="547.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="926.7" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (313 samples, 0.10%)</title><rect x="923.7" y="531.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="926.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (153 samples, 0.05%)</title><rect x="924.9" y="547.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="927.9" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (153 samples, 0.05%)</title><rect x="924.9" y="531.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="927.9" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (153 samples, 0.05%)</title><rect x="924.9" y="515.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="927.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (542 samples, 0.17%)</title><rect x="925.5" y="563.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="928.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$168/1680006905.get (542 samples, 0.17%)</title><rect x="925.5" y="547.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="928.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (542 samples, 0.17%)</title><rect x="925.5" y="531.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="928.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (542 samples, 0.17%)</title><rect x="925.5" y="515.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="928.5" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (541 samples, 0.17%)</title><rect x="925.5" y="499.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="928.5" y="510.0"></text>
</g>
<g>
<title>byte[] (518 samples, 0.16%)</title><rect x="925.6" y="483.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="928.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$283/379100665.accept (279 samples, 0.09%)</title><rect x="927.5" y="771.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="930.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (279 samples, 0.09%)</title><rect x="927.5" y="755.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="930.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$273/639487537.run (279 samples, 0.09%)</title><rect x="927.5" y="739.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="930.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (279 samples, 0.09%)</title><rect x="927.5" y="723.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="930.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (279 samples, 0.09%)</title><rect x="927.5" y="707.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="930.5" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (275 samples, 0.09%)</title><rect x="927.5" y="691.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="930.5" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (275 samples, 0.09%)</title><rect x="927.5" y="675.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="930.5" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (275 samples, 0.09%)</title><rect x="927.5" y="659.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="930.5" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1,316 samples, 0.41%)</title><rect x="928.5" y="787.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="931.5" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (1,316 samples, 0.41%)</title><rect x="928.5" y="771.0" width="4.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="931.5" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (338 samples, 0.11%)</title><rect x="933.4" y="787.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="936.4" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (177 samples, 0.06%)</title><rect x="933.4" y="771.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="936.4" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (177 samples, 0.06%)</title><rect x="933.4" y="755.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="936.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (177 samples, 0.06%)</title><rect x="933.4" y="739.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="936.4" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (177 samples, 0.06%)</title><rect x="933.4" y="723.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="936.4" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (177 samples, 0.06%)</title><rect x="933.4" y="707.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="936.4" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (177 samples, 0.06%)</title><rect x="933.4" y="691.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="936.4" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (177 samples, 0.06%)</title><rect x="933.4" y="675.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="936.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (161 samples, 0.05%)</title><rect x="934.0" y="771.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="937.0" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (161 samples, 0.05%)</title><rect x="934.0" y="755.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="937.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (1,102 samples, 0.35%)</title><rect x="934.6" y="787.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="937.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$172/139126034.run (463 samples, 0.15%)</title><rect x="934.6" y="771.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="937.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (463 samples, 0.15%)</title><rect x="934.6" y="755.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="937.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (463 samples, 0.15%)</title><rect x="934.6" y="739.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="937.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (463 samples, 0.15%)</title><rect x="934.6" y="723.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="937.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (463 samples, 0.15%)</title><rect x="934.6" y="707.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="937.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (463 samples, 0.15%)</title><rect x="934.6" y="691.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="937.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$170/486873856.run (463 samples, 0.15%)</title><rect x="934.6" y="675.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="937.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (463 samples, 0.15%)</title><rect x="934.6" y="659.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="937.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (404 samples, 0.13%)</title><rect x="934.6" y="643.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="937.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (404 samples, 0.13%)</title><rect x="934.6" y="627.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="937.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (180 samples, 0.06%)</title><rect x="934.6" y="611.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="937.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (180 samples, 0.06%)</title><rect x="934.6" y="595.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="937.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (180 samples, 0.06%)</title><rect x="934.6" y="579.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="937.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1524960486.linkToTargetMethod (127 samples, 0.04%)</title><rect x="934.6" y="563.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="937.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1990160809.invoke (127 samples, 0.04%)</title><rect x="934.6" y="547.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="937.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (127 samples, 0.04%)</title><rect x="934.6" y="531.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="937.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (127 samples, 0.04%)</title><rect x="934.6" y="515.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="937.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (127 samples, 0.04%)</title><rect x="934.6" y="499.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="937.6" y="510.0"></text>
</g>
<g>
<title>byte[] (127 samples, 0.04%)</title><rect x="934.6" y="483.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="937.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (224 samples, 0.07%)</title><rect x="935.3" y="611.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="938.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (224 samples, 0.07%)</title><rect x="935.3" y="595.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="938.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (224 samples, 0.07%)</title><rect x="935.3" y="579.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="938.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (224 samples, 0.07%)</title><rect x="935.3" y="563.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="938.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (224 samples, 0.07%)</title><rect x="935.3" y="547.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="938.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (224 samples, 0.07%)</title><rect x="935.3" y="531.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="938.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (224 samples, 0.07%)</title><rect x="935.3" y="515.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="938.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (224 samples, 0.07%)</title><rect x="935.3" y="499.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="938.3" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (224 samples, 0.07%)</title><rect x="935.3" y="483.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="938.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$174/1875493212.run (639 samples, 0.20%)</title><rect x="936.4" y="771.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="939.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (639 samples, 0.20%)</title><rect x="936.4" y="755.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="939.4" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (195 samples, 0.06%)</title><rect x="936.4" y="739.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="939.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (195 samples, 0.06%)</title><rect x="936.4" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="939.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$291/1350458117.get$Lambda (195 samples, 0.06%)</title><rect x="936.4" y="707.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="939.4" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$291 (195 samples, 0.06%)</title><rect x="936.4" y="691.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="939.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (444 samples, 0.14%)</title><rect x="937.1" y="739.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="940.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (444 samples, 0.14%)</title><rect x="937.1" y="723.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="940.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (444 samples, 0.14%)</title><rect x="937.1" y="707.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="940.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (444 samples, 0.14%)</title><rect x="937.1" y="691.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="940.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (444 samples, 0.14%)</title><rect x="937.1" y="675.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="940.1" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (444 samples, 0.14%)</title><rect x="937.1" y="659.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="940.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1,319 samples, 0.41%)</title><rect x="938.7" y="787.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="941.7" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (275 samples, 0.09%)</title><rect x="938.7" y="771.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="941.7" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (275 samples, 0.09%)</title><rect x="938.7" y="755.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="941.7" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (275 samples, 0.09%)</title><rect x="938.7" y="739.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="941.7" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (275 samples, 0.09%)</title><rect x="938.7" y="723.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="941.7" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (275 samples, 0.09%)</title><rect x="938.7" y="707.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="941.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1,044 samples, 0.33%)</title><rect x="939.7" y="771.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="942.7" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (168 samples, 0.05%)</title><rect x="939.7" y="755.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="942.7" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (168 samples, 0.05%)</title><rect x="939.7" y="739.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="942.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$339/1840883670.get$Lambda (168 samples, 0.05%)</title><rect x="939.7" y="723.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="942.7" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$339 (168 samples, 0.05%)</title><rect x="939.7" y="707.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="942.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (109 samples, 0.03%)</title><rect x="940.4" y="755.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="943.4" y="766.0"></text>
</g>
<g>
<title>java/util/Optional.of (109 samples, 0.03%)</title><rect x="940.4" y="739.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="943.4" y="750.0"></text>
</g>
<g>
<title>java.util.Optional (109 samples, 0.03%)</title><rect x="940.4" y="723.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="943.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (767 samples, 0.24%)</title><rect x="940.8" y="755.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="943.8" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (262 samples, 0.08%)</title><rect x="940.8" y="739.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="943.8" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (505 samples, 0.16%)</title><rect x="941.7" y="739.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="944.7" y="750.0"></text>
</g>
<g>
<title>java.util.LinkedList$DescendingIterator (184 samples, 0.06%)</title><rect x="941.7" y="723.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="944.7" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (321 samples, 0.10%)</title><rect x="942.4" y="723.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="945.4" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (321 samples, 0.10%)</title><rect x="942.4" y="707.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="945.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (1,212 samples, 0.38%)</title><rect x="943.6" y="787.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="946.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (118 samples, 0.04%)</title><rect x="943.6" y="771.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="946.6" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (118 samples, 0.04%)</title><rect x="943.6" y="755.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="946.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$269/550850167.get$Lambda (118 samples, 0.04%)</title><rect x="943.6" y="739.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="946.6" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$269 (118 samples, 0.04%)</title><rect x="943.6" y="723.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="946.6" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (632 samples, 0.20%)</title><rect x="944.0" y="771.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="947.0" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (239 samples, 0.07%)</title><rect x="944.0" y="755.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="947.0" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (239 samples, 0.07%)</title><rect x="944.0" y="739.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="947.0" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (393 samples, 0.12%)</title><rect x="944.9" y="755.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="947.9" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (393 samples, 0.12%)</title><rect x="944.9" y="739.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="947.9" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (462 samples, 0.14%)</title><rect x="946.4" y="771.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="949.4" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (462 samples, 0.14%)</title><rect x="946.4" y="755.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="949.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (369 samples, 0.12%)</title><rect x="948.1" y="787.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="951.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (369 samples, 0.12%)</title><rect x="948.1" y="771.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="951.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (369 samples, 0.12%)</title><rect x="948.1" y="755.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="951.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (365 samples, 0.11%)</title><rect x="948.1" y="739.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="951.1" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (105 samples, 0.03%)</title><rect x="948.1" y="723.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="951.1" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (105 samples, 0.03%)</title><rect x="948.1" y="707.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="951.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (260 samples, 0.08%)</title><rect x="948.5" y="723.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="951.5" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (260 samples, 0.08%)</title><rect x="948.5" y="707.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="951.5" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (260 samples, 0.08%)</title><rect x="948.5" y="691.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="951.5" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (260 samples, 0.08%)</title><rect x="948.5" y="675.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="951.5" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (260 samples, 0.08%)</title><rect x="948.5" y="659.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="951.5" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (260 samples, 0.08%)</title><rect x="948.5" y="643.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="951.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (106 samples, 0.03%)</title><rect x="949.5" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="952.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (106 samples, 0.03%)</title><rect x="949.5" y="771.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="952.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (106 samples, 0.03%)</title><rect x="949.5" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="952.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (106 samples, 0.03%)</title><rect x="949.5" y="739.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="952.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (99 samples, 0.03%)</title><rect x="949.5" y="723.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="952.5" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (99 samples, 0.03%)</title><rect x="949.5" y="707.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="952.5" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (148 samples, 0.05%)</title><rect x="949.9" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="952.9" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (148 samples, 0.05%)</title><rect x="949.9" y="771.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="952.9" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (148 samples, 0.05%)</title><rect x="949.9" y="755.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="952.9" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (148 samples, 0.05%)</title><rect x="949.9" y="739.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="952.9" y="750.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (173 samples, 0.05%)</title><rect x="950.4" y="803.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="953.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.createSession (173 samples, 0.05%)</title><rect x="950.4" y="787.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="953.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.createSession (173 samples, 0.05%)</title><rect x="950.4" y="771.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="953.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/StorageSession.&lt;init&gt; (162 samples, 0.05%)</title><rect x="950.5" y="755.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="953.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (162 samples, 0.05%)</title><rect x="950.5" y="739.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="953.5" y="750.0"></text>
</g>
<g>
<title>byte[] (152 samples, 0.05%)</title><rect x="950.5" y="723.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="953.5" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (64,529 samples, 20.25%)</title><rect x="951.1" y="803.0" width="238.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="954.1" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,869 samples, 0.59%)</title><rect x="951.1" y="787.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="954.1" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1,869 samples, 0.59%)</title><rect x="951.1" y="771.0" width="6.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="954.1" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (62,648 samples, 19.66%)</title><rect x="958.0" y="787.0" width="232.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="961.0" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (62,648 samples, 19.66%)</title><rect x="958.0" y="771.0" width="232.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="961.0" y="782.0">one/nio/http/HttpSession.proces..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (62,648 samples, 19.66%)</title><rect x="958.0" y="755.0" width="232.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="961.0" y="766.0">one/nio/http/HttpSession.proces..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (22,035 samples, 6.91%)</title><rect x="958.0" y="739.0" width="81.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="961.0" y="750.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (22,035 samples, 6.91%)</title><rect x="958.0" y="723.0" width="81.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="961.0" y="734.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (20,115 samples, 6.31%)</title><rect x="958.0" y="707.0" width="74.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="961.0" y="718.0">RequestH..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,672 samples, 0.52%)</title><rect x="958.0" y="691.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="961.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,672 samples, 0.52%)</title><rect x="958.0" y="675.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="961.0" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,672 samples, 0.52%)</title><rect x="958.0" y="659.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="961.0" y="670.0"></text>
</g>
<g>
<title>java.lang.String (836 samples, 0.26%)</title><rect x="958.0" y="643.0" width="3.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="961.0" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (836 samples, 0.26%)</title><rect x="961.1" y="643.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="964.1" y="654.0"></text>
</g>
<g>
<title>byte[] (836 samples, 0.26%)</title><rect x="961.1" y="627.0" width="3.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="964.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.entity (18,443 samples, 5.79%)</title><rect x="964.2" y="691.0" width="68.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="967.2" y="702.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (797 samples, 0.25%)</title><rect x="964.2" y="675.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="967.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (797 samples, 0.25%)</title><rect x="964.2" y="659.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="967.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (797 samples, 0.25%)</title><rect x="964.2" y="643.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="967.2" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (797 samples, 0.25%)</title><rect x="964.2" y="627.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="967.2" y="638.0"></text>
</g>
<g>
<title>byte[] (797 samples, 0.25%)</title><rect x="964.2" y="611.0" width="3.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="967.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1992998231.linkToTargetMethod (527 samples, 0.17%)</title><rect x="967.2" y="675.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="970.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1554993291.invokeStatic (527 samples, 0.17%)</title><rect x="967.2" y="659.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="970.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl$$Lambda$109/1485885249.get$Lambda (527 samples, 0.17%)</title><rect x="967.2" y="643.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="970.2" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.temnovochka.ServiceImpl$$Lambda$109 (527 samples, 0.17%)</title><rect x="967.2" y="627.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="970.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/42129038.linkToTargetMethod (890 samples, 0.28%)</title><rect x="969.1" y="675.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="972.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1899094586.invokeStatic (890 samples, 0.28%)</title><rect x="969.1" y="659.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="972.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl$$Lambda$302/1732130861.get$Lambda (890 samples, 0.28%)</title><rect x="969.1" y="643.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="972.1" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.temnovochka.ServiceImpl$$Lambda$302 (890 samples, 0.28%)</title><rect x="969.1" y="627.0" width="3.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="972.1" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,642 samples, 0.52%)</title><rect x="972.4" y="675.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="975.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,642 samples, 0.52%)</title><rect x="972.4" y="659.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="975.4" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,642 samples, 0.52%)</title><rect x="972.4" y="643.0" width="6.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="975.4" y="654.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (1,140 samples, 0.36%)</title><rect x="978.5" y="675.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="981.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,140 samples, 0.36%)</title><rect x="978.5" y="659.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="981.5" y="670.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (1,092 samples, 0.34%)</title><rect x="978.7" y="643.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="981.7" y="654.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (1,092 samples, 0.34%)</title><rect x="978.7" y="627.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="981.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (1,092 samples, 0.34%)</title><rect x="978.7" y="611.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="981.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1,092 samples, 0.34%)</title><rect x="978.7" y="595.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="981.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1,092 samples, 0.34%)</title><rect x="978.7" y="579.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="981.7" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (1,092 samples, 0.34%)</title><rect x="978.7" y="563.0" width="4.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="981.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/EntityWorker.parseReplicas (278 samples, 0.09%)</title><rect x="982.7" y="675.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="985.7" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.temnovochka.EntityWorker$Replicas (278 samples, 0.09%)</title><rect x="982.7" y="659.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="985.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/LoadRouter.selectNodeForKey (10,747 samples, 3.37%)</title><rect x="983.7" y="675.0" width="39.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="986.7" y="686.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (284 samples, 0.09%)</title><rect x="983.7" y="659.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="986.7" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$2.next (284 samples, 0.09%)</title><rect x="983.7" y="643.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="986.7" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (284 samples, 0.09%)</title><rect x="983.7" y="627.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="986.7" y="638.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (284 samples, 0.09%)</title><rect x="983.7" y="611.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="986.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (464 samples, 0.15%)</title><rect x="984.8" y="659.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="987.8" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$2.next (464 samples, 0.15%)</title><rect x="984.8" y="643.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="987.8" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (464 samples, 0.15%)</title><rect x="984.8" y="627.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="987.8" y="638.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (464 samples, 0.15%)</title><rect x="984.8" y="611.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="987.8" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.cycle (560 samples, 0.18%)</title><rect x="986.5" y="659.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="989.5" y="670.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$2 (560 samples, 0.18%)</title><rect x="986.5" y="643.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="989.5" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/TreeRangeMap.get (248 samples, 0.08%)</title><rect x="988.6" y="659.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="991.6" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/TreeRangeMap.getEntry (248 samples, 0.08%)</title><rect x="988.6" y="643.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="991.6" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Cut.belowValue (248 samples, 0.08%)</title><rect x="988.6" y="627.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="991.6" y="638.0"></text>
</g>
<g>
<title>com.google.common.collect.Cut$BelowValue (248 samples, 0.08%)</title><rect x="988.6" y="611.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="991.6" y="622.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (7,762 samples, 2.44%)</title><rect x="989.5" y="659.0" width="28.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="992.5" y="670.0">co..</text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (7,195 samples, 2.26%)</title><rect x="989.5" y="643.0" width="26.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="992.5" y="654.0">c..</text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction.newHasher (7,195 samples, 2.26%)</title><rect x="989.5" y="627.0" width="26.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="992.5" y="638.0">c..</text>
</g>
<g>
<title>com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher (405 samples, 0.13%)</title><rect x="989.5" y="611.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="992.5" y="622.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (867 samples, 0.27%)</title><rect x="991.0" y="611.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="994.0" y="622.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (867 samples, 0.27%)</title><rect x="991.0" y="595.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="994.0" y="606.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractByteHasher.&lt;init&gt; (867 samples, 0.27%)</title><rect x="991.0" y="579.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="994.0" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (867 samples, 0.27%)</title><rect x="991.0" y="563.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="994.0" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (557 samples, 0.17%)</title><rect x="991.0" y="547.0" width="2.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="994.0" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (310 samples, 0.10%)</title><rect x="993.1" y="547.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="996.1" y="558.0"></text>
</g>
<g>
<title>byte[] (310 samples, 0.10%)</title><rect x="993.1" y="531.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="996.1" y="542.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.clone (5,923 samples, 1.86%)</title><rect x="994.2" y="611.0" width="21.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="997.2" y="622.0">j..</text>
</g>
<g>
<title>java.security.MessageDigest$Delegate (388 samples, 0.12%)</title><rect x="994.2" y="595.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="997.2" y="606.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2$SHA256.clone (5,535 samples, 1.74%)</title><rect x="995.6" y="595.0" width="20.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="998.6" y="606.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.clone (5,535 samples, 1.74%)</title><rect x="995.6" y="579.0" width="20.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="998.6" y="590.0"></text>
</g>
<g>
<title>int[] (2,818 samples, 0.88%)</title><rect x="995.6" y="563.0" width="10.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="998.6" y="574.0"></text>
</g>
<g>
<title>int[] (1,000 samples, 0.31%)</title><rect x="1006.1" y="563.0" width="3.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1009.1" y="574.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.clone (1,717 samples, 0.54%)</title><rect x="1009.8" y="563.0" width="6.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1012.8" y="574.0"></text>
</g>
<g>
<title>byte[] (936 samples, 0.29%)</title><rect x="1009.8" y="547.0" width="3.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1012.8" y="558.0"></text>
</g>
<g>
<title>java/security/MessageDigestSpi.clone (781 samples, 0.25%)</title><rect x="1013.3" y="547.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1016.3" y="558.0"></text>
</g>
<g>
<title>sun.security.provider.SHA2$SHA256 (781 samples, 0.25%)</title><rect x="1013.3" y="531.0" width="2.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1016.3" y="542.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.hash (567 samples, 0.18%)</title><rect x="1016.1" y="643.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1019.1" y="654.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (567 samples, 0.18%)</title><rect x="1016.1" y="627.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1019.1" y="638.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (567 samples, 0.18%)</title><rect x="1016.1" y="611.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1019.1" y="622.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (567 samples, 0.18%)</title><rect x="1016.1" y="595.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1019.1" y="606.0"></text>
</g>
<g>
<title>byte[] (567 samples, 0.18%)</title><rect x="1016.1" y="579.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1019.1" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (488 samples, 0.15%)</title><rect x="1018.2" y="659.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1021.2" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (212 samples, 0.07%)</title><rect x="1020.1" y="659.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1023.1" y="670.0"></text>
</g>
<g>
<title>java.lang.Integer (212 samples, 0.07%)</title><rect x="1020.1" y="643.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1023.1" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (729 samples, 0.23%)</title><rect x="1020.8" y="659.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1023.8" y="670.0"></text>
</g>
<g>
<title>java.lang.Object[] (729 samples, 0.23%)</title><rect x="1020.8" y="643.0" width="2.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1023.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.getTimestamp (1,297 samples, 0.41%)</title><rect x="1023.5" y="675.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1026.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,297 samples, 0.41%)</title><rect x="1023.5" y="659.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1026.5" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,297 samples, 0.41%)</title><rect x="1023.5" y="643.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1026.5" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,297 samples, 0.41%)</title><rect x="1023.5" y="627.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1026.5" y="638.0"></text>
</g>
<g>
<title>java.lang.String (551 samples, 0.17%)</title><rect x="1023.5" y="611.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1026.5" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (746 samples, 0.23%)</title><rect x="1025.6" y="611.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1028.6" y="622.0"></text>
</g>
<g>
<title>byte[] (746 samples, 0.23%)</title><rect x="1025.6" y="595.0" width="2.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1028.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/temnovochka/ServiceImpl.isSystemRequest (1,125 samples, 0.35%)</title><rect x="1028.3" y="675.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1031.3" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,125 samples, 0.35%)</title><rect x="1028.3" y="659.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1031.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,125 samples, 0.35%)</title><rect x="1028.3" y="643.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1031.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,125 samples, 0.35%)</title><rect x="1028.3" y="627.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1031.3" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,125 samples, 0.35%)</title><rect x="1028.3" y="611.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1031.3" y="622.0"></text>
</g>
<g>
<title>java.lang.String (571 samples, 0.18%)</title><rect x="1028.3" y="595.0" width="2.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1031.3" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (554 samples, 0.17%)</title><rect x="1030.5" y="595.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1033.5" y="606.0"></text>
</g>
<g>
<title>byte[] (554 samples, 0.17%)</title><rect x="1030.5" y="579.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1033.5" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,920 samples, 0.60%)</title><rect x="1032.5" y="707.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1035.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,920 samples, 0.60%)</title><rect x="1032.5" y="691.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1035.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,920 samples, 0.60%)</title><rect x="1032.5" y="675.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1035.5" y="686.0"></text>
</g>
<g>
<title>java.lang.String (808 samples, 0.25%)</title><rect x="1032.5" y="659.0" width="3.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1035.5" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,112 samples, 0.35%)</title><rect x="1035.5" y="659.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1038.5" y="670.0"></text>
</g>
<g>
<title>byte[] (1,112 samples, 0.35%)</title><rect x="1035.5" y="643.0" width="4.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1038.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8,939 samples, 2.81%)</title><rect x="1039.6" y="739.0" width="33.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1042.6" y="750.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (1,405 samples, 0.44%)</title><rect x="1039.6" y="723.0" width="5.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1042.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2,871 samples, 0.90%)</title><rect x="1044.8" y="723.0" width="10.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1047.8" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (2,871 samples, 0.90%)</title><rect x="1044.8" y="707.0" width="10.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1047.8" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,663 samples, 1.46%)</title><rect x="1055.4" y="723.0" width="17.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1058.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,663 samples, 1.46%)</title><rect x="1055.4" y="707.0" width="17.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1058.4" y="718.0"></text>
</g>
<g>
<title>char[] (2,354 samples, 0.74%)</title><rect x="1055.4" y="691.0" width="8.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1058.4" y="702.0"></text>
</g>
<g>
<title>java.lang.String (908 samples, 0.28%)</title><rect x="1064.2" y="691.0" width="3.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1067.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,401 samples, 0.44%)</title><rect x="1067.5" y="691.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1070.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,401 samples, 0.44%)</title><rect x="1067.5" y="675.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1070.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,401 samples, 0.44%)</title><rect x="1067.5" y="659.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1070.5" y="670.0"></text>
</g>
<g>
<title>byte[] (1,401 samples, 0.44%)</title><rect x="1067.5" y="643.0" width="5.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1070.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (873 samples, 0.27%)</title><rect x="1072.7" y="739.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1075.7" y="750.0"></text>
</g>
<g>
<title>byte[] (873 samples, 0.27%)</title><rect x="1072.7" y="723.0" width="3.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1075.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,593 samples, 0.50%)</title><rect x="1075.9" y="739.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1078.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,593 samples, 0.50%)</title><rect x="1075.9" y="723.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1078.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,593 samples, 0.50%)</title><rect x="1075.9" y="707.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1078.9" y="718.0"></text>
</g>
<g>
<title>java.lang.String (761 samples, 0.24%)</title><rect x="1075.9" y="691.0" width="2.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1078.9" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (832 samples, 0.26%)</title><rect x="1078.8" y="691.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1081.8" y="702.0"></text>
</g>
<g>
<title>byte[] (832 samples, 0.26%)</title><rect x="1078.8" y="675.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1081.8" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (29,208 samples, 9.17%)</title><rect x="1081.8" y="739.0" width="108.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1084.8" y="750.0">one/nio/util/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (29,208 samples, 9.17%)</title><rect x="1081.8" y="723.0" width="108.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1084.8" y="734.0">one/nio/util/..</text>
</g>
<g>
<title>char[] (14,650 samples, 4.60%)</title><rect x="1081.8" y="707.0" width="54.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1084.8" y="718.0">char[]</text>
</g>
<g>
<title>java.lang.String (4,946 samples, 1.55%)</title><rect x="1136.1" y="707.0" width="18.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1139.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9,612 samples, 3.02%)</title><rect x="1154.4" y="707.0" width="35.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1157.4" y="718.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9,612 samples, 3.02%)</title><rect x="1154.4" y="691.0" width="35.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1157.4" y="702.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (9,612 samples, 3.02%)</title><rect x="1154.4" y="675.0" width="35.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1157.4" y="686.0">jav..</text>
</g>
<g>
<title>byte[] (9,612 samples, 3.02%)</title><rect x="1154.4" y="659.0" width="35.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1157.4" y="670.0">byt..</text>
</g>
</g>
</svg>
